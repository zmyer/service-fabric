// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cri-api.proto

#undef _WIN64
#undef WIN32_LEAN_AND_MEAN

#include "cri-api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace runtime {
class VersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionRequest>
      _instance;
} _VersionRequest_default_instance_;
class VersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VersionResponse>
      _instance;
} _VersionResponse_default_instance_;
class DNSConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DNSConfig>
      _instance;
} _DNSConfig_default_instance_;
class PortMappingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortMapping>
      _instance;
} _PortMapping_default_instance_;
class MountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mount>
      _instance;
} _Mount_default_instance_;
class NamespaceOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NamespaceOption>
      _instance;
} _NamespaceOption_default_instance_;
class Int64ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64Value>
      _instance;
} _Int64Value_default_instance_;
class LinuxSandboxSecurityContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxSandboxSecurityContext>
      _instance;
} _LinuxSandboxSecurityContext_default_instance_;
class LinuxPodSandboxConfig_SysctlsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse>
      _instance;
} _LinuxPodSandboxConfig_SysctlsEntry_DoNotUse_default_instance_;
class LinuxPodSandboxConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxPodSandboxConfig>
      _instance;
} _LinuxPodSandboxConfig_default_instance_;
class PodSandboxMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxMetadata>
      _instance;
} _PodSandboxMetadata_default_instance_;
class PodSandboxConfig_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxConfig_LabelsEntry_DoNotUse>
      _instance;
} _PodSandboxConfig_LabelsEntry_DoNotUse_default_instance_;
class PodSandboxConfig_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxConfig_AnnotationsEntry_DoNotUse>
      _instance;
} _PodSandboxConfig_AnnotationsEntry_DoNotUse_default_instance_;
class PodSandboxConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxConfig>
      _instance;
} _PodSandboxConfig_default_instance_;
class RunPodSandboxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPodSandboxRequest>
      _instance;
} _RunPodSandboxRequest_default_instance_;
class RunPodSandboxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RunPodSandboxResponse>
      _instance;
} _RunPodSandboxResponse_default_instance_;
class StopPodSandboxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopPodSandboxRequest>
      _instance;
} _StopPodSandboxRequest_default_instance_;
class StopPodSandboxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopPodSandboxResponse>
      _instance;
} _StopPodSandboxResponse_default_instance_;
class RemovePodSandboxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePodSandboxRequest>
      _instance;
} _RemovePodSandboxRequest_default_instance_;
class RemovePodSandboxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemovePodSandboxResponse>
      _instance;
} _RemovePodSandboxResponse_default_instance_;
class PodSandboxStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatusRequest>
      _instance;
} _PodSandboxStatusRequest_default_instance_;
class PodSandboxNetworkStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxNetworkStatus>
      _instance;
} _PodSandboxNetworkStatus_default_instance_;
class NamespaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Namespace>
      _instance;
} _Namespace_default_instance_;
class LinuxPodSandboxStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxPodSandboxStatus>
      _instance;
} _LinuxPodSandboxStatus_default_instance_;
class PodSandboxStatus_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatus_LabelsEntry_DoNotUse>
      _instance;
} _PodSandboxStatus_LabelsEntry_DoNotUse_default_instance_;
class PodSandboxStatus_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatus_AnnotationsEntry_DoNotUse>
      _instance;
} _PodSandboxStatus_AnnotationsEntry_DoNotUse_default_instance_;
class PodSandboxStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatus>
      _instance;
} _PodSandboxStatus_default_instance_;
class PodSandboxStatusResponse_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatusResponse_InfoEntry_DoNotUse>
      _instance;
} _PodSandboxStatusResponse_InfoEntry_DoNotUse_default_instance_;
class PodSandboxStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStatusResponse>
      _instance;
} _PodSandboxStatusResponse_default_instance_;
class PodSandboxStateValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxStateValue>
      _instance;
} _PodSandboxStateValue_default_instance_;
class PodSandboxFilter_LabelSelectorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxFilter_LabelSelectorEntry_DoNotUse>
      _instance;
} _PodSandboxFilter_LabelSelectorEntry_DoNotUse_default_instance_;
class PodSandboxFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandboxFilter>
      _instance;
} _PodSandboxFilter_default_instance_;
class ListPodSandboxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListPodSandboxRequest>
      _instance;
} _ListPodSandboxRequest_default_instance_;
class PodSandbox_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandbox_LabelsEntry_DoNotUse>
      _instance;
} _PodSandbox_LabelsEntry_DoNotUse_default_instance_;
class PodSandbox_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandbox_AnnotationsEntry_DoNotUse>
      _instance;
} _PodSandbox_AnnotationsEntry_DoNotUse_default_instance_;
class PodSandboxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PodSandbox>
      _instance;
} _PodSandbox_default_instance_;
class ListPodSandboxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListPodSandboxResponse>
      _instance;
} _ListPodSandboxResponse_default_instance_;
class ImageSpecDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageSpec>
      _instance;
} _ImageSpec_default_instance_;
class KeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValue>
      _instance;
} _KeyValue_default_instance_;
class LinuxContainerResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxContainerResources>
      _instance;
} _LinuxContainerResources_default_instance_;
class SELinuxOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SELinuxOption>
      _instance;
} _SELinuxOption_default_instance_;
class CapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Capability>
      _instance;
} _Capability_default_instance_;
class LinuxContainerSecurityContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxContainerSecurityContext>
      _instance;
} _LinuxContainerSecurityContext_default_instance_;
class LinuxContainerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LinuxContainerConfig>
      _instance;
} _LinuxContainerConfig_default_instance_;
class ContainerMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerMetadata>
      _instance;
} _ContainerMetadata_default_instance_;
class DeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Device>
      _instance;
} _Device_default_instance_;
class ContainerConfig_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerConfig_LabelsEntry_DoNotUse>
      _instance;
} _ContainerConfig_LabelsEntry_DoNotUse_default_instance_;
class ContainerConfig_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerConfig_AnnotationsEntry_DoNotUse>
      _instance;
} _ContainerConfig_AnnotationsEntry_DoNotUse_default_instance_;
class ContainerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerConfig>
      _instance;
} _ContainerConfig_default_instance_;
class CreateContainerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateContainerRequest>
      _instance;
} _CreateContainerRequest_default_instance_;
class CreateContainerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateContainerResponse>
      _instance;
} _CreateContainerResponse_default_instance_;
class StartContainerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartContainerRequest>
      _instance;
} _StartContainerRequest_default_instance_;
class StartContainerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartContainerResponse>
      _instance;
} _StartContainerResponse_default_instance_;
class StopContainerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopContainerRequest>
      _instance;
} _StopContainerRequest_default_instance_;
class StopContainerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopContainerResponse>
      _instance;
} _StopContainerResponse_default_instance_;
class RemoveContainerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveContainerRequest>
      _instance;
} _RemoveContainerRequest_default_instance_;
class RemoveContainerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveContainerResponse>
      _instance;
} _RemoveContainerResponse_default_instance_;
class ContainerStateValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStateValue>
      _instance;
} _ContainerStateValue_default_instance_;
class ContainerFilter_LabelSelectorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerFilter_LabelSelectorEntry_DoNotUse>
      _instance;
} _ContainerFilter_LabelSelectorEntry_DoNotUse_default_instance_;
class ContainerFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerFilter>
      _instance;
} _ContainerFilter_default_instance_;
class ListContainersRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListContainersRequest>
      _instance;
} _ListContainersRequest_default_instance_;
class Container_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Container_LabelsEntry_DoNotUse>
      _instance;
} _Container_LabelsEntry_DoNotUse_default_instance_;
class Container_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Container_AnnotationsEntry_DoNotUse>
      _instance;
} _Container_AnnotationsEntry_DoNotUse_default_instance_;
class ContainerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Container>
      _instance;
} _Container_default_instance_;
class ListContainersResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListContainersResponse>
      _instance;
} _ListContainersResponse_default_instance_;
class ContainerStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatusRequest>
      _instance;
} _ContainerStatusRequest_default_instance_;
class ContainerStatus_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatus_LabelsEntry_DoNotUse>
      _instance;
} _ContainerStatus_LabelsEntry_DoNotUse_default_instance_;
class ContainerStatus_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatus_AnnotationsEntry_DoNotUse>
      _instance;
} _ContainerStatus_AnnotationsEntry_DoNotUse_default_instance_;
class ContainerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatus>
      _instance;
} _ContainerStatus_default_instance_;
class ContainerStatusResponse_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatusResponse_InfoEntry_DoNotUse>
      _instance;
} _ContainerStatusResponse_InfoEntry_DoNotUse_default_instance_;
class ContainerStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatusResponse>
      _instance;
} _ContainerStatusResponse_default_instance_;
class UpdateContainerResourcesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateContainerResourcesRequest>
      _instance;
} _UpdateContainerResourcesRequest_default_instance_;
class UpdateContainerResourcesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateContainerResourcesResponse>
      _instance;
} _UpdateContainerResourcesResponse_default_instance_;
class ExecSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecSyncRequest>
      _instance;
} _ExecSyncRequest_default_instance_;
class ExecSyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecSyncResponse>
      _instance;
} _ExecSyncResponse_default_instance_;
class ExecRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecRequest>
      _instance;
} _ExecRequest_default_instance_;
class ExecResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecResponse>
      _instance;
} _ExecResponse_default_instance_;
class AttachRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachRequest>
      _instance;
} _AttachRequest_default_instance_;
class AttachResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachResponse>
      _instance;
} _AttachResponse_default_instance_;
class PortForwardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortForwardRequest>
      _instance;
} _PortForwardRequest_default_instance_;
class PortForwardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortForwardResponse>
      _instance;
} _PortForwardResponse_default_instance_;
class ImageFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageFilter>
      _instance;
} _ImageFilter_default_instance_;
class ListImagesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListImagesRequest>
      _instance;
} _ListImagesRequest_default_instance_;
class ImageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Image>
      _instance;
} _Image_default_instance_;
class ListImagesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListImagesResponse>
      _instance;
} _ListImagesResponse_default_instance_;
class ImageStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageStatusRequest>
      _instance;
} _ImageStatusRequest_default_instance_;
class ImageStatusResponse_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageStatusResponse_InfoEntry_DoNotUse>
      _instance;
} _ImageStatusResponse_InfoEntry_DoNotUse_default_instance_;
class ImageStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageStatusResponse>
      _instance;
} _ImageStatusResponse_default_instance_;
class AuthConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthConfig>
      _instance;
} _AuthConfig_default_instance_;
class PullImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullImageRequest>
      _instance;
} _PullImageRequest_default_instance_;
class PullImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PullImageResponse>
      _instance;
} _PullImageResponse_default_instance_;
class RemoveImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveImageRequest>
      _instance;
} _RemoveImageRequest_default_instance_;
class RemoveImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveImageResponse>
      _instance;
} _RemoveImageResponse_default_instance_;
class NetworkConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetworkConfig>
      _instance;
} _NetworkConfig_default_instance_;
class RuntimeConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeConfig>
      _instance;
} _RuntimeConfig_default_instance_;
class UpdateRuntimeConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRuntimeConfigRequest>
      _instance;
} _UpdateRuntimeConfigRequest_default_instance_;
class UpdateRuntimeConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRuntimeConfigResponse>
      _instance;
} _UpdateRuntimeConfigResponse_default_instance_;
class RuntimeConditionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeCondition>
      _instance;
} _RuntimeCondition_default_instance_;
class RuntimeStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RuntimeStatus>
      _instance;
} _RuntimeStatus_default_instance_;
class StatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusRequest>
      _instance;
} _StatusRequest_default_instance_;
class StatusResponse_InfoEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusResponse_InfoEntry_DoNotUse>
      _instance;
} _StatusResponse_InfoEntry_DoNotUse_default_instance_;
class StatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatusResponse>
      _instance;
} _StatusResponse_default_instance_;
class ImageFsInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageFsInfoRequest>
      _instance;
} _ImageFsInfoRequest_default_instance_;
class UInt64ValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UInt64Value>
      _instance;
} _UInt64Value_default_instance_;
class StorageIdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorageIdentifier>
      _instance;
} _StorageIdentifier_default_instance_;
class FilesystemUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FilesystemUsage>
      _instance;
} _FilesystemUsage_default_instance_;
class ImageFsInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageFsInfoResponse>
      _instance;
} _ImageFsInfoResponse_default_instance_;
class ContainerStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatsRequest>
      _instance;
} _ContainerStatsRequest_default_instance_;
class ContainerStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatsResponse>
      _instance;
} _ContainerStatsResponse_default_instance_;
class ListContainerStatsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListContainerStatsRequest>
      _instance;
} _ListContainerStatsRequest_default_instance_;
class ContainerStatsFilter_LabelSelectorEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatsFilter_LabelSelectorEntry_DoNotUse>
      _instance;
} _ContainerStatsFilter_LabelSelectorEntry_DoNotUse_default_instance_;
class ContainerStatsFilterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStatsFilter>
      _instance;
} _ContainerStatsFilter_default_instance_;
class ListContainerStatsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListContainerStatsResponse>
      _instance;
} _ListContainerStatsResponse_default_instance_;
class ContainerAttributes_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerAttributes_LabelsEntry_DoNotUse>
      _instance;
} _ContainerAttributes_LabelsEntry_DoNotUse_default_instance_;
class ContainerAttributes_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerAttributes_AnnotationsEntry_DoNotUse>
      _instance;
} _ContainerAttributes_AnnotationsEntry_DoNotUse_default_instance_;
class ContainerAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerAttributes>
      _instance;
} _ContainerAttributes_default_instance_;
class ContainerStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContainerStats>
      _instance;
} _ContainerStats_default_instance_;
class CpuUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CpuUsage>
      _instance;
} _CpuUsage_default_instance_;
class MemoryUsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MemoryUsage>
      _instance;
} _MemoryUsage_default_instance_;
}  // namespace runtime
namespace protobuf_cri_2dapi_2eproto {
void InitDefaultsVersionRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_VersionRequest_default_instance_;
    new (ptr) ::runtime::VersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::VersionRequest::InitAsDefaultInstance();
}

void InitDefaultsVersionRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVersionRequestImpl);
}

void InitDefaultsVersionResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_VersionResponse_default_instance_;
    new (ptr) ::runtime::VersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::VersionResponse::InitAsDefaultInstance();
}

void InitDefaultsVersionResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVersionResponseImpl);
}

void InitDefaultsDNSConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_DNSConfig_default_instance_;
    new (ptr) ::runtime::DNSConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::DNSConfig::InitAsDefaultInstance();
}

void InitDefaultsDNSConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDNSConfigImpl);
}

void InitDefaultsPortMappingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PortMapping_default_instance_;
    new (ptr) ::runtime::PortMapping();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PortMapping::InitAsDefaultInstance();
}

void InitDefaultsPortMapping() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPortMappingImpl);
}

void InitDefaultsMountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Mount_default_instance_;
    new (ptr) ::runtime::Mount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Mount::InitAsDefaultInstance();
}

void InitDefaultsMount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMountImpl);
}

void InitDefaultsNamespaceOptionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_NamespaceOption_default_instance_;
    new (ptr) ::runtime::NamespaceOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::NamespaceOption::InitAsDefaultInstance();
}

void InitDefaultsNamespaceOption() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNamespaceOptionImpl);
}

void InitDefaultsInt64ValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Int64Value_default_instance_;
    new (ptr) ::runtime::Int64Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Int64Value::InitAsDefaultInstance();
}

void InitDefaultsInt64Value() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInt64ValueImpl);
}

void InitDefaultsLinuxSandboxSecurityContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsNamespaceOption();
  protobuf_cri_2dapi_2eproto::InitDefaultsSELinuxOption();
  protobuf_cri_2dapi_2eproto::InitDefaultsInt64Value();
  {
    void* ptr = &::runtime::_LinuxSandboxSecurityContext_default_instance_;
    new (ptr) ::runtime::LinuxSandboxSecurityContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxSandboxSecurityContext::InitAsDefaultInstance();
}

void InitDefaultsLinuxSandboxSecurityContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxSandboxSecurityContextImpl);
}

void InitDefaultsLinuxPodSandboxConfig_SysctlsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_LinuxPodSandboxConfig_SysctlsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse();
  }
  ::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsLinuxPodSandboxConfig_SysctlsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxPodSandboxConfig_SysctlsEntry_DoNotUseImpl);
}

void InitDefaultsLinuxPodSandboxConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxSandboxSecurityContext();
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxConfig_SysctlsEntry_DoNotUse();
  {
    void* ptr = &::runtime::_LinuxPodSandboxConfig_default_instance_;
    new (ptr) ::runtime::LinuxPodSandboxConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxPodSandboxConfig::InitAsDefaultInstance();
}

void InitDefaultsLinuxPodSandboxConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxPodSandboxConfigImpl);
}

void InitDefaultsPodSandboxMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxMetadata_default_instance_;
    new (ptr) ::runtime::PodSandboxMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxMetadata::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxMetadataImpl);
}

void InitDefaultsPodSandboxConfig_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxConfig_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxConfig_LabelsEntry_DoNotUse();
  }
  ::runtime::PodSandboxConfig_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxConfig_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxConfig_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxConfig_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxConfig_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse();
  }
  ::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxConfig_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxConfig_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsDNSConfig();
  protobuf_cri_2dapi_2eproto::InitDefaultsPortMapping();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig_AnnotationsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxConfig();
  {
    void* ptr = &::runtime::_PodSandboxConfig_default_instance_;
    new (ptr) ::runtime::PodSandboxConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxConfig::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxConfigImpl);
}

void InitDefaultsRunPodSandboxRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig();
  {
    void* ptr = &::runtime::_RunPodSandboxRequest_default_instance_;
    new (ptr) ::runtime::RunPodSandboxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RunPodSandboxRequest::InitAsDefaultInstance();
}

void InitDefaultsRunPodSandboxRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPodSandboxRequestImpl);
}

void InitDefaultsRunPodSandboxResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RunPodSandboxResponse_default_instance_;
    new (ptr) ::runtime::RunPodSandboxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RunPodSandboxResponse::InitAsDefaultInstance();
}

void InitDefaultsRunPodSandboxResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRunPodSandboxResponseImpl);
}

void InitDefaultsStopPodSandboxRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StopPodSandboxRequest_default_instance_;
    new (ptr) ::runtime::StopPodSandboxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StopPodSandboxRequest::InitAsDefaultInstance();
}

void InitDefaultsStopPodSandboxRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopPodSandboxRequestImpl);
}

void InitDefaultsStopPodSandboxResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StopPodSandboxResponse_default_instance_;
    new (ptr) ::runtime::StopPodSandboxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StopPodSandboxResponse::InitAsDefaultInstance();
}

void InitDefaultsStopPodSandboxResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopPodSandboxResponseImpl);
}

void InitDefaultsRemovePodSandboxRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RemovePodSandboxRequest_default_instance_;
    new (ptr) ::runtime::RemovePodSandboxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemovePodSandboxRequest::InitAsDefaultInstance();
}

void InitDefaultsRemovePodSandboxRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemovePodSandboxRequestImpl);
}

void InitDefaultsRemovePodSandboxResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RemovePodSandboxResponse_default_instance_;
    new (ptr) ::runtime::RemovePodSandboxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemovePodSandboxResponse::InitAsDefaultInstance();
}

void InitDefaultsRemovePodSandboxResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemovePodSandboxResponseImpl);
}

void InitDefaultsPodSandboxStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxStatusRequest_default_instance_;
    new (ptr) ::runtime::PodSandboxStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatusRequestImpl);
}

void InitDefaultsPodSandboxNetworkStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxNetworkStatus_default_instance_;
    new (ptr) ::runtime::PodSandboxNetworkStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxNetworkStatus::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxNetworkStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxNetworkStatusImpl);
}

void InitDefaultsNamespaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsNamespaceOption();
  {
    void* ptr = &::runtime::_Namespace_default_instance_;
    new (ptr) ::runtime::Namespace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Namespace::InitAsDefaultInstance();
}

void InitDefaultsNamespace() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNamespaceImpl);
}

void InitDefaultsLinuxPodSandboxStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsNamespace();
  {
    void* ptr = &::runtime::_LinuxPodSandboxStatus_default_instance_;
    new (ptr) ::runtime::LinuxPodSandboxStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxPodSandboxStatus::InitAsDefaultInstance();
}

void InitDefaultsLinuxPodSandboxStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxPodSandboxStatusImpl);
}

void InitDefaultsPodSandboxStatus_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxStatus_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxStatus_LabelsEntry_DoNotUse();
  }
  ::runtime::PodSandboxStatus_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatus_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatus_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxStatus_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxStatus_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse();
  }
  ::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatus_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatus_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxNetworkStatus();
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxStatus();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatus_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatus_AnnotationsEntry_DoNotUse();
  {
    void* ptr = &::runtime::_PodSandboxStatus_default_instance_;
    new (ptr) ::runtime::PodSandboxStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxStatus::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatusImpl);
}

void InitDefaultsPodSandboxStatusResponse_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxStatusResponse_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse();
  }
  ::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatusResponse_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatusResponse_InfoEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatus();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatusResponse_InfoEntry_DoNotUse();
  {
    void* ptr = &::runtime::_PodSandboxStatusResponse_default_instance_;
    new (ptr) ::runtime::PodSandboxStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStatusResponseImpl);
}

void InitDefaultsPodSandboxStateValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxStateValue_default_instance_;
    new (ptr) ::runtime::PodSandboxStateValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxStateValue::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxStateValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxStateValueImpl);
}

void InitDefaultsPodSandboxFilter_LabelSelectorEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandboxFilter_LabelSelectorEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse();
  }
  ::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxFilter_LabelSelectorEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxFilter_LabelSelectorEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStateValue();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxFilter_LabelSelectorEntry_DoNotUse();
  {
    void* ptr = &::runtime::_PodSandboxFilter_default_instance_;
    new (ptr) ::runtime::PodSandboxFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandboxFilter::InitAsDefaultInstance();
}

void InitDefaultsPodSandboxFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxFilterImpl);
}

void InitDefaultsListPodSandboxRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxFilter();
  {
    void* ptr = &::runtime::_ListPodSandboxRequest_default_instance_;
    new (ptr) ::runtime::ListPodSandboxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListPodSandboxRequest::InitAsDefaultInstance();
}

void InitDefaultsListPodSandboxRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListPodSandboxRequestImpl);
}

void InitDefaultsPodSandbox_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandbox_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandbox_LabelsEntry_DoNotUse();
  }
  ::runtime::PodSandbox_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandbox_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandbox_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandbox_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PodSandbox_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::PodSandbox_AnnotationsEntry_DoNotUse();
  }
  ::runtime::PodSandbox_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsPodSandbox_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandbox_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsPodSandboxImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandbox_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandbox_AnnotationsEntry_DoNotUse();
  {
    void* ptr = &::runtime::_PodSandbox_default_instance_;
    new (ptr) ::runtime::PodSandbox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PodSandbox::InitAsDefaultInstance();
}

void InitDefaultsPodSandbox() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPodSandboxImpl);
}

void InitDefaultsListPodSandboxResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandbox();
  {
    void* ptr = &::runtime::_ListPodSandboxResponse_default_instance_;
    new (ptr) ::runtime::ListPodSandboxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListPodSandboxResponse::InitAsDefaultInstance();
}

void InitDefaultsListPodSandboxResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListPodSandboxResponseImpl);
}

void InitDefaultsImageSpecImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ImageSpec_default_instance_;
    new (ptr) ::runtime::ImageSpec();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageSpec::InitAsDefaultInstance();
}

void InitDefaultsImageSpec() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageSpecImpl);
}

void InitDefaultsKeyValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_KeyValue_default_instance_;
    new (ptr) ::runtime::KeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::KeyValue::InitAsDefaultInstance();
}

void InitDefaultsKeyValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyValueImpl);
}

void InitDefaultsLinuxContainerResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_LinuxContainerResources_default_instance_;
    new (ptr) ::runtime::LinuxContainerResources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxContainerResources::InitAsDefaultInstance();
}

void InitDefaultsLinuxContainerResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxContainerResourcesImpl);
}

void InitDefaultsSELinuxOptionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_SELinuxOption_default_instance_;
    new (ptr) ::runtime::SELinuxOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::SELinuxOption::InitAsDefaultInstance();
}

void InitDefaultsSELinuxOption() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSELinuxOptionImpl);
}

void InitDefaultsCapabilityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Capability_default_instance_;
    new (ptr) ::runtime::Capability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Capability::InitAsDefaultInstance();
}

void InitDefaultsCapability() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCapabilityImpl);
}

void InitDefaultsLinuxContainerSecurityContextImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsCapability();
  protobuf_cri_2dapi_2eproto::InitDefaultsNamespaceOption();
  protobuf_cri_2dapi_2eproto::InitDefaultsSELinuxOption();
  protobuf_cri_2dapi_2eproto::InitDefaultsInt64Value();
  {
    void* ptr = &::runtime::_LinuxContainerSecurityContext_default_instance_;
    new (ptr) ::runtime::LinuxContainerSecurityContext();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxContainerSecurityContext::InitAsDefaultInstance();
}

void InitDefaultsLinuxContainerSecurityContext() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxContainerSecurityContextImpl);
}

void InitDefaultsLinuxContainerConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerResources();
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerSecurityContext();
  {
    void* ptr = &::runtime::_LinuxContainerConfig_default_instance_;
    new (ptr) ::runtime::LinuxContainerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::LinuxContainerConfig::InitAsDefaultInstance();
}

void InitDefaultsLinuxContainerConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLinuxContainerConfigImpl);
}

void InitDefaultsContainerMetadataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerMetadata_default_instance_;
    new (ptr) ::runtime::ContainerMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerMetadata::InitAsDefaultInstance();
}

void InitDefaultsContainerMetadata() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerMetadataImpl);
}

void InitDefaultsDeviceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Device_default_instance_;
    new (ptr) ::runtime::Device();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Device::InitAsDefaultInstance();
}

void InitDefaultsDevice() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeviceImpl);
}

void InitDefaultsContainerConfig_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerConfig_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerConfig_LabelsEntry_DoNotUse();
  }
  ::runtime::ContainerConfig_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerConfig_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerConfig_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsContainerConfig_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerConfig_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerConfig_AnnotationsEntry_DoNotUse();
  }
  ::runtime::ContainerConfig_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerConfig_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerConfig_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsContainerConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  protobuf_cri_2dapi_2eproto::InitDefaultsKeyValue();
  protobuf_cri_2dapi_2eproto::InitDefaultsMount();
  protobuf_cri_2dapi_2eproto::InitDefaultsDevice();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerConfig_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerConfig_AnnotationsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerConfig();
  {
    void* ptr = &::runtime::_ContainerConfig_default_instance_;
    new (ptr) ::runtime::ContainerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerConfig::InitAsDefaultInstance();
}

void InitDefaultsContainerConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerConfigImpl);
}

void InitDefaultsCreateContainerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerConfig();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig();
  {
    void* ptr = &::runtime::_CreateContainerRequest_default_instance_;
    new (ptr) ::runtime::CreateContainerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::CreateContainerRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateContainerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateContainerRequestImpl);
}

void InitDefaultsCreateContainerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_CreateContainerResponse_default_instance_;
    new (ptr) ::runtime::CreateContainerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::CreateContainerResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateContainerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateContainerResponseImpl);
}

void InitDefaultsStartContainerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StartContainerRequest_default_instance_;
    new (ptr) ::runtime::StartContainerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StartContainerRequest::InitAsDefaultInstance();
}

void InitDefaultsStartContainerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartContainerRequestImpl);
}

void InitDefaultsStartContainerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StartContainerResponse_default_instance_;
    new (ptr) ::runtime::StartContainerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StartContainerResponse::InitAsDefaultInstance();
}

void InitDefaultsStartContainerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartContainerResponseImpl);
}

void InitDefaultsStopContainerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StopContainerRequest_default_instance_;
    new (ptr) ::runtime::StopContainerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StopContainerRequest::InitAsDefaultInstance();
}

void InitDefaultsStopContainerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopContainerRequestImpl);
}

void InitDefaultsStopContainerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StopContainerResponse_default_instance_;
    new (ptr) ::runtime::StopContainerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StopContainerResponse::InitAsDefaultInstance();
}

void InitDefaultsStopContainerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStopContainerResponseImpl);
}

void InitDefaultsRemoveContainerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RemoveContainerRequest_default_instance_;
    new (ptr) ::runtime::RemoveContainerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemoveContainerRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveContainerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveContainerRequestImpl);
}

void InitDefaultsRemoveContainerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RemoveContainerResponse_default_instance_;
    new (ptr) ::runtime::RemoveContainerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemoveContainerResponse::InitAsDefaultInstance();
}

void InitDefaultsRemoveContainerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveContainerResponseImpl);
}

void InitDefaultsContainerStateValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStateValue_default_instance_;
    new (ptr) ::runtime::ContainerStateValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStateValue::InitAsDefaultInstance();
}

void InitDefaultsContainerStateValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStateValueImpl);
}

void InitDefaultsContainerFilter_LabelSelectorEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerFilter_LabelSelectorEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse();
  }
  ::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerFilter_LabelSelectorEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerFilter_LabelSelectorEntry_DoNotUseImpl);
}

void InitDefaultsContainerFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStateValue();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerFilter_LabelSelectorEntry_DoNotUse();
  {
    void* ptr = &::runtime::_ContainerFilter_default_instance_;
    new (ptr) ::runtime::ContainerFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerFilter::InitAsDefaultInstance();
}

void InitDefaultsContainerFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerFilterImpl);
}

void InitDefaultsListContainersRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerFilter();
  {
    void* ptr = &::runtime::_ListContainersRequest_default_instance_;
    new (ptr) ::runtime::ListContainersRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListContainersRequest::InitAsDefaultInstance();
}

void InitDefaultsListContainersRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListContainersRequestImpl);
}

void InitDefaultsContainer_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Container_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::Container_LabelsEntry_DoNotUse();
  }
  ::runtime::Container_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainer_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainer_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsContainer_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_Container_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::Container_AnnotationsEntry_DoNotUse();
  }
  ::runtime::Container_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainer_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainer_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsContainerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainer_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainer_AnnotationsEntry_DoNotUse();
  {
    void* ptr = &::runtime::_Container_default_instance_;
    new (ptr) ::runtime::Container();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Container::InitAsDefaultInstance();
}

void InitDefaultsContainer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerImpl);
}

void InitDefaultsListContainersResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainer();
  {
    void* ptr = &::runtime::_ListContainersResponse_default_instance_;
    new (ptr) ::runtime::ListContainersResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListContainersResponse::InitAsDefaultInstance();
}

void InitDefaultsListContainersResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListContainersResponseImpl);
}

void InitDefaultsContainerStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatusRequest_default_instance_;
    new (ptr) ::runtime::ContainerStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsContainerStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatusRequestImpl);
}

void InitDefaultsContainerStatus_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatus_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerStatus_LabelsEntry_DoNotUse();
  }
  ::runtime::ContainerStatus_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatus_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatus_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsContainerStatus_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatus_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerStatus_AnnotationsEntry_DoNotUse();
  }
  ::runtime::ContainerStatus_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatus_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatus_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsContainerStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatus_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatus_AnnotationsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsMount();
  {
    void* ptr = &::runtime::_ContainerStatus_default_instance_;
    new (ptr) ::runtime::ContainerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatus::InitAsDefaultInstance();
}

void InitDefaultsContainerStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatusImpl);
}

void InitDefaultsContainerStatusResponse_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatusResponse_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerStatusResponse_InfoEntry_DoNotUse();
  }
  ::runtime::ContainerStatusResponse_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatusResponse_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatusResponse_InfoEntry_DoNotUseImpl);
}

void InitDefaultsContainerStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatus();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatusResponse_InfoEntry_DoNotUse();
  {
    void* ptr = &::runtime::_ContainerStatusResponse_default_instance_;
    new (ptr) ::runtime::ContainerStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatusResponseImpl);
}

void InitDefaultsUpdateContainerResourcesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerResources();
  {
    void* ptr = &::runtime::_UpdateContainerResourcesRequest_default_instance_;
    new (ptr) ::runtime::UpdateContainerResourcesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::UpdateContainerResourcesRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateContainerResourcesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateContainerResourcesRequestImpl);
}

void InitDefaultsUpdateContainerResourcesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_UpdateContainerResourcesResponse_default_instance_;
    new (ptr) ::runtime::UpdateContainerResourcesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::UpdateContainerResourcesResponse::InitAsDefaultInstance();
}

void InitDefaultsUpdateContainerResourcesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateContainerResourcesResponseImpl);
}

void InitDefaultsExecSyncRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ExecSyncRequest_default_instance_;
    new (ptr) ::runtime::ExecSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ExecSyncRequest::InitAsDefaultInstance();
}

void InitDefaultsExecSyncRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecSyncRequestImpl);
}

void InitDefaultsExecSyncResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ExecSyncResponse_default_instance_;
    new (ptr) ::runtime::ExecSyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ExecSyncResponse::InitAsDefaultInstance();
}

void InitDefaultsExecSyncResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecSyncResponseImpl);
}

void InitDefaultsExecRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ExecRequest_default_instance_;
    new (ptr) ::runtime::ExecRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ExecRequest::InitAsDefaultInstance();
}

void InitDefaultsExecRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecRequestImpl);
}

void InitDefaultsExecResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ExecResponse_default_instance_;
    new (ptr) ::runtime::ExecResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ExecResponse::InitAsDefaultInstance();
}

void InitDefaultsExecResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecResponseImpl);
}

void InitDefaultsAttachRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_AttachRequest_default_instance_;
    new (ptr) ::runtime::AttachRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::AttachRequest::InitAsDefaultInstance();
}

void InitDefaultsAttachRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttachRequestImpl);
}

void InitDefaultsAttachResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_AttachResponse_default_instance_;
    new (ptr) ::runtime::AttachResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::AttachResponse::InitAsDefaultInstance();
}

void InitDefaultsAttachResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAttachResponseImpl);
}

void InitDefaultsPortForwardRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PortForwardRequest_default_instance_;
    new (ptr) ::runtime::PortForwardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PortForwardRequest::InitAsDefaultInstance();
}

void InitDefaultsPortForwardRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPortForwardRequestImpl);
}

void InitDefaultsPortForwardResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PortForwardResponse_default_instance_;
    new (ptr) ::runtime::PortForwardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PortForwardResponse::InitAsDefaultInstance();
}

void InitDefaultsPortForwardResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPortForwardResponseImpl);
}

void InitDefaultsImageFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  {
    void* ptr = &::runtime::_ImageFilter_default_instance_;
    new (ptr) ::runtime::ImageFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageFilter::InitAsDefaultInstance();
}

void InitDefaultsImageFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageFilterImpl);
}

void InitDefaultsListImagesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImageFilter();
  {
    void* ptr = &::runtime::_ListImagesRequest_default_instance_;
    new (ptr) ::runtime::ListImagesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListImagesRequest::InitAsDefaultInstance();
}

void InitDefaultsListImagesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListImagesRequestImpl);
}

void InitDefaultsImageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsInt64Value();
  {
    void* ptr = &::runtime::_Image_default_instance_;
    new (ptr) ::runtime::Image();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::Image::InitAsDefaultInstance();
}

void InitDefaultsImage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageImpl);
}

void InitDefaultsListImagesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImage();
  {
    void* ptr = &::runtime::_ListImagesResponse_default_instance_;
    new (ptr) ::runtime::ListImagesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListImagesResponse::InitAsDefaultInstance();
}

void InitDefaultsListImagesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListImagesResponseImpl);
}

void InitDefaultsImageStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  {
    void* ptr = &::runtime::_ImageStatusRequest_default_instance_;
    new (ptr) ::runtime::ImageStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsImageStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageStatusRequestImpl);
}

void InitDefaultsImageStatusResponse_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ImageStatusResponse_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ImageStatusResponse_InfoEntry_DoNotUse();
  }
  ::runtime::ImageStatusResponse_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsImageStatusResponse_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageStatusResponse_InfoEntry_DoNotUseImpl);
}

void InitDefaultsImageStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImage();
  protobuf_cri_2dapi_2eproto::InitDefaultsImageStatusResponse_InfoEntry_DoNotUse();
  {
    void* ptr = &::runtime::_ImageStatusResponse_default_instance_;
    new (ptr) ::runtime::ImageStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsImageStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageStatusResponseImpl);
}

void InitDefaultsAuthConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_AuthConfig_default_instance_;
    new (ptr) ::runtime::AuthConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::AuthConfig::InitAsDefaultInstance();
}

void InitDefaultsAuthConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthConfigImpl);
}

void InitDefaultsPullImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  protobuf_cri_2dapi_2eproto::InitDefaultsAuthConfig();
  protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig();
  {
    void* ptr = &::runtime::_PullImageRequest_default_instance_;
    new (ptr) ::runtime::PullImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PullImageRequest::InitAsDefaultInstance();
}

void InitDefaultsPullImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPullImageRequestImpl);
}

void InitDefaultsPullImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_PullImageResponse_default_instance_;
    new (ptr) ::runtime::PullImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::PullImageResponse::InitAsDefaultInstance();
}

void InitDefaultsPullImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPullImageResponseImpl);
}

void InitDefaultsRemoveImageRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  {
    void* ptr = &::runtime::_RemoveImageRequest_default_instance_;
    new (ptr) ::runtime::RemoveImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemoveImageRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveImageRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveImageRequestImpl);
}

void InitDefaultsRemoveImageResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RemoveImageResponse_default_instance_;
    new (ptr) ::runtime::RemoveImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RemoveImageResponse::InitAsDefaultInstance();
}

void InitDefaultsRemoveImageResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveImageResponseImpl);
}

void InitDefaultsNetworkConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_NetworkConfig_default_instance_;
    new (ptr) ::runtime::NetworkConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::NetworkConfig::InitAsDefaultInstance();
}

void InitDefaultsNetworkConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkConfigImpl);
}

void InitDefaultsRuntimeConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsNetworkConfig();
  {
    void* ptr = &::runtime::_RuntimeConfig_default_instance_;
    new (ptr) ::runtime::RuntimeConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RuntimeConfig::InitAsDefaultInstance();
}

void InitDefaultsRuntimeConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeConfigImpl);
}

void InitDefaultsUpdateRuntimeConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeConfig();
  {
    void* ptr = &::runtime::_UpdateRuntimeConfigRequest_default_instance_;
    new (ptr) ::runtime::UpdateRuntimeConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::UpdateRuntimeConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateRuntimeConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateRuntimeConfigRequestImpl);
}

void InitDefaultsUpdateRuntimeConfigResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_UpdateRuntimeConfigResponse_default_instance_;
    new (ptr) ::runtime::UpdateRuntimeConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::UpdateRuntimeConfigResponse::InitAsDefaultInstance();
}

void InitDefaultsUpdateRuntimeConfigResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateRuntimeConfigResponseImpl);
}

void InitDefaultsRuntimeConditionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_RuntimeCondition_default_instance_;
    new (ptr) ::runtime::RuntimeCondition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RuntimeCondition::InitAsDefaultInstance();
}

void InitDefaultsRuntimeCondition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeConditionImpl);
}

void InitDefaultsRuntimeStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeCondition();
  {
    void* ptr = &::runtime::_RuntimeStatus_default_instance_;
    new (ptr) ::runtime::RuntimeStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::RuntimeStatus::InitAsDefaultInstance();
}

void InitDefaultsRuntimeStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRuntimeStatusImpl);
}

void InitDefaultsStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StatusRequest_default_instance_;
    new (ptr) ::runtime::StatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StatusRequest::InitAsDefaultInstance();
}

void InitDefaultsStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusRequestImpl);
}

void InitDefaultsStatusResponse_InfoEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StatusResponse_InfoEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::StatusResponse_InfoEntry_DoNotUse();
  }
  ::runtime::StatusResponse_InfoEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsStatusResponse_InfoEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusResponse_InfoEntry_DoNotUseImpl);
}

void InitDefaultsStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeStatus();
  protobuf_cri_2dapi_2eproto::InitDefaultsStatusResponse_InfoEntry_DoNotUse();
  {
    void* ptr = &::runtime::_StatusResponse_default_instance_;
    new (ptr) ::runtime::StatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StatusResponse::InitAsDefaultInstance();
}

void InitDefaultsStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStatusResponseImpl);
}

void InitDefaultsImageFsInfoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ImageFsInfoRequest_default_instance_;
    new (ptr) ::runtime::ImageFsInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageFsInfoRequest::InitAsDefaultInstance();
}

void InitDefaultsImageFsInfoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageFsInfoRequestImpl);
}

void InitDefaultsUInt64ValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_UInt64Value_default_instance_;
    new (ptr) ::runtime::UInt64Value();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::UInt64Value::InitAsDefaultInstance();
}

void InitDefaultsUInt64Value() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUInt64ValueImpl);
}

void InitDefaultsStorageIdentifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_StorageIdentifier_default_instance_;
    new (ptr) ::runtime::StorageIdentifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::StorageIdentifier::InitAsDefaultInstance();
}

void InitDefaultsStorageIdentifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStorageIdentifierImpl);
}

void InitDefaultsFilesystemUsageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsStorageIdentifier();
  protobuf_cri_2dapi_2eproto::InitDefaultsUInt64Value();
  {
    void* ptr = &::runtime::_FilesystemUsage_default_instance_;
    new (ptr) ::runtime::FilesystemUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::FilesystemUsage::InitAsDefaultInstance();
}

void InitDefaultsFilesystemUsage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFilesystemUsageImpl);
}

void InitDefaultsImageFsInfoResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsFilesystemUsage();
  {
    void* ptr = &::runtime::_ImageFsInfoResponse_default_instance_;
    new (ptr) ::runtime::ImageFsInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ImageFsInfoResponse::InitAsDefaultInstance();
}

void InitDefaultsImageFsInfoResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageFsInfoResponseImpl);
}

void InitDefaultsContainerStatsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatsRequest_default_instance_;
    new (ptr) ::runtime::ContainerStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatsRequest::InitAsDefaultInstance();
}

void InitDefaultsContainerStatsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatsRequestImpl);
}

void InitDefaultsContainerStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStats();
  {
    void* ptr = &::runtime::_ContainerStatsResponse_default_instance_;
    new (ptr) ::runtime::ContainerStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatsResponseImpl);
}

void InitDefaultsListContainerStatsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsFilter();
  {
    void* ptr = &::runtime::_ListContainerStatsRequest_default_instance_;
    new (ptr) ::runtime::ListContainerStatsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListContainerStatsRequest::InitAsDefaultInstance();
}

void InitDefaultsListContainerStatsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListContainerStatsRequestImpl);
}

void InitDefaultsContainerStatsFilter_LabelSelectorEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerStatsFilter_LabelSelectorEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse();
  }
  ::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerStatsFilter_LabelSelectorEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatsFilter_LabelSelectorEntry_DoNotUseImpl);
}

void InitDefaultsContainerStatsFilterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsFilter_LabelSelectorEntry_DoNotUse();
  {
    void* ptr = &::runtime::_ContainerStatsFilter_default_instance_;
    new (ptr) ::runtime::ContainerStatsFilter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStatsFilter::InitAsDefaultInstance();
}

void InitDefaultsContainerStatsFilter() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatsFilterImpl);
}

void InitDefaultsListContainerStatsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerStats();
  {
    void* ptr = &::runtime::_ListContainerStatsResponse_default_instance_;
    new (ptr) ::runtime::ListContainerStatsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ListContainerStatsResponse::InitAsDefaultInstance();
}

void InitDefaultsListContainerStatsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListContainerStatsResponseImpl);
}

void InitDefaultsContainerAttributes_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerAttributes_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerAttributes_LabelsEntry_DoNotUse();
  }
  ::runtime::ContainerAttributes_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerAttributes_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerAttributes_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsContainerAttributes_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::runtime::_ContainerAttributes_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse();
  }
  ::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsContainerAttributes_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerAttributes_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsContainerAttributesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerAttributes_LabelsEntry_DoNotUse();
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerAttributes_AnnotationsEntry_DoNotUse();
  {
    void* ptr = &::runtime::_ContainerAttributes_default_instance_;
    new (ptr) ::runtime::ContainerAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerAttributes::InitAsDefaultInstance();
}

void InitDefaultsContainerAttributes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerAttributesImpl);
}

void InitDefaultsContainerStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsContainerAttributes();
  protobuf_cri_2dapi_2eproto::InitDefaultsCpuUsage();
  protobuf_cri_2dapi_2eproto::InitDefaultsMemoryUsage();
  protobuf_cri_2dapi_2eproto::InitDefaultsFilesystemUsage();
  {
    void* ptr = &::runtime::_ContainerStats_default_instance_;
    new (ptr) ::runtime::ContainerStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::ContainerStats::InitAsDefaultInstance();
}

void InitDefaultsContainerStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContainerStatsImpl);
}

void InitDefaultsCpuUsageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsUInt64Value();
  {
    void* ptr = &::runtime::_CpuUsage_default_instance_;
    new (ptr) ::runtime::CpuUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::CpuUsage::InitAsDefaultInstance();
}

void InitDefaultsCpuUsage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCpuUsageImpl);
}

void InitDefaultsMemoryUsageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_cri_2dapi_2eproto::InitDefaultsUInt64Value();
  {
    void* ptr = &::runtime::_MemoryUsage_default_instance_;
    new (ptr) ::runtime::MemoryUsage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::runtime::MemoryUsage::InitAsDefaultInstance();
}

void InitDefaultsMemoryUsage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMemoryUsageImpl);
}

::google::protobuf::Metadata file_level_metadata[119];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionRequest, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionResponse, runtime_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionResponse, runtime_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::VersionResponse, runtime_api_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::DNSConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::DNSConfig, servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::DNSConfig, searches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::DNSConfig, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortMapping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortMapping, protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortMapping, container_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortMapping, host_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortMapping, host_ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, container_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, host_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, readonly_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, selinux_relabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Mount, propagation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NamespaceOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NamespaceOption, host_network_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NamespaceOption, host_pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NamespaceOption, host_ipc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Int64Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Int64Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, namespace_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, selinux_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, run_as_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, readonly_rootfs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, supplemental_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, privileged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxSandboxSecurityContext, seccomp_profile_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig, cgroup_parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig, security_context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxConfig, sysctls_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxMetadata, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxMetadata, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxMetadata, namespace__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxMetadata, attempt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, hostname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, log_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, dns_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, port_mappings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxConfig, linux_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RunPodSandboxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RunPodSandboxRequest, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RunPodSandboxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RunPodSandboxResponse, pod_sandbox_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopPodSandboxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopPodSandboxRequest, pod_sandbox_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopPodSandboxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemovePodSandboxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemovePodSandboxRequest, pod_sandbox_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemovePodSandboxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusRequest, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusRequest, verbose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxNetworkStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxNetworkStatus, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Namespace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Namespace, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxPodSandboxStatus, namespaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, network_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, linux_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatus, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStatusResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxStateValue, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandboxFilter, label_selector_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListPodSandboxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListPodSandboxRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PodSandbox, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListPodSandboxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListPodSandboxResponse, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageSpec, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::KeyValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::KeyValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, cpu_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, cpu_quota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, cpu_shares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, memory_limit_in_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, oom_score_adj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, cpuset_cpus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerResources, cpuset_mems_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::SELinuxOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::SELinuxOption, user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::SELinuxOption, role_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::SELinuxOption, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::SELinuxOption, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Capability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Capability, add_capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Capability, drop_capabilities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, privileged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, namespace_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, selinux_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, run_as_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, run_as_username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, readonly_rootfs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, supplemental_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, apparmor_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, seccomp_profile_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerSecurityContext, no_new_privs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerConfig, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::LinuxContainerConfig, security_context_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerMetadata, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerMetadata, attempt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Device, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Device, container_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Device, host_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Device, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, working_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, envs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, mounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, devices_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, log_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, stdin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, stdin_once_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, tty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerConfig, linux_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerRequest, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerRequest, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerRequest, sandbox_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CreateContainerResponse, container_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StartContainerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StartContainerRequest, container_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StartContainerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopContainerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopContainerRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopContainerRequest, timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StopContainerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveContainerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveContainerRequest, container_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveContainerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStateValue, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerFilter, label_selector_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainersRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, image_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Container, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainersResponse, containers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusRequest, verbose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, started_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, finished_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, exit_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, image_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, mounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatus, log_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatusResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateContainerResourcesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateContainerResourcesRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateContainerResourcesRequest, linux_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateContainerResourcesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncRequest, timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncResponse, stdout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncResponse, stderr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecSyncResponse, exit_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, tty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, stdin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, stdout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecRequest, stderr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ExecResponse, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, container_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, stdin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, tty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, stdout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachRequest, stderr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AttachResponse, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortForwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortForwardRequest, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortForwardRequest, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortForwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PortForwardResponse, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageFilter, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListImagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListImagesRequest, filter_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, repo_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, repo_digests_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::Image, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListImagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListImagesResponse, images_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusRequest, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusRequest, verbose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageStatusResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, server_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, identity_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::AuthConfig, registry_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageRequest, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageRequest, auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageRequest, sandbox_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::PullImageResponse, image_ref_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveImageRequest, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RemoveImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NetworkConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::NetworkConfig, pod_cidr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeConfig, network_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateRuntimeConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateRuntimeConfigRequest, runtime_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UpdateRuntimeConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeCondition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeCondition, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeCondition, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeCondition, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeCondition, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::RuntimeStatus, conditions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusRequest, verbose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse_InfoEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse_InfoEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse_InfoEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse_InfoEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StatusResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageFsInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UInt64Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::UInt64Value, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StorageIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::StorageIdentifier, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::FilesystemUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::FilesystemUsage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::FilesystemUsage, storage_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::FilesystemUsage, used_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::FilesystemUsage, inodes_used_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageFsInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ImageFsInfoResponse, image_filesystems_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsRequest, container_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsResponse, stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainerStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainerStatsRequest, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter, pod_sandbox_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStatsFilter, label_selector_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainerStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ListContainerStatsResponse, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_LabelsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerAttributes, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStats, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStats, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStats, memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::ContainerStats, writable_layer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CpuUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CpuUsage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::CpuUsage, usage_core_nano_seconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::MemoryUsage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::MemoryUsage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::runtime::MemoryUsage, working_set_bytes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::runtime::VersionRequest)},
  { 6, -1, sizeof(::runtime::VersionResponse)},
  { 15, -1, sizeof(::runtime::DNSConfig)},
  { 23, -1, sizeof(::runtime::PortMapping)},
  { 32, -1, sizeof(::runtime::Mount)},
  { 42, -1, sizeof(::runtime::NamespaceOption)},
  { 50, -1, sizeof(::runtime::Int64Value)},
  { 56, -1, sizeof(::runtime::LinuxSandboxSecurityContext)},
  { 68, 75, sizeof(::runtime::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse)},
  { 77, -1, sizeof(::runtime::LinuxPodSandboxConfig)},
  { 85, -1, sizeof(::runtime::PodSandboxMetadata)},
  { 94, 101, sizeof(::runtime::PodSandboxConfig_LabelsEntry_DoNotUse)},
  { 103, 110, sizeof(::runtime::PodSandboxConfig_AnnotationsEntry_DoNotUse)},
  { 112, -1, sizeof(::runtime::PodSandboxConfig)},
  { 125, -1, sizeof(::runtime::RunPodSandboxRequest)},
  { 131, -1, sizeof(::runtime::RunPodSandboxResponse)},
  { 137, -1, sizeof(::runtime::StopPodSandboxRequest)},
  { 143, -1, sizeof(::runtime::StopPodSandboxResponse)},
  { 148, -1, sizeof(::runtime::RemovePodSandboxRequest)},
  { 154, -1, sizeof(::runtime::RemovePodSandboxResponse)},
  { 159, -1, sizeof(::runtime::PodSandboxStatusRequest)},
  { 166, -1, sizeof(::runtime::PodSandboxNetworkStatus)},
  { 172, -1, sizeof(::runtime::Namespace)},
  { 178, -1, sizeof(::runtime::LinuxPodSandboxStatus)},
  { 184, 191, sizeof(::runtime::PodSandboxStatus_LabelsEntry_DoNotUse)},
  { 193, 200, sizeof(::runtime::PodSandboxStatus_AnnotationsEntry_DoNotUse)},
  { 202, -1, sizeof(::runtime::PodSandboxStatus)},
  { 215, 222, sizeof(::runtime::PodSandboxStatusResponse_InfoEntry_DoNotUse)},
  { 224, -1, sizeof(::runtime::PodSandboxStatusResponse)},
  { 231, -1, sizeof(::runtime::PodSandboxStateValue)},
  { 237, 244, sizeof(::runtime::PodSandboxFilter_LabelSelectorEntry_DoNotUse)},
  { 246, -1, sizeof(::runtime::PodSandboxFilter)},
  { 254, -1, sizeof(::runtime::ListPodSandboxRequest)},
  { 260, 267, sizeof(::runtime::PodSandbox_LabelsEntry_DoNotUse)},
  { 269, 276, sizeof(::runtime::PodSandbox_AnnotationsEntry_DoNotUse)},
  { 278, -1, sizeof(::runtime::PodSandbox)},
  { 289, -1, sizeof(::runtime::ListPodSandboxResponse)},
  { 295, -1, sizeof(::runtime::ImageSpec)},
  { 301, -1, sizeof(::runtime::KeyValue)},
  { 308, -1, sizeof(::runtime::LinuxContainerResources)},
  { 320, -1, sizeof(::runtime::SELinuxOption)},
  { 329, -1, sizeof(::runtime::Capability)},
  { 336, -1, sizeof(::runtime::LinuxContainerSecurityContext)},
  { 352, -1, sizeof(::runtime::LinuxContainerConfig)},
  { 359, -1, sizeof(::runtime::ContainerMetadata)},
  { 366, -1, sizeof(::runtime::Device)},
  { 374, 381, sizeof(::runtime::ContainerConfig_LabelsEntry_DoNotUse)},
  { 383, 390, sizeof(::runtime::ContainerConfig_AnnotationsEntry_DoNotUse)},
  { 392, -1, sizeof(::runtime::ContainerConfig)},
  { 412, -1, sizeof(::runtime::CreateContainerRequest)},
  { 420, -1, sizeof(::runtime::CreateContainerResponse)},
  { 426, -1, sizeof(::runtime::StartContainerRequest)},
  { 432, -1, sizeof(::runtime::StartContainerResponse)},
  { 437, -1, sizeof(::runtime::StopContainerRequest)},
  { 444, -1, sizeof(::runtime::StopContainerResponse)},
  { 449, -1, sizeof(::runtime::RemoveContainerRequest)},
  { 455, -1, sizeof(::runtime::RemoveContainerResponse)},
  { 460, -1, sizeof(::runtime::ContainerStateValue)},
  { 466, 473, sizeof(::runtime::ContainerFilter_LabelSelectorEntry_DoNotUse)},
  { 475, -1, sizeof(::runtime::ContainerFilter)},
  { 484, -1, sizeof(::runtime::ListContainersRequest)},
  { 490, 497, sizeof(::runtime::Container_LabelsEntry_DoNotUse)},
  { 499, 506, sizeof(::runtime::Container_AnnotationsEntry_DoNotUse)},
  { 508, -1, sizeof(::runtime::Container)},
  { 522, -1, sizeof(::runtime::ListContainersResponse)},
  { 528, -1, sizeof(::runtime::ContainerStatusRequest)},
  { 535, 542, sizeof(::runtime::ContainerStatus_LabelsEntry_DoNotUse)},
  { 544, 551, sizeof(::runtime::ContainerStatus_AnnotationsEntry_DoNotUse)},
  { 553, -1, sizeof(::runtime::ContainerStatus)},
  { 573, 580, sizeof(::runtime::ContainerStatusResponse_InfoEntry_DoNotUse)},
  { 582, -1, sizeof(::runtime::ContainerStatusResponse)},
  { 589, -1, sizeof(::runtime::UpdateContainerResourcesRequest)},
  { 596, -1, sizeof(::runtime::UpdateContainerResourcesResponse)},
  { 601, -1, sizeof(::runtime::ExecSyncRequest)},
  { 609, -1, sizeof(::runtime::ExecSyncResponse)},
  { 617, -1, sizeof(::runtime::ExecRequest)},
  { 628, -1, sizeof(::runtime::ExecResponse)},
  { 634, -1, sizeof(::runtime::AttachRequest)},
  { 644, -1, sizeof(::runtime::AttachResponse)},
  { 650, -1, sizeof(::runtime::PortForwardRequest)},
  { 657, -1, sizeof(::runtime::PortForwardResponse)},
  { 663, -1, sizeof(::runtime::ImageFilter)},
  { 669, -1, sizeof(::runtime::ListImagesRequest)},
  { 675, -1, sizeof(::runtime::Image)},
  { 686, -1, sizeof(::runtime::ListImagesResponse)},
  { 692, -1, sizeof(::runtime::ImageStatusRequest)},
  { 699, 706, sizeof(::runtime::ImageStatusResponse_InfoEntry_DoNotUse)},
  { 708, -1, sizeof(::runtime::ImageStatusResponse)},
  { 715, -1, sizeof(::runtime::AuthConfig)},
  { 726, -1, sizeof(::runtime::PullImageRequest)},
  { 734, -1, sizeof(::runtime::PullImageResponse)},
  { 740, -1, sizeof(::runtime::RemoveImageRequest)},
  { 746, -1, sizeof(::runtime::RemoveImageResponse)},
  { 751, -1, sizeof(::runtime::NetworkConfig)},
  { 757, -1, sizeof(::runtime::RuntimeConfig)},
  { 763, -1, sizeof(::runtime::UpdateRuntimeConfigRequest)},
  { 769, -1, sizeof(::runtime::UpdateRuntimeConfigResponse)},
  { 774, -1, sizeof(::runtime::RuntimeCondition)},
  { 783, -1, sizeof(::runtime::RuntimeStatus)},
  { 789, -1, sizeof(::runtime::StatusRequest)},
  { 795, 802, sizeof(::runtime::StatusResponse_InfoEntry_DoNotUse)},
  { 804, -1, sizeof(::runtime::StatusResponse)},
  { 811, -1, sizeof(::runtime::ImageFsInfoRequest)},
  { 816, -1, sizeof(::runtime::UInt64Value)},
  { 822, -1, sizeof(::runtime::StorageIdentifier)},
  { 828, -1, sizeof(::runtime::FilesystemUsage)},
  { 837, -1, sizeof(::runtime::ImageFsInfoResponse)},
  { 843, -1, sizeof(::runtime::ContainerStatsRequest)},
  { 849, -1, sizeof(::runtime::ContainerStatsResponse)},
  { 855, -1, sizeof(::runtime::ListContainerStatsRequest)},
  { 861, 868, sizeof(::runtime::ContainerStatsFilter_LabelSelectorEntry_DoNotUse)},
  { 870, -1, sizeof(::runtime::ContainerStatsFilter)},
  { 878, -1, sizeof(::runtime::ListContainerStatsResponse)},
  { 884, 891, sizeof(::runtime::ContainerAttributes_LabelsEntry_DoNotUse)},
  { 893, 900, sizeof(::runtime::ContainerAttributes_AnnotationsEntry_DoNotUse)},
  { 902, -1, sizeof(::runtime::ContainerAttributes)},
  { 911, -1, sizeof(::runtime::ContainerStats)},
  { 920, -1, sizeof(::runtime::CpuUsage)},
  { 927, -1, sizeof(::runtime::MemoryUsage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_VersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_VersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_DNSConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PortMapping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Mount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_NamespaceOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Int64Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxSandboxSecurityContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxPodSandboxConfig_SysctlsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxPodSandboxConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxConfig_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxConfig_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RunPodSandboxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RunPodSandboxResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StopPodSandboxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StopPodSandboxResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemovePodSandboxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemovePodSandboxResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxNetworkStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Namespace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxPodSandboxStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatus_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatus_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatusResponse_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxStateValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxFilter_LabelSelectorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandboxFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListPodSandboxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandbox_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandbox_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PodSandbox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListPodSandboxResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageSpec_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_KeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxContainerResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_SELinuxOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Capability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxContainerSecurityContext_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_LinuxContainerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Device_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerConfig_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerConfig_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_CreateContainerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_CreateContainerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StartContainerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StartContainerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StopContainerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StopContainerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemoveContainerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemoveContainerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStateValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerFilter_LabelSelectorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListContainersRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Container_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Container_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Container_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListContainersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatus_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatus_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatusResponse_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_UpdateContainerResourcesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_UpdateContainerResourcesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ExecSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ExecSyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ExecRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ExecResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_AttachRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_AttachResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PortForwardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PortForwardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListImagesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_Image_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListImagesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageStatusResponse_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_AuthConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PullImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_PullImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemoveImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RemoveImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_NetworkConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RuntimeConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_UpdateRuntimeConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_UpdateRuntimeConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RuntimeCondition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_RuntimeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StatusResponse_InfoEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageFsInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_UInt64Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_StorageIdentifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_FilesystemUsage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ImageFsInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListContainerStatsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatsFilter_LabelSelectorEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStatsFilter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ListContainerStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerAttributes_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerAttributes_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_ContainerStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_CpuUsage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::runtime::_MemoryUsage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cri-api.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 119);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rcri-api.proto\022\007runtime\"!\n\016VersionReque"
      "st\022\017\n\007version\030\001 \001(\t\"n\n\017VersionResponse\022\017"
      "\n\007version\030\001 \001(\t\022\024\n\014runtime_name\030\002 \001(\t\022\027\n"
      "\017runtime_version\030\003 \001(\t\022\033\n\023runtime_api_ve"
      "rsion\030\004 \001(\t\"\?\n\tDNSConfig\022\017\n\007servers\030\001 \003("
      "\t\022\020\n\010searches\030\002 \003(\t\022\017\n\007options\030\003 \003(\t\"n\n\013"
      "PortMapping\022#\n\010protocol\030\001 \001(\0162\021.runtime."
      "Protocol\022\026\n\016container_port\030\002 \001(\005\022\021\n\thost"
      "_port\030\003 \001(\005\022\017\n\007host_ip\030\004 \001(\t\"\215\001\n\005Mount\022\026"
      "\n\016container_path\030\001 \001(\t\022\021\n\thost_path\030\002 \001("
      "\t\022\020\n\010readonly\030\003 \001(\010\022\027\n\017selinux_relabel\030\004"
      " \001(\010\022.\n\013propagation\030\005 \001(\0162\031.runtime.Moun"
      "tPropagation\"K\n\017NamespaceOption\022\024\n\014host_"
      "network\030\001 \001(\010\022\020\n\010host_pid\030\002 \001(\010\022\020\n\010host_"
      "ipc\030\003 \001(\010\"\033\n\nInt64Value\022\r\n\005value\030\001 \001(\003\"\225"
      "\002\n\033LinuxSandboxSecurityContext\0223\n\021namesp"
      "ace_options\030\001 \001(\0132\030.runtime.NamespaceOpt"
      "ion\022/\n\017selinux_options\030\002 \001(\0132\026.runtime.S"
      "ELinuxOption\022(\n\013run_as_user\030\003 \001(\0132\023.runt"
      "ime.Int64Value\022\027\n\017readonly_rootfs\030\004 \001(\010\022"
      "\033\n\023supplemental_groups\030\005 \003(\003\022\022\n\nprivileg"
      "ed\030\006 \001(\010\022\034\n\024seccomp_profile_path\030\007 \001(\t\"\334"
      "\001\n\025LinuxPodSandboxConfig\022\025\n\rcgroup_paren"
      "t\030\001 \001(\t\022>\n\020security_context\030\002 \001(\0132$.runt"
      "ime.LinuxSandboxSecurityContext\022<\n\007sysct"
      "ls\030\003 \003(\0132+.runtime.LinuxPodSandboxConfig"
      ".SysctlsEntry\032.\n\014SysctlsEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"S\n\022PodSandboxMetad"
      "ata\022\014\n\004name\030\001 \001(\t\022\013\n\003uid\030\002 \001(\t\022\021\n\tnamesp"
      "ace\030\003 \001(\t\022\017\n\007attempt\030\004 \001(\r\"\311\003\n\020PodSandbo"
      "xConfig\022-\n\010metadata\030\001 \001(\0132\033.runtime.PodS"
      "andboxMetadata\022\020\n\010hostname\030\002 \001(\t\022\025\n\rlog_"
      "directory\030\003 \001(\t\022&\n\ndns_config\030\004 \001(\0132\022.ru"
      "ntime.DNSConfig\022+\n\rport_mappings\030\005 \003(\0132\024"
      ".runtime.PortMapping\0225\n\006labels\030\006 \003(\0132%.r"
      "untime.PodSandboxConfig.LabelsEntry\022\?\n\013a"
      "nnotations\030\007 \003(\0132*.runtime.PodSandboxCon"
      "fig.AnnotationsEntry\022-\n\005linux\030\010 \001(\0132\036.ru"
      "ntime.LinuxPodSandboxConfig\032-\n\013LabelsEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020An"
      "notationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"A\n\024RunPodSandboxRequest\022)\n\006config"
      "\030\001 \001(\0132\031.runtime.PodSandboxConfig\"/\n\025Run"
      "PodSandboxResponse\022\026\n\016pod_sandbox_id\030\001 \001"
      "(\t\"/\n\025StopPodSandboxRequest\022\026\n\016pod_sandb"
      "ox_id\030\001 \001(\t\"\030\n\026StopPodSandboxResponse\"1\n"
      "\027RemovePodSandboxRequest\022\026\n\016pod_sandbox_"
      "id\030\001 \001(\t\"\032\n\030RemovePodSandboxResponse\"B\n\027"
      "PodSandboxStatusRequest\022\026\n\016pod_sandbox_i"
      "d\030\001 \001(\t\022\017\n\007verbose\030\002 \001(\010\"%\n\027PodSandboxNe"
      "tworkStatus\022\n\n\002ip\030\001 \001(\t\"6\n\tNamespace\022)\n\007"
      "options\030\002 \001(\0132\030.runtime.NamespaceOption\""
      "\?\n\025LinuxPodSandboxStatus\022&\n\nnamespaces\030\001"
      " \001(\0132\022.runtime.Namespace\"\307\003\n\020PodSandboxS"
      "tatus\022\n\n\002id\030\001 \001(\t\022-\n\010metadata\030\002 \001(\0132\033.ru"
      "ntime.PodSandboxMetadata\022\'\n\005state\030\003 \001(\0162"
      "\030.runtime.PodSandboxState\022\022\n\ncreated_at\030"
      "\004 \001(\003\0221\n\007network\030\005 \001(\0132 .runtime.PodSand"
      "boxNetworkStatus\022-\n\005linux\030\006 \001(\0132\036.runtim"
      "e.LinuxPodSandboxStatus\0225\n\006labels\030\007 \003(\0132"
      "%.runtime.PodSandboxStatus.LabelsEntry\022\?"
      "\n\013annotations\030\010 \003(\0132*.runtime.PodSandbox"
      "Status.AnnotationsEntry\032-\n\013LabelsEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020Annota"
      "tionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002"
      "8\001\"\255\001\n\030PodSandboxStatusResponse\022)\n\006statu"
      "s\030\001 \001(\0132\031.runtime.PodSandboxStatus\0229\n\004in"
      "fo\030\002 \003(\0132+.runtime.PodSandboxStatusRespo"
      "nse.InfoEntry\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001\"\?\n\024PodSandboxStateVal"
      "ue\022\'\n\005state\030\001 \001(\0162\030.runtime.PodSandboxSt"
      "ate\"\310\001\n\020PodSandboxFilter\022\n\n\002id\030\001 \001(\t\022,\n\005"
      "state\030\002 \001(\0132\035.runtime.PodSandboxStateVal"
      "ue\022D\n\016label_selector\030\003 \003(\0132,.runtime.Pod"
      "SandboxFilter.LabelSelectorEntry\0324\n\022Labe"
      "lSelectorEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"B\n\025ListPodSandboxRequest\022)\n\006filte"
      "r\030\001 \001(\0132\031.runtime.PodSandboxFilter\"\323\002\n\nP"
      "odSandbox\022\n\n\002id\030\001 \001(\t\022-\n\010metadata\030\002 \001(\0132"
      "\033.runtime.PodSandboxMetadata\022\'\n\005state\030\003 "
      "\001(\0162\030.runtime.PodSandboxState\022\022\n\ncreated"
      "_at\030\004 \001(\003\022/\n\006labels\030\005 \003(\0132\037.runtime.PodS"
      "andbox.LabelsEntry\0229\n\013annotations\030\006 \003(\0132"
      "$.runtime.PodSandbox.AnnotationsEntry\032-\n"
      "\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
      ":\0028\001\0322\n\020AnnotationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\t:\0028\001\"<\n\026ListPodSandboxRespon"
      "se\022\"\n\005items\030\001 \003(\0132\023.runtime.PodSandbox\"\032"
      "\n\tImageSpec\022\r\n\005image\030\001 \001(\t\"&\n\010KeyValue\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\264\001\n\027LinuxCont"
      "ainerResources\022\022\n\ncpu_period\030\001 \001(\003\022\021\n\tcp"
      "u_quota\030\002 \001(\003\022\022\n\ncpu_shares\030\003 \001(\003\022\035\n\025mem"
      "ory_limit_in_bytes\030\004 \001(\003\022\025\n\room_score_ad"
      "j\030\005 \001(\003\022\023\n\013cpuset_cpus\030\006 \001(\t\022\023\n\013cpuset_m"
      "ems\030\007 \001(\t\"H\n\rSELinuxOption\022\014\n\004user\030\001 \001(\t"
      "\022\014\n\004role\030\002 \001(\t\022\014\n\004type\030\003 \001(\t\022\r\n\005level\030\004 "
      "\001(\t\"A\n\nCapability\022\030\n\020add_capabilities\030\001 "
      "\003(\t\022\031\n\021drop_capabilities\030\002 \003(\t\"\213\003\n\035Linux"
      "ContainerSecurityContext\022)\n\014capabilities"
      "\030\001 \001(\0132\023.runtime.Capability\022\022\n\nprivilege"
      "d\030\002 \001(\010\0223\n\021namespace_options\030\003 \001(\0132\030.run"
      "time.NamespaceOption\022/\n\017selinux_options\030"
      "\004 \001(\0132\026.runtime.SELinuxOption\022(\n\013run_as_"
      "user\030\005 \001(\0132\023.runtime.Int64Value\022\027\n\017run_a"
      "s_username\030\006 \001(\t\022\027\n\017readonly_rootfs\030\007 \001("
      "\010\022\033\n\023supplemental_groups\030\010 \003(\003\022\030\n\020apparm"
      "or_profile\030\t \001(\t\022\034\n\024seccomp_profile_path"
      "\030\n \001(\t\022\024\n\014no_new_privs\030\013 \001(\010\"\215\001\n\024LinuxCo"
      "ntainerConfig\0223\n\tresources\030\001 \001(\0132 .runti"
      "me.LinuxContainerResources\022@\n\020security_c"
      "ontext\030\002 \001(\0132&.runtime.LinuxContainerSec"
      "urityContext\"2\n\021ContainerMetadata\022\014\n\004nam"
      "e\030\001 \001(\t\022\017\n\007attempt\030\002 \001(\r\"H\n\006Device\022\026\n\016co"
      "ntainer_path\030\001 \001(\t\022\021\n\thost_path\030\002 \001(\t\022\023\n"
      "\013permissions\030\003 \001(\t\"\302\004\n\017ContainerConfig\022,"
      "\n\010metadata\030\001 \001(\0132\032.runtime.ContainerMeta"
      "data\022!\n\005image\030\002 \001(\0132\022.runtime.ImageSpec\022"
      "\017\n\007command\030\003 \003(\t\022\014\n\004args\030\004 \003(\t\022\023\n\013workin"
      "g_dir\030\005 \001(\t\022\037\n\004envs\030\006 \003(\0132\021.runtime.KeyV"
      "alue\022\036\n\006mounts\030\007 \003(\0132\016.runtime.Mount\022 \n\007"
      "devices\030\010 \003(\0132\017.runtime.Device\0224\n\006labels"
      "\030\t \003(\0132$.runtime.ContainerConfig.LabelsE"
      "ntry\022>\n\013annotations\030\n \003(\0132).runtime.Cont"
      "ainerConfig.AnnotationsEntry\022\020\n\010log_path"
      "\030\013 \001(\t\022\r\n\005stdin\030\014 \001(\010\022\022\n\nstdin_once\030\r \001("
      "\010\022\013\n\003tty\030\016 \001(\010\022,\n\005linux\030\017 \001(\0132\035.runtime."
      "LinuxContainerConfig\032-\n\013LabelsEntry\022\013\n\003k"
      "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020Annotatio"
      "nsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "\215\001\n\026CreateContainerRequest\022\026\n\016pod_sandbo"
      "x_id\030\001 \001(\t\022(\n\006config\030\002 \001(\0132\030.runtime.Con"
      "tainerConfig\0221\n\016sandbox_config\030\003 \001(\0132\031.r"
      "untime.PodSandboxConfig\"/\n\027CreateContain"
      "erResponse\022\024\n\014container_id\030\001 \001(\t\"-\n\025Star"
      "tContainerRequest\022\024\n\014container_id\030\001 \001(\t\""
      "\030\n\026StartContainerResponse\"=\n\024StopContain"
      "erRequest\022\024\n\014container_id\030\001 \001(\t\022\017\n\007timeo"
      "ut\030\002 \001(\003\"\027\n\025StopContainerResponse\".\n\026Rem"
      "oveContainerRequest\022\024\n\014container_id\030\001 \001("
      "\t\"\031\n\027RemoveContainerResponse\"=\n\023Containe"
      "rStateValue\022&\n\005state\030\001 \001(\0162\027.runtime.Con"
      "tainerState\"\335\001\n\017ContainerFilter\022\n\n\002id\030\001 "
      "\001(\t\022+\n\005state\030\002 \001(\0132\034.runtime.ContainerSt"
      "ateValue\022\026\n\016pod_sandbox_id\030\003 \001(\t\022C\n\016labe"
      "l_selector\030\004 \003(\0132+.runtime.ContainerFilt"
      "er.LabelSelectorEntry\0324\n\022LabelSelectorEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"A\n\025L"
      "istContainersRequest\022(\n\006filter\030\001 \001(\0132\030.r"
      "untime.ContainerFilter\"\234\003\n\tContainer\022\n\n\002"
      "id\030\001 \001(\t\022\026\n\016pod_sandbox_id\030\002 \001(\t\022,\n\010meta"
      "data\030\003 \001(\0132\032.runtime.ContainerMetadata\022!"
      "\n\005image\030\004 \001(\0132\022.runtime.ImageSpec\022\021\n\tima"
      "ge_ref\030\005 \001(\t\022&\n\005state\030\006 \001(\0162\027.runtime.Co"
      "ntainerState\022\022\n\ncreated_at\030\007 \001(\003\022.\n\006labe"
      "ls\030\010 \003(\0132\036.runtime.Container.LabelsEntry"
      "\0228\n\013annotations\030\t \003(\0132#.runtime.Containe"
      "r.AnnotationsEntry\032-\n\013LabelsEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020Annotations"
      "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"@\n"
      "\026ListContainersResponse\022&\n\ncontainers\030\001 "
      "\003(\0132\022.runtime.Container\"\?\n\026ContainerStat"
      "usRequest\022\024\n\014container_id\030\001 \001(\t\022\017\n\007verbo"
      "se\030\002 \001(\010\"\245\004\n\017ContainerStatus\022\n\n\002id\030\001 \001(\t"
      "\022,\n\010metadata\030\002 \001(\0132\032.runtime.ContainerMe"
      "tadata\022&\n\005state\030\003 \001(\0162\027.runtime.Containe"
      "rState\022\022\n\ncreated_at\030\004 \001(\003\022\022\n\nstarted_at"
      "\030\005 \001(\003\022\023\n\013finished_at\030\006 \001(\003\022\021\n\texit_code"
      "\030\007 \001(\005\022!\n\005image\030\010 \001(\0132\022.runtime.ImageSpe"
      "c\022\021\n\timage_ref\030\t \001(\t\022\016\n\006reason\030\n \001(\t\022\017\n\007"
      "message\030\013 \001(\t\0224\n\006labels\030\014 \003(\0132$.runtime."
      "ContainerStatus.LabelsEntry\022>\n\013annotatio"
      "ns\030\r \003(\0132).runtime.ContainerStatus.Annot"
      "ationsEntry\022\036\n\006mounts\030\016 \003(\0132\016.runtime.Mo"
      "unt\022\020\n\010log_path\030\017 \001(\t\032-\n\013LabelsEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020Annotati"
      "onsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
      "\"\252\001\n\027ContainerStatusResponse\022(\n\006status\030\001"
      " \001(\0132\030.runtime.ContainerStatus\0228\n\004info\030\002"
      " \003(\0132*.runtime.ContainerStatusResponse.I"
      "nfoEntry\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t:\0028\001\"h\n\037UpdateContainerResource"
      "sRequest\022\024\n\014container_id\030\001 \001(\t\022/\n\005linux\030"
      "\002 \001(\0132 .runtime.LinuxContainerResources\""
      "\"\n UpdateContainerResourcesResponse\"E\n\017E"
      "xecSyncRequest\022\024\n\014container_id\030\001 \001(\t\022\013\n\003"
      "cmd\030\002 \003(\t\022\017\n\007timeout\030\003 \001(\003\"E\n\020ExecSyncRe"
      "sponse\022\016\n\006stdout\030\001 \001(\014\022\016\n\006stderr\030\002 \001(\014\022\021"
      "\n\texit_code\030\003 \001(\005\"l\n\013ExecRequest\022\024\n\014cont"
      "ainer_id\030\001 \001(\t\022\013\n\003cmd\030\002 \003(\t\022\013\n\003tty\030\003 \001(\010"
      "\022\r\n\005stdin\030\004 \001(\010\022\016\n\006stdout\030\005 \001(\010\022\016\n\006stder"
      "r\030\006 \001(\010\"\033\n\014ExecResponse\022\013\n\003url\030\001 \001(\t\"a\n\r"
      "AttachRequest\022\024\n\014container_id\030\001 \001(\t\022\r\n\005s"
      "tdin\030\002 \001(\010\022\013\n\003tty\030\003 \001(\010\022\016\n\006stdout\030\004 \001(\010\022"
      "\016\n\006stderr\030\005 \001(\010\"\035\n\016AttachResponse\022\013\n\003url"
      "\030\001 \001(\t\":\n\022PortForwardRequest\022\026\n\016pod_sand"
      "box_id\030\001 \001(\t\022\014\n\004port\030\002 \003(\005\"\"\n\023PortForwar"
      "dResponse\022\013\n\003url\030\001 \001(\t\"0\n\013ImageFilter\022!\n"
      "\005image\030\001 \001(\0132\022.runtime.ImageSpec\"9\n\021List"
      "ImagesRequest\022$\n\006filter\030\001 \001(\0132\024.runtime."
      "ImageFilter\"~\n\005Image\022\n\n\002id\030\001 \001(\t\022\021\n\trepo"
      "_tags\030\002 \003(\t\022\024\n\014repo_digests\030\003 \003(\t\022\014\n\004siz"
      "e\030\004 \001(\004\022 \n\003uid\030\005 \001(\0132\023.runtime.Int64Valu"
      "e\022\020\n\010username\030\006 \001(\t\"4\n\022ListImagesRespons"
      "e\022\036\n\006images\030\001 \003(\0132\016.runtime.Image\"H\n\022Ima"
      "geStatusRequest\022!\n\005image\030\001 \001(\0132\022.runtime"
      ".ImageSpec\022\017\n\007verbose\030\002 \001(\010\"\227\001\n\023ImageSta"
      "tusResponse\022\035\n\005image\030\001 \001(\0132\016.runtime.Ima"
      "ge\0224\n\004info\030\002 \003(\0132&.runtime.ImageStatusRe"
      "sponse.InfoEntry\032+\n\tInfoEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\206\001\n\nAuthConfig\022\020\n\010"
      "username\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\014\n\004auth"
      "\030\003 \001(\t\022\026\n\016server_address\030\004 \001(\t\022\026\n\016identi"
      "ty_token\030\005 \001(\t\022\026\n\016registry_token\030\006 \001(\t\"\213"
      "\001\n\020PullImageRequest\022!\n\005image\030\001 \001(\0132\022.run"
      "time.ImageSpec\022!\n\004auth\030\002 \001(\0132\023.runtime.A"
      "uthConfig\0221\n\016sandbox_config\030\003 \001(\0132\031.runt"
      "ime.PodSandboxConfig\"&\n\021PullImageRespons"
      "e\022\021\n\timage_ref\030\001 \001(\t\"7\n\022RemoveImageReque"
      "st\022!\n\005image\030\001 \001(\0132\022.runtime.ImageSpec\"\025\n"
      "\023RemoveImageResponse\"!\n\rNetworkConfig\022\020\n"
      "\010pod_cidr\030\001 \001(\t\"\?\n\rRuntimeConfig\022.\n\016netw"
      "ork_config\030\001 \001(\0132\026.runtime.NetworkConfig"
      "\"L\n\032UpdateRuntimeConfigRequest\022.\n\016runtim"
      "e_config\030\001 \001(\0132\026.runtime.RuntimeConfig\"\035"
      "\n\033UpdateRuntimeConfigResponse\"Q\n\020Runtime"
      "Condition\022\014\n\004type\030\001 \001(\t\022\016\n\006status\030\002 \001(\010\022"
      "\016\n\006reason\030\003 \001(\t\022\017\n\007message\030\004 \001(\t\">\n\rRunt"
      "imeStatus\022-\n\nconditions\030\001 \003(\0132\031.runtime."
      "RuntimeCondition\" \n\rStatusRequest\022\017\n\007ver"
      "bose\030\001 \001(\010\"\226\001\n\016StatusResponse\022&\n\006status\030"
      "\001 \001(\0132\026.runtime.RuntimeStatus\022/\n\004info\030\002 "
      "\003(\0132!.runtime.StatusResponse.InfoEntry\032+"
      "\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
      "\0028\001\"\024\n\022ImageFsInfoRequest\"\034\n\013UInt64Value"
      "\022\r\n\005value\030\001 \001(\004\"!\n\021StorageIdentifier\022\014\n\004"
      "uuid\030\001 \001(\t\"\251\001\n\017FilesystemUsage\022\021\n\ttimest"
      "amp\030\001 \001(\003\022.\n\nstorage_id\030\002 \001(\0132\032.runtime."
      "StorageIdentifier\022(\n\nused_bytes\030\003 \001(\0132\024."
      "runtime.UInt64Value\022)\n\013inodes_used\030\004 \001(\013"
      "2\024.runtime.UInt64Value\"J\n\023ImageFsInfoRes"
      "ponse\0223\n\021image_filesystems\030\001 \003(\0132\030.runti"
      "me.FilesystemUsage\"-\n\025ContainerStatsRequ"
      "est\022\024\n\014container_id\030\001 \001(\t\"@\n\026ContainerSt"
      "atsResponse\022&\n\005stats\030\001 \001(\0132\027.runtime.Con"
      "tainerStats\"J\n\031ListContainerStatsRequest"
      "\022-\n\006filter\030\001 \001(\0132\035.runtime.ContainerStat"
      "sFilter\"\272\001\n\024ContainerStatsFilter\022\n\n\002id\030\001"
      " \001(\t\022\026\n\016pod_sandbox_id\030\002 \001(\t\022H\n\016label_se"
      "lector\030\003 \003(\01320.runtime.ContainerStatsFil"
      "ter.LabelSelectorEntry\0324\n\022LabelSelectorE"
      "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"D\n\032"
      "ListContainerStatsResponse\022&\n\005stats\030\001 \003("
      "\0132\027.runtime.ContainerStats\"\260\002\n\023Container"
      "Attributes\022\n\n\002id\030\001 \001(\t\022,\n\010metadata\030\002 \001(\013"
      "2\032.runtime.ContainerMetadata\0228\n\006labels\030\003"
      " \003(\0132(.runtime.ContainerAttributes.Label"
      "sEntry\022B\n\013annotations\030\004 \003(\0132-.runtime.Co"
      "ntainerAttributes.AnnotationsEntry\032-\n\013La"
      "belsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
      "\001\0322\n\020AnnotationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t:\0028\001\"\272\001\n\016ContainerStats\0220\n\nattr"
      "ibutes\030\001 \001(\0132\034.runtime.ContainerAttribut"
      "es\022\036\n\003cpu\030\002 \001(\0132\021.runtime.CpuUsage\022$\n\006me"
      "mory\030\003 \001(\0132\024.runtime.MemoryUsage\0220\n\016writ"
      "able_layer\030\004 \001(\0132\030.runtime.FilesystemUsa"
      "ge\"T\n\010CpuUsage\022\021\n\ttimestamp\030\001 \001(\003\0225\n\027usa"
      "ge_core_nano_seconds\030\002 \001(\0132\024.runtime.UIn"
      "t64Value\"Q\n\013MemoryUsage\022\021\n\ttimestamp\030\001 \001"
      "(\003\022/\n\021working_set_bytes\030\002 \001(\0132\024.runtime."
      "UInt64Value*\034\n\010Protocol\022\007\n\003TCP\020\000\022\007\n\003UDP\020"
      "\001*m\n\020MountPropagation\022\027\n\023PROPAGATION_PRI"
      "VATE\020\000\022!\n\035PROPAGATION_HOST_TO_CONTAINER\020"
      "\001\022\035\n\031PROPAGATION_BIDIRECTIONAL\020\002*:\n\017PodS"
      "andboxState\022\021\n\rSANDBOX_READY\020\000\022\024\n\020SANDBO"
      "X_NOTREADY\020\001*k\n\016ContainerState\022\025\n\021CONTAI"
      "NER_CREATED\020\000\022\025\n\021CONTAINER_RUNNING\020\001\022\024\n\020"
      "CONTAINER_EXITED\020\002\022\025\n\021CONTAINER_UNKNOWN\020"
      "\0032\323\r\n\016RuntimeService\022>\n\007Version\022\027.runtim"
      "e.VersionRequest\032\030.runtime.VersionRespon"
      "se\"\000\022P\n\rRunPodSandbox\022\035.runtime.RunPodSa"
      "ndboxRequest\032\036.runtime.RunPodSandboxResp"
      "onse\"\000\022S\n\016StopPodSandbox\022\036.runtime.StopP"
      "odSandboxRequest\032\037.runtime.StopPodSandbo"
      "xResponse\"\000\022Y\n\020RemovePodSandbox\022 .runtim"
      "e.RemovePodSandboxRequest\032!.runtime.Remo"
      "vePodSandboxResponse\"\000\022Y\n\020PodSandboxStat"
      "us\022 .runtime.PodSandboxStatusRequest\032!.r"
      "untime.PodSandboxStatusResponse\"\000\022S\n\016Lis"
      "tPodSandbox\022\036.runtime.ListPodSandboxRequ"
      "est\032\037.runtime.ListPodSandboxResponse\"\000\022V"
      "\n\017CreateContainer\022\037.runtime.CreateContai"
      "nerRequest\032 .runtime.CreateContainerResp"
      "onse\"\000\022S\n\016StartContainer\022\036.runtime.Start"
      "ContainerRequest\032\037.runtime.StartContaine"
      "rResponse\"\000\022P\n\rStopContainer\022\035.runtime.S"
      "topContainerRequest\032\036.runtime.StopContai"
      "nerResponse\"\000\022V\n\017RemoveContainer\022\037.runti"
      "me.RemoveContainerRequest\032 .runtime.Remo"
      "veContainerResponse\"\000\022S\n\016ListContainers\022"
      "\036.runtime.ListContainersRequest\032\037.runtim"
      "e.ListContainersResponse\"\000\022V\n\017ContainerS"
      "tatus\022\037.runtime.ContainerStatusRequest\032 "
      ".runtime.ContainerStatusResponse\"\000\022q\n\030Up"
      "dateContainerResources\022(.runtime.UpdateC"
      "ontainerResourcesRequest\032).runtime.Updat"
      "eContainerResourcesResponse\"\000\022A\n\010ExecSyn"
      "c\022\030.runtime.ExecSyncRequest\032\031.runtime.Ex"
      "ecSyncResponse\"\000\0225\n\004Exec\022\024.runtime.ExecR"
      "equest\032\025.runtime.ExecResponse\"\000\022;\n\006Attac"
      "h\022\026.runtime.AttachRequest\032\027.runtime.Atta"
      "chResponse\"\000\022J\n\013PortForward\022\033.runtime.Po"
      "rtForwardRequest\032\034.runtime.PortForwardRe"
      "sponse\"\000\022S\n\016ContainerStats\022\036.runtime.Con"
      "tainerStatsRequest\032\037.runtime.ContainerSt"
      "atsResponse\"\000\022_\n\022ListContainerStats\022\".ru"
      "ntime.ListContainerStatsRequest\032#.runtim"
      "e.ListContainerStatsResponse\"\000\022b\n\023Update"
      "RuntimeConfig\022#.runtime.UpdateRuntimeCon"
      "figRequest\032$.runtime.UpdateRuntimeConfig"
      "Response\"\000\022;\n\006Status\022\026.runtime.StatusReq"
      "uest\032\027.runtime.StatusResponse\"\0002\201\003\n\014Imag"
      "eService\022G\n\nListImages\022\032.runtime.ListIma"
      "gesRequest\032\033.runtime.ListImagesResponse\""
      "\000\022J\n\013ImageStatus\022\033.runtime.ImageStatusRe"
      "quest\032\034.runtime.ImageStatusResponse\"\000\022D\n"
      "\tPullImage\022\031.runtime.PullImageRequest\032\032."
      "runtime.PullImageResponse\"\000\022J\n\013RemoveIma"
      "ge\022\033.runtime.RemoveImageRequest\032\034.runtim"
      "e.RemoveImageResponse\"\000\022J\n\013ImageFsInfo\022\033"
      ".runtime.ImageFsInfoRequest\032\034.runtime.Im"
      "ageFsInfoResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 13227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cri-api.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_cri_2dapi_2eproto
namespace runtime {
const ::google::protobuf::EnumDescriptor* Protocol_descriptor() {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cri_2dapi_2eproto::file_level_enum_descriptors[0];
}
bool Protocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MountPropagation_descriptor() {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cri_2dapi_2eproto::file_level_enum_descriptors[1];
}
bool MountPropagation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PodSandboxState_descriptor() {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cri_2dapi_2eproto::file_level_enum_descriptors[2];
}
bool PodSandboxState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ContainerState_descriptor() {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cri_2dapi_2eproto::file_level_enum_descriptors[3];
}
bool ContainerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VersionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionRequest::VersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsVersionRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.VersionRequest)
}
VersionRequest::VersionRequest(const VersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.VersionRequest)
}

void VersionRequest::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

VersionRequest::~VersionRequest() {
  // @@protoc_insertion_point(destructor:runtime.VersionRequest)
  SharedDtor();
}

void VersionRequest::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VersionRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionRequest& VersionRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsVersionRequest();
  return *internal_default_instance();
}

VersionRequest* VersionRequest::New(::google::protobuf::Arena* arena) const {
  VersionRequest* n = new VersionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.VersionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.VersionRequest.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.VersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.VersionRequest)
  return false;
#undef DO_
}

void VersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionRequest.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.VersionRequest)
}

::google::protobuf::uint8* VersionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.VersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionRequest.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.VersionRequest)
  return target;
}

size_t VersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.VersionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.VersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.VersionRequest)
    MergeFrom(*source);
  }
}

void VersionRequest::MergeFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.VersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void VersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionRequest::CopyFrom(const VersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.VersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionRequest::IsInitialized() const {
  return true;
}

void VersionRequest::Swap(VersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionRequest::InternalSwap(VersionRequest* other) {
  using std::swap;
  version_.Swap(&other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VersionRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VersionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VersionResponse::kVersionFieldNumber;
const int VersionResponse::kRuntimeNameFieldNumber;
const int VersionResponse::kRuntimeVersionFieldNumber;
const int VersionResponse::kRuntimeApiVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VersionResponse::VersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsVersionResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.VersionResponse)
}
VersionResponse::VersionResponse(const VersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  runtime_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_name().size() > 0) {
    runtime_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_name_);
  }
  runtime_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_version().size() > 0) {
    runtime_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_version_);
  }
  runtime_api_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.runtime_api_version().size() > 0) {
    runtime_api_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_api_version_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.VersionResponse)
}

void VersionResponse::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_api_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

VersionResponse::~VersionResponse() {
  // @@protoc_insertion_point(destructor:runtime.VersionResponse)
  SharedDtor();
}

void VersionResponse::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_api_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VersionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VersionResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VersionResponse& VersionResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsVersionResponse();
  return *internal_default_instance();
}

VersionResponse* VersionResponse::New(::google::protobuf::Arena* arena) const {
  VersionResponse* n = new VersionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  runtime_api_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.VersionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.VersionResponse.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_name().data(), static_cast<int>(this->runtime_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.VersionResponse.runtime_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_version().data(), static_cast<int>(this->runtime_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.VersionResponse.runtime_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string runtime_api_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_runtime_api_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->runtime_api_version().data(), static_cast<int>(this->runtime_api_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.VersionResponse.runtime_api_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.VersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.VersionResponse)
  return false;
#undef DO_
}

void VersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string runtime_name = 2;
  if (this->runtime_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_name().data(), static_cast<int>(this->runtime_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->runtime_name(), output);
  }

  // string runtime_version = 3;
  if (this->runtime_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_version().data(), static_cast<int>(this->runtime_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->runtime_version(), output);
  }

  // string runtime_api_version = 4;
  if (this->runtime_api_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_api_version().data(), static_cast<int>(this->runtime_api_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_api_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->runtime_api_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.VersionResponse)
}

::google::protobuf::uint8* VersionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.VersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string runtime_name = 2;
  if (this->runtime_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_name().data(), static_cast<int>(this->runtime_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->runtime_name(), target);
  }

  // string runtime_version = 3;
  if (this->runtime_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_version().data(), static_cast<int>(this->runtime_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->runtime_version(), target);
  }

  // string runtime_api_version = 4;
  if (this->runtime_api_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->runtime_api_version().data(), static_cast<int>(this->runtime_api_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.VersionResponse.runtime_api_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->runtime_api_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.VersionResponse)
  return target;
}

size_t VersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.VersionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string runtime_name = 2;
  if (this->runtime_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_name());
  }

  // string runtime_version = 3;
  if (this->runtime_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_version());
  }

  // string runtime_api_version = 4;
  if (this->runtime_api_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->runtime_api_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VersionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VersionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.VersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.VersionResponse)
    MergeFrom(*source);
  }
}

void VersionResponse::MergeFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.VersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.runtime_name().size() > 0) {

    runtime_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_name_);
  }
  if (from.runtime_version().size() > 0) {

    runtime_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_version_);
  }
  if (from.runtime_api_version().size() > 0) {

    runtime_api_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.runtime_api_version_);
  }
}

void VersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionResponse::CopyFrom(const VersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.VersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionResponse::IsInitialized() const {
  return true;
}

void VersionResponse::Swap(VersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VersionResponse::InternalSwap(VersionResponse* other) {
  using std::swap;
  version_.Swap(&other->version_);
  runtime_name_.Swap(&other->runtime_name_);
  runtime_version_.Swap(&other->runtime_version_);
  runtime_api_version_.Swap(&other->runtime_api_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VersionResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DNSConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DNSConfig::kServersFieldNumber;
const int DNSConfig::kSearchesFieldNumber;
const int DNSConfig::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DNSConfig::DNSConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsDNSConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.DNSConfig)
}
DNSConfig::DNSConfig(const DNSConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      servers_(from.servers_),
      searches_(from.searches_),
      options_(from.options_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.DNSConfig)
}

void DNSConfig::SharedCtor() {
  _cached_size_ = 0;
}

DNSConfig::~DNSConfig() {
  // @@protoc_insertion_point(destructor:runtime.DNSConfig)
  SharedDtor();
}

void DNSConfig::SharedDtor() {
}

void DNSConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DNSConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DNSConfig& DNSConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsDNSConfig();
  return *internal_default_instance();
}

DNSConfig* DNSConfig::New(::google::protobuf::Arena* arena) const {
  DNSConfig* n = new DNSConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DNSConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.DNSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  servers_.Clear();
  searches_.Clear();
  options_.Clear();
  _internal_metadata_.Clear();
}

bool DNSConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.DNSConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_servers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servers(this->servers_size() - 1).data(),
            static_cast<int>(this->servers(this->servers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.DNSConfig.servers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string searches = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_searches()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->searches(this->searches_size() - 1).data(),
            static_cast<int>(this->searches(this->searches_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.DNSConfig.searches"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_options()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->options(this->options_size() - 1).data(),
            static_cast<int>(this->options(this->options_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.DNSConfig.options"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.DNSConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.DNSConfig)
  return false;
#undef DO_
}

void DNSConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.DNSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string servers = 1;
  for (int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servers(i).data(), static_cast<int>(this->servers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.servers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->servers(i), output);
  }

  // repeated string searches = 2;
  for (int i = 0, n = this->searches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searches(i).data(), static_cast<int>(this->searches(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.searches");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->searches(i), output);
  }

  // repeated string options = 3;
  for (int i = 0, n = this->options_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options(i).data(), static_cast<int>(this->options(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.options");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->options(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.DNSConfig)
}

::google::protobuf::uint8* DNSConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.DNSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string servers = 1;
  for (int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servers(i).data(), static_cast<int>(this->servers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.servers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->servers(i), target);
  }

  // repeated string searches = 2;
  for (int i = 0, n = this->searches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->searches(i).data(), static_cast<int>(this->searches(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.searches");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->searches(i), target);
  }

  // repeated string options = 3;
  for (int i = 0, n = this->options_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->options(i).data(), static_cast<int>(this->options(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.DNSConfig.options");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->options(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.DNSConfig)
  return target;
}

size_t DNSConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.DNSConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string servers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->servers_size());
  for (int i = 0, n = this->servers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->servers(i));
  }

  // repeated string searches = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->searches_size());
  for (int i = 0, n = this->searches_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->searches(i));
  }

  // repeated string options = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->options_size());
  for (int i = 0, n = this->options_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->options(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DNSConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.DNSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DNSConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DNSConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.DNSConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.DNSConfig)
    MergeFrom(*source);
  }
}

void DNSConfig::MergeFrom(const DNSConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.DNSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  searches_.MergeFrom(from.searches_);
  options_.MergeFrom(from.options_);
}

void DNSConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.DNSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DNSConfig::CopyFrom(const DNSConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.DNSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNSConfig::IsInitialized() const {
  return true;
}

void DNSConfig::Swap(DNSConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DNSConfig::InternalSwap(DNSConfig* other) {
  using std::swap;
  servers_.InternalSwap(&other->servers_);
  searches_.InternalSwap(&other->searches_);
  options_.InternalSwap(&other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DNSConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PortMapping::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortMapping::kProtocolFieldNumber;
const int PortMapping::kContainerPortFieldNumber;
const int PortMapping::kHostPortFieldNumber;
const int PortMapping::kHostIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortMapping::PortMapping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPortMapping();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PortMapping)
}
PortMapping::PortMapping(const PortMapping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_ip().size() > 0) {
    host_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_ip_);
  }
  ::memcpy(&protocol_, &from.protocol_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_port_) -
    reinterpret_cast<char*>(&protocol_)) + sizeof(host_port_));
  // @@protoc_insertion_point(copy_constructor:runtime.PortMapping)
}

void PortMapping::SharedCtor() {
  host_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&protocol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_port_) -
      reinterpret_cast<char*>(&protocol_)) + sizeof(host_port_));
  _cached_size_ = 0;
}

PortMapping::~PortMapping() {
  // @@protoc_insertion_point(destructor:runtime.PortMapping)
  SharedDtor();
}

void PortMapping::SharedDtor() {
  host_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PortMapping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PortMapping::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortMapping& PortMapping::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPortMapping();
  return *internal_default_instance();
}

PortMapping* PortMapping::New(::google::protobuf::Arena* arena) const {
  PortMapping* n = new PortMapping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PortMapping::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PortMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&protocol_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_port_) -
      reinterpret_cast<char*>(&protocol_)) + sizeof(host_port_));
  _internal_metadata_.Clear();
}

bool PortMapping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PortMapping)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.Protocol protocol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol(static_cast< ::runtime::Protocol >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 container_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &container_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 host_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_ip = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_ip().data(), static_cast<int>(this->host_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PortMapping.host_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PortMapping)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PortMapping)
  return false;
#undef DO_
}

void PortMapping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PortMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Protocol protocol = 1;
  if (this->protocol() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->protocol(), output);
  }

  // int32 container_port = 2;
  if (this->container_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->container_port(), output);
  }

  // int32 host_port = 3;
  if (this->host_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->host_port(), output);
  }

  // string host_ip = 4;
  if (this->host_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_ip().data(), static_cast<int>(this->host_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortMapping.host_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->host_ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PortMapping)
}

::google::protobuf::uint8* PortMapping::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PortMapping)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Protocol protocol = 1;
  if (this->protocol() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->protocol(), target);
  }

  // int32 container_port = 2;
  if (this->container_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->container_port(), target);
  }

  // int32 host_port = 3;
  if (this->host_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->host_port(), target);
  }

  // string host_ip = 4;
  if (this->host_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_ip().data(), static_cast<int>(this->host_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortMapping.host_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->host_ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PortMapping)
  return target;
}

size_t PortMapping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PortMapping)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string host_ip = 4;
  if (this->host_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_ip());
  }

  // .runtime.Protocol protocol = 1;
  if (this->protocol() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol());
  }

  // int32 container_port = 2;
  if (this->container_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->container_port());
  }

  // int32 host_port = 3;
  if (this->host_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PortMapping::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PortMapping)
  GOOGLE_DCHECK_NE(&from, this);
  const PortMapping* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortMapping>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PortMapping)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PortMapping)
    MergeFrom(*source);
  }
}

void PortMapping::MergeFrom(const PortMapping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PortMapping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_ip().size() > 0) {

    host_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_ip_);
  }
  if (from.protocol() != 0) {
    set_protocol(from.protocol());
  }
  if (from.container_port() != 0) {
    set_container_port(from.container_port());
  }
  if (from.host_port() != 0) {
    set_host_port(from.host_port());
  }
}

void PortMapping::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PortMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortMapping::CopyFrom(const PortMapping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PortMapping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortMapping::IsInitialized() const {
  return true;
}

void PortMapping::Swap(PortMapping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortMapping::InternalSwap(PortMapping* other) {
  using std::swap;
  host_ip_.Swap(&other->host_ip_);
  swap(protocol_, other->protocol_);
  swap(container_port_, other->container_port_);
  swap(host_port_, other->host_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PortMapping::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mount::kContainerPathFieldNumber;
const int Mount::kHostPathFieldNumber;
const int Mount::kReadonlyFieldNumber;
const int Mount::kSelinuxRelabelFieldNumber;
const int Mount::kPropagationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mount::Mount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsMount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Mount)
}
Mount::Mount(const Mount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_path().size() > 0) {
    container_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_path_);
  }
  host_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_path().size() > 0) {
    host_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_path_);
  }
  ::memcpy(&readonly_, &from.readonly_,
    static_cast<size_t>(reinterpret_cast<char*>(&propagation_) -
    reinterpret_cast<char*>(&readonly_)) + sizeof(propagation_));
  // @@protoc_insertion_point(copy_constructor:runtime.Mount)
}

void Mount::SharedCtor() {
  container_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&readonly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propagation_) -
      reinterpret_cast<char*>(&readonly_)) + sizeof(propagation_));
  _cached_size_ = 0;
}

Mount::~Mount() {
  // @@protoc_insertion_point(destructor:runtime.Mount)
  SharedDtor();
}

void Mount::SharedDtor() {
  container_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mount::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mount& Mount::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsMount();
  return *internal_default_instance();
}

Mount* Mount::New(::google::protobuf::Arena* arena) const {
  Mount* n = new Mount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mount::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Mount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&readonly_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&propagation_) -
      reinterpret_cast<char*>(&readonly_)) + sizeof(propagation_));
  _internal_metadata_.Clear();
}

bool Mount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Mount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_path().data(), static_cast<int>(this->container_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Mount.container_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_path().data(), static_cast<int>(this->host_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Mount.host_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool readonly = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &readonly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool selinux_relabel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &selinux_relabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.MountPropagation propagation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_propagation(static_cast< ::runtime::MountPropagation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Mount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Mount)
  return false;
#undef DO_
}

void Mount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Mount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_path = 1;
  if (this->container_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_path().data(), static_cast<int>(this->container_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Mount.container_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_path(), output);
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_path().data(), static_cast<int>(this->host_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Mount.host_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_path(), output);
  }

  // bool readonly = 3;
  if (this->readonly() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->readonly(), output);
  }

  // bool selinux_relabel = 4;
  if (this->selinux_relabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->selinux_relabel(), output);
  }

  // .runtime.MountPropagation propagation = 5;
  if (this->propagation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->propagation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Mount)
}

::google::protobuf::uint8* Mount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Mount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_path = 1;
  if (this->container_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_path().data(), static_cast<int>(this->container_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Mount.container_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_path(), target);
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_path().data(), static_cast<int>(this->host_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Mount.host_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_path(), target);
  }

  // bool readonly = 3;
  if (this->readonly() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->readonly(), target);
  }

  // bool selinux_relabel = 4;
  if (this->selinux_relabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->selinux_relabel(), target);
  }

  // .runtime.MountPropagation propagation = 5;
  if (this->propagation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->propagation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Mount)
  return target;
}

size_t Mount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Mount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_path = 1;
  if (this->container_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_path());
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_path());
  }

  // bool readonly = 3;
  if (this->readonly() != 0) {
    total_size += 1 + 1;
  }

  // bool selinux_relabel = 4;
  if (this->selinux_relabel() != 0) {
    total_size += 1 + 1;
  }

  // .runtime.MountPropagation propagation = 5;
  if (this->propagation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->propagation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Mount)
  GOOGLE_DCHECK_NE(&from, this);
  const Mount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Mount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Mount)
    MergeFrom(*source);
  }
}

void Mount::MergeFrom(const Mount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Mount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_path().size() > 0) {

    container_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_path_);
  }
  if (from.host_path().size() > 0) {

    host_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_path_);
  }
  if (from.readonly() != 0) {
    set_readonly(from.readonly());
  }
  if (from.selinux_relabel() != 0) {
    set_selinux_relabel(from.selinux_relabel());
  }
  if (from.propagation() != 0) {
    set_propagation(from.propagation());
  }
}

void Mount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Mount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mount::CopyFrom(const Mount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Mount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mount::IsInitialized() const {
  return true;
}

void Mount::Swap(Mount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mount::InternalSwap(Mount* other) {
  using std::swap;
  container_path_.Swap(&other->container_path_);
  host_path_.Swap(&other->host_path_);
  swap(readonly_, other->readonly_);
  swap(selinux_relabel_, other->selinux_relabel_);
  swap(propagation_, other->propagation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mount::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NamespaceOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NamespaceOption::kHostNetworkFieldNumber;
const int NamespaceOption::kHostPidFieldNumber;
const int NamespaceOption::kHostIpcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NamespaceOption::NamespaceOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsNamespaceOption();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.NamespaceOption)
}
NamespaceOption::NamespaceOption(const NamespaceOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&host_network_, &from.host_network_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_ipc_) -
    reinterpret_cast<char*>(&host_network_)) + sizeof(host_ipc_));
  // @@protoc_insertion_point(copy_constructor:runtime.NamespaceOption)
}

void NamespaceOption::SharedCtor() {
  ::memset(&host_network_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_ipc_) -
      reinterpret_cast<char*>(&host_network_)) + sizeof(host_ipc_));
  _cached_size_ = 0;
}

NamespaceOption::~NamespaceOption() {
  // @@protoc_insertion_point(destructor:runtime.NamespaceOption)
  SharedDtor();
}

void NamespaceOption::SharedDtor() {
}

void NamespaceOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NamespaceOption::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NamespaceOption& NamespaceOption::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsNamespaceOption();
  return *internal_default_instance();
}

NamespaceOption* NamespaceOption::New(::google::protobuf::Arena* arena) const {
  NamespaceOption* n = new NamespaceOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NamespaceOption::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.NamespaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&host_network_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_ipc_) -
      reinterpret_cast<char*>(&host_network_)) + sizeof(host_ipc_));
  _internal_metadata_.Clear();
}

bool NamespaceOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.NamespaceOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool host_network = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &host_network_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool host_pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &host_pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool host_ipc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &host_ipc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.NamespaceOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.NamespaceOption)
  return false;
#undef DO_
}

void NamespaceOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.NamespaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool host_network = 1;
  if (this->host_network() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->host_network(), output);
  }

  // bool host_pid = 2;
  if (this->host_pid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->host_pid(), output);
  }

  // bool host_ipc = 3;
  if (this->host_ipc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->host_ipc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.NamespaceOption)
}

::google::protobuf::uint8* NamespaceOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.NamespaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool host_network = 1;
  if (this->host_network() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->host_network(), target);
  }

  // bool host_pid = 2;
  if (this->host_pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->host_pid(), target);
  }

  // bool host_ipc = 3;
  if (this->host_ipc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->host_ipc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.NamespaceOption)
  return target;
}

size_t NamespaceOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.NamespaceOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool host_network = 1;
  if (this->host_network() != 0) {
    total_size += 1 + 1;
  }

  // bool host_pid = 2;
  if (this->host_pid() != 0) {
    total_size += 1 + 1;
  }

  // bool host_ipc = 3;
  if (this->host_ipc() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NamespaceOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.NamespaceOption)
  GOOGLE_DCHECK_NE(&from, this);
  const NamespaceOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NamespaceOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.NamespaceOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.NamespaceOption)
    MergeFrom(*source);
  }
}

void NamespaceOption::MergeFrom(const NamespaceOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.NamespaceOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_network() != 0) {
    set_host_network(from.host_network());
  }
  if (from.host_pid() != 0) {
    set_host_pid(from.host_pid());
  }
  if (from.host_ipc() != 0) {
    set_host_ipc(from.host_ipc());
  }
}

void NamespaceOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.NamespaceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NamespaceOption::CopyFrom(const NamespaceOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.NamespaceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NamespaceOption::IsInitialized() const {
  return true;
}

void NamespaceOption::Swap(NamespaceOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NamespaceOption::InternalSwap(NamespaceOption* other) {
  using std::swap;
  swap(host_network_, other->host_network_);
  swap(host_pid_, other->host_pid_);
  swap(host_ipc_, other->host_ipc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NamespaceOption::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64Value::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64Value::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64Value::Int64Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsInt64Value();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Int64Value)
}
Int64Value::Int64Value(const Int64Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:runtime.Int64Value)
}

void Int64Value::SharedCtor() {
  value_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Int64Value::~Int64Value() {
  // @@protoc_insertion_point(destructor:runtime.Int64Value)
  SharedDtor();
}

void Int64Value::SharedDtor() {
}

void Int64Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int64Value::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64Value& Int64Value::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsInt64Value();
  return *internal_default_instance();
}

Int64Value* Int64Value::New(::google::protobuf::Arena* arena) const {
  Int64Value* n = new Int64Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int64Value::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Int64Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Int64Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Int64Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Int64Value)
  return false;
#undef DO_
}

void Int64Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Int64Value)
}

::google::protobuf::uint8* Int64Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Int64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Int64Value)
  return target;
}

size_t Int64Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Int64Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int64Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Int64Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Int64Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Int64Value)
    MergeFrom(*source);
  }
}

void Int64Value::MergeFrom(const Int64Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Int64Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Int64Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Int64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64Value::CopyFrom(const Int64Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Int64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64Value::IsInitialized() const {
  return true;
}

void Int64Value::Swap(Int64Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64Value::InternalSwap(Int64Value* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Int64Value::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxSandboxSecurityContext::InitAsDefaultInstance() {
  ::runtime::_LinuxSandboxSecurityContext_default_instance_._instance.get_mutable()->namespace_options_ = const_cast< ::runtime::NamespaceOption*>(
      ::runtime::NamespaceOption::internal_default_instance());
  ::runtime::_LinuxSandboxSecurityContext_default_instance_._instance.get_mutable()->selinux_options_ = const_cast< ::runtime::SELinuxOption*>(
      ::runtime::SELinuxOption::internal_default_instance());
  ::runtime::_LinuxSandboxSecurityContext_default_instance_._instance.get_mutable()->run_as_user_ = const_cast< ::runtime::Int64Value*>(
      ::runtime::Int64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxSandboxSecurityContext::kNamespaceOptionsFieldNumber;
const int LinuxSandboxSecurityContext::kSelinuxOptionsFieldNumber;
const int LinuxSandboxSecurityContext::kRunAsUserFieldNumber;
const int LinuxSandboxSecurityContext::kReadonlyRootfsFieldNumber;
const int LinuxSandboxSecurityContext::kSupplementalGroupsFieldNumber;
const int LinuxSandboxSecurityContext::kPrivilegedFieldNumber;
const int LinuxSandboxSecurityContext::kSeccompProfilePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxSandboxSecurityContext::LinuxSandboxSecurityContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxSandboxSecurityContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxSandboxSecurityContext)
}
LinuxSandboxSecurityContext::LinuxSandboxSecurityContext(const LinuxSandboxSecurityContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supplemental_groups_(from.supplemental_groups_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seccomp_profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.seccomp_profile_path().size() > 0) {
    seccomp_profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seccomp_profile_path_);
  }
  if (from.has_namespace_options()) {
    namespace_options_ = new ::runtime::NamespaceOption(*from.namespace_options_);
  } else {
    namespace_options_ = NULL;
  }
  if (from.has_selinux_options()) {
    selinux_options_ = new ::runtime::SELinuxOption(*from.selinux_options_);
  } else {
    selinux_options_ = NULL;
  }
  if (from.has_run_as_user()) {
    run_as_user_ = new ::runtime::Int64Value(*from.run_as_user_);
  } else {
    run_as_user_ = NULL;
  }
  ::memcpy(&readonly_rootfs_, &from.readonly_rootfs_,
    static_cast<size_t>(reinterpret_cast<char*>(&privileged_) -
    reinterpret_cast<char*>(&readonly_rootfs_)) + sizeof(privileged_));
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxSandboxSecurityContext)
}

void LinuxSandboxSecurityContext::SharedCtor() {
  seccomp_profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&namespace_options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&privileged_) -
      reinterpret_cast<char*>(&namespace_options_)) + sizeof(privileged_));
  _cached_size_ = 0;
}

LinuxSandboxSecurityContext::~LinuxSandboxSecurityContext() {
  // @@protoc_insertion_point(destructor:runtime.LinuxSandboxSecurityContext)
  SharedDtor();
}

void LinuxSandboxSecurityContext::SharedDtor() {
  seccomp_profile_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete namespace_options_;
  if (this != internal_default_instance()) delete selinux_options_;
  if (this != internal_default_instance()) delete run_as_user_;
}

void LinuxSandboxSecurityContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxSandboxSecurityContext::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxSandboxSecurityContext& LinuxSandboxSecurityContext::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxSandboxSecurityContext();
  return *internal_default_instance();
}

LinuxSandboxSecurityContext* LinuxSandboxSecurityContext::New(::google::protobuf::Arena* arena) const {
  LinuxSandboxSecurityContext* n = new LinuxSandboxSecurityContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxSandboxSecurityContext::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxSandboxSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplemental_groups_.Clear();
  seccomp_profile_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && namespace_options_ != NULL) {
    delete namespace_options_;
  }
  namespace_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && selinux_options_ != NULL) {
    delete selinux_options_;
  }
  selinux_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_as_user_ != NULL) {
    delete run_as_user_;
  }
  run_as_user_ = NULL;
  ::memset(&readonly_rootfs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&privileged_) -
      reinterpret_cast<char*>(&readonly_rootfs_)) + sizeof(privileged_));
  _internal_metadata_.Clear();
}

bool LinuxSandboxSecurityContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxSandboxSecurityContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.NamespaceOption namespace_options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespace_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.SELinuxOption selinux_options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selinux_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.Int64Value run_as_user = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_as_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool readonly_rootfs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &readonly_rootfs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 supplemental_groups = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_supplemental_groups())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 42u, input, this->mutable_supplemental_groups())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool privileged = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privileged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string seccomp_profile_path = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seccomp_profile_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxSandboxSecurityContext.seccomp_profile_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxSandboxSecurityContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxSandboxSecurityContext)
  return false;
#undef DO_
}

void LinuxSandboxSecurityContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxSandboxSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NamespaceOption namespace_options = 1;
  if (this->has_namespace_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->namespace_options_, output);
  }

  // .runtime.SELinuxOption selinux_options = 2;
  if (this->has_selinux_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->selinux_options_, output);
  }

  // .runtime.Int64Value run_as_user = 3;
  if (this->has_run_as_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->run_as_user_, output);
  }

  // bool readonly_rootfs = 4;
  if (this->readonly_rootfs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->readonly_rootfs(), output);
  }

  // repeated int64 supplemental_groups = 5;
  if (this->supplemental_groups_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _supplemental_groups_cached_byte_size_));
  }
  for (int i = 0, n = this->supplemental_groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->supplemental_groups(i), output);
  }

  // bool privileged = 6;
  if (this->privileged() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->privileged(), output);
  }

  // string seccomp_profile_path = 7;
  if (this->seccomp_profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxSandboxSecurityContext.seccomp_profile_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->seccomp_profile_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxSandboxSecurityContext)
}

::google::protobuf::uint8* LinuxSandboxSecurityContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxSandboxSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NamespaceOption namespace_options = 1;
  if (this->has_namespace_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->namespace_options_, deterministic, target);
  }

  // .runtime.SELinuxOption selinux_options = 2;
  if (this->has_selinux_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->selinux_options_, deterministic, target);
  }

  // .runtime.Int64Value run_as_user = 3;
  if (this->has_run_as_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->run_as_user_, deterministic, target);
  }

  // bool readonly_rootfs = 4;
  if (this->readonly_rootfs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->readonly_rootfs(), target);
  }

  // repeated int64 supplemental_groups = 5;
  if (this->supplemental_groups_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _supplemental_groups_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->supplemental_groups_, target);
  }

  // bool privileged = 6;
  if (this->privileged() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->privileged(), target);
  }

  // string seccomp_profile_path = 7;
  if (this->seccomp_profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxSandboxSecurityContext.seccomp_profile_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->seccomp_profile_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxSandboxSecurityContext)
  return target;
}

size_t LinuxSandboxSecurityContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxSandboxSecurityContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 supplemental_groups = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->supplemental_groups_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _supplemental_groups_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string seccomp_profile_path = 7;
  if (this->seccomp_profile_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seccomp_profile_path());
  }

  // .runtime.NamespaceOption namespace_options = 1;
  if (this->has_namespace_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->namespace_options_);
  }

  // .runtime.SELinuxOption selinux_options = 2;
  if (this->has_selinux_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->selinux_options_);
  }

  // .runtime.Int64Value run_as_user = 3;
  if (this->has_run_as_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->run_as_user_);
  }

  // bool readonly_rootfs = 4;
  if (this->readonly_rootfs() != 0) {
    total_size += 1 + 1;
  }

  // bool privileged = 6;
  if (this->privileged() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxSandboxSecurityContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxSandboxSecurityContext)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxSandboxSecurityContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxSandboxSecurityContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxSandboxSecurityContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxSandboxSecurityContext)
    MergeFrom(*source);
  }
}

void LinuxSandboxSecurityContext::MergeFrom(const LinuxSandboxSecurityContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxSandboxSecurityContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supplemental_groups_.MergeFrom(from.supplemental_groups_);
  if (from.seccomp_profile_path().size() > 0) {

    seccomp_profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seccomp_profile_path_);
  }
  if (from.has_namespace_options()) {
    mutable_namespace_options()->::runtime::NamespaceOption::MergeFrom(from.namespace_options());
  }
  if (from.has_selinux_options()) {
    mutable_selinux_options()->::runtime::SELinuxOption::MergeFrom(from.selinux_options());
  }
  if (from.has_run_as_user()) {
    mutable_run_as_user()->::runtime::Int64Value::MergeFrom(from.run_as_user());
  }
  if (from.readonly_rootfs() != 0) {
    set_readonly_rootfs(from.readonly_rootfs());
  }
  if (from.privileged() != 0) {
    set_privileged(from.privileged());
  }
}

void LinuxSandboxSecurityContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxSandboxSecurityContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxSandboxSecurityContext::CopyFrom(const LinuxSandboxSecurityContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxSandboxSecurityContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxSandboxSecurityContext::IsInitialized() const {
  return true;
}

void LinuxSandboxSecurityContext::Swap(LinuxSandboxSecurityContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxSandboxSecurityContext::InternalSwap(LinuxSandboxSecurityContext* other) {
  using std::swap;
  supplemental_groups_.InternalSwap(&other->supplemental_groups_);
  seccomp_profile_path_.Swap(&other->seccomp_profile_path_);
  swap(namespace_options_, other->namespace_options_);
  swap(selinux_options_, other->selinux_options_);
  swap(run_as_user_, other->run_as_user_);
  swap(readonly_rootfs_, other->readonly_rootfs_);
  swap(privileged_, other->privileged_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxSandboxSecurityContext::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse() {}
LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::LinuxPodSandboxConfig_SysctlsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::MergeFrom(const LinuxPodSandboxConfig_SysctlsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[8];
}
void LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LinuxPodSandboxConfig::InitAsDefaultInstance() {
  ::runtime::_LinuxPodSandboxConfig_default_instance_._instance.get_mutable()->security_context_ = const_cast< ::runtime::LinuxSandboxSecurityContext*>(
      ::runtime::LinuxSandboxSecurityContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxPodSandboxConfig::kCgroupParentFieldNumber;
const int LinuxPodSandboxConfig::kSecurityContextFieldNumber;
const int LinuxPodSandboxConfig::kSysctlsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxPodSandboxConfig::LinuxPodSandboxConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxPodSandboxConfig)
}
LinuxPodSandboxConfig::LinuxPodSandboxConfig(const LinuxPodSandboxConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysctls_.MergeFrom(from.sysctls_);
  cgroup_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cgroup_parent().size() > 0) {
    cgroup_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgroup_parent_);
  }
  if (from.has_security_context()) {
    security_context_ = new ::runtime::LinuxSandboxSecurityContext(*from.security_context_);
  } else {
    security_context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxPodSandboxConfig)
}

void LinuxPodSandboxConfig::SharedCtor() {
  cgroup_parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  security_context_ = NULL;
  _cached_size_ = 0;
}

LinuxPodSandboxConfig::~LinuxPodSandboxConfig() {
  // @@protoc_insertion_point(destructor:runtime.LinuxPodSandboxConfig)
  SharedDtor();
}

void LinuxPodSandboxConfig::SharedDtor() {
  cgroup_parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_context_;
}

void LinuxPodSandboxConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxPodSandboxConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxPodSandboxConfig& LinuxPodSandboxConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxConfig();
  return *internal_default_instance();
}

LinuxPodSandboxConfig* LinuxPodSandboxConfig::New(::google::protobuf::Arena* arena) const {
  LinuxPodSandboxConfig* n = new LinuxPodSandboxConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxPodSandboxConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxPodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sysctls_.Clear();
  cgroup_parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && security_context_ != NULL) {
    delete security_context_;
  }
  security_context_ = NULL;
  _internal_metadata_.Clear();
}

bool LinuxPodSandboxConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxPodSandboxConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cgroup_parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cgroup_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cgroup_parent().data(), static_cast<int>(this->cgroup_parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxPodSandboxConfig.cgroup_parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxSandboxSecurityContext security_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> sysctls = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          LinuxPodSandboxConfig_SysctlsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LinuxPodSandboxConfig_SysctlsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&sysctls_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxPodSandboxConfig.SysctlsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxPodSandboxConfig.SysctlsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxPodSandboxConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxPodSandboxConfig)
  return false;
#undef DO_
}

void LinuxPodSandboxConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxPodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgroup_parent = 1;
  if (this->cgroup_parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgroup_parent().data(), static_cast<int>(this->cgroup_parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxPodSandboxConfig.cgroup_parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cgroup_parent(), output);
  }

  // .runtime.LinuxSandboxSecurityContext security_context = 2;
  if (this->has_security_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->security_context_, output);
  }

  // map<string, string> sysctls = 3;
  if (!this->sysctls().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.LinuxPodSandboxConfig.SysctlsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.LinuxPodSandboxConfig.SysctlsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->sysctls().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->sysctls().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sysctls().begin();
          it != this->sysctls().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sysctls_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sysctls().begin();
          it != this->sysctls().end(); ++it) {
        entry.reset(sysctls_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxPodSandboxConfig)
}

::google::protobuf::uint8* LinuxPodSandboxConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxPodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cgroup_parent = 1;
  if (this->cgroup_parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cgroup_parent().data(), static_cast<int>(this->cgroup_parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxPodSandboxConfig.cgroup_parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cgroup_parent(), target);
  }

  // .runtime.LinuxSandboxSecurityContext security_context = 2;
  if (this->has_security_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->security_context_, deterministic, target);
  }

  // map<string, string> sysctls = 3;
  if (!this->sysctls().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.LinuxPodSandboxConfig.SysctlsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.LinuxPodSandboxConfig.SysctlsEntry.value");
      }
    };

    if (deterministic &&
        this->sysctls().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->sysctls().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sysctls().begin();
          it != this->sysctls().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(sysctls_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->sysctls().begin();
          it != this->sysctls().end(); ++it) {
        entry.reset(sysctls_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxPodSandboxConfig)
  return target;
}

size_t LinuxPodSandboxConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxPodSandboxConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> sysctls = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sysctls_size());
  {
    ::google::protobuf::scoped_ptr<LinuxPodSandboxConfig_SysctlsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->sysctls().begin();
        it != this->sysctls().end(); ++it) {
      entry.reset(sysctls_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string cgroup_parent = 1;
  if (this->cgroup_parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cgroup_parent());
  }

  // .runtime.LinuxSandboxSecurityContext security_context = 2;
  if (this->has_security_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxPodSandboxConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxPodSandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxPodSandboxConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxPodSandboxConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxPodSandboxConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxPodSandboxConfig)
    MergeFrom(*source);
  }
}

void LinuxPodSandboxConfig::MergeFrom(const LinuxPodSandboxConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxPodSandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sysctls_.MergeFrom(from.sysctls_);
  if (from.cgroup_parent().size() > 0) {

    cgroup_parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cgroup_parent_);
  }
  if (from.has_security_context()) {
    mutable_security_context()->::runtime::LinuxSandboxSecurityContext::MergeFrom(from.security_context());
  }
}

void LinuxPodSandboxConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxPodSandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxPodSandboxConfig::CopyFrom(const LinuxPodSandboxConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxPodSandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxPodSandboxConfig::IsInitialized() const {
  return true;
}

void LinuxPodSandboxConfig::Swap(LinuxPodSandboxConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxPodSandboxConfig::InternalSwap(LinuxPodSandboxConfig* other) {
  using std::swap;
  sysctls_.Swap(&other->sysctls_);
  cgroup_parent_.Swap(&other->cgroup_parent_);
  swap(security_context_, other->security_context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxPodSandboxConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodSandboxMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxMetadata::kNameFieldNumber;
const int PodSandboxMetadata::kUidFieldNumber;
const int PodSandboxMetadata::kNamespaceFieldNumber;
const int PodSandboxMetadata::kAttemptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxMetadata::PodSandboxMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxMetadata)
}
PodSandboxMetadata::PodSandboxMetadata(const PodSandboxMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uid().size() > 0) {
    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.namespace_().size() > 0) {
    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  attempt_ = from.attempt_;
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxMetadata)
}

void PodSandboxMetadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attempt_ = 0u;
  _cached_size_ = 0;
}

PodSandboxMetadata::~PodSandboxMetadata() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxMetadata)
  SharedDtor();
}

void PodSandboxMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PodSandboxMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxMetadata::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxMetadata& PodSandboxMetadata::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxMetadata();
  return *internal_default_instance();
}

PodSandboxMetadata* PodSandboxMetadata::New(::google::protobuf::Arena* arena) const {
  PodSandboxMetadata* n = new PodSandboxMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attempt_ = 0u;
  _internal_metadata_.Clear();
}

bool PodSandboxMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxMetadata.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), static_cast<int>(this->uid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxMetadata.uid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string namespace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namespace_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->namespace_().data(), static_cast<int>(this->namespace_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxMetadata.namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attempt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attempt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxMetadata)
  return false;
#undef DO_
}

void PodSandboxMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uid(), output);
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->namespace_(), output);
  }

  // uint32 attempt = 4;
  if (this->attempt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->attempt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxMetadata)
}

::google::protobuf::uint8* PodSandboxMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), static_cast<int>(this->uid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uid(), target);
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->namespace_().data(), static_cast<int>(this->namespace_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxMetadata.namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->namespace_(), target);
  }

  // uint32 attempt = 4;
  if (this->attempt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->attempt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxMetadata)
  return target;
}

size_t PodSandboxMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string uid = 2;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // string namespace = 3;
  if (this->namespace_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->namespace_());
  }

  // uint32 attempt = 4;
  if (this->attempt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attempt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxMetadata)
    MergeFrom(*source);
  }
}

void PodSandboxMetadata::MergeFrom(const PodSandboxMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.namespace_().size() > 0) {

    namespace__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namespace__);
  }
  if (from.attempt() != 0) {
    set_attempt(from.attempt());
  }
}

void PodSandboxMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxMetadata::CopyFrom(const PodSandboxMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxMetadata::IsInitialized() const {
  return true;
}

void PodSandboxMetadata::Swap(PodSandboxMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxMetadata::InternalSwap(PodSandboxMetadata* other) {
  using std::swap;
  name_.Swap(&other->name_);
  uid_.Swap(&other->uid_);
  namespace__.Swap(&other->namespace__);
  swap(attempt_, other->attempt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxMetadata::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodSandboxConfig_LabelsEntry_DoNotUse::PodSandboxConfig_LabelsEntry_DoNotUse() {}
PodSandboxConfig_LabelsEntry_DoNotUse::PodSandboxConfig_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxConfig_LabelsEntry_DoNotUse::MergeFrom(const PodSandboxConfig_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxConfig_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[11];
}
void PodSandboxConfig_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PodSandboxConfig_AnnotationsEntry_DoNotUse::PodSandboxConfig_AnnotationsEntry_DoNotUse() {}
PodSandboxConfig_AnnotationsEntry_DoNotUse::PodSandboxConfig_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxConfig_AnnotationsEntry_DoNotUse::MergeFrom(const PodSandboxConfig_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxConfig_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[12];
}
void PodSandboxConfig_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodSandboxConfig::InitAsDefaultInstance() {
  ::runtime::_PodSandboxConfig_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::PodSandboxMetadata*>(
      ::runtime::PodSandboxMetadata::internal_default_instance());
  ::runtime::_PodSandboxConfig_default_instance_._instance.get_mutable()->dns_config_ = const_cast< ::runtime::DNSConfig*>(
      ::runtime::DNSConfig::internal_default_instance());
  ::runtime::_PodSandboxConfig_default_instance_._instance.get_mutable()->linux_ = const_cast< ::runtime::LinuxPodSandboxConfig*>(
      ::runtime::LinuxPodSandboxConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxConfig::kMetadataFieldNumber;
const int PodSandboxConfig::kHostnameFieldNumber;
const int PodSandboxConfig::kLogDirectoryFieldNumber;
const int PodSandboxConfig::kDnsConfigFieldNumber;
const int PodSandboxConfig::kPortMappingsFieldNumber;
const int PodSandboxConfig::kLabelsFieldNumber;
const int PodSandboxConfig::kAnnotationsFieldNumber;
const int PodSandboxConfig::kLinuxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxConfig::PodSandboxConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxConfig)
}
PodSandboxConfig::PodSandboxConfig(const PodSandboxConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      port_mappings_(from.port_mappings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hostname().size() > 0) {
    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  log_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_directory().size() > 0) {
    log_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_directory_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::PodSandboxMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_dns_config()) {
    dns_config_ = new ::runtime::DNSConfig(*from.dns_config_);
  } else {
    dns_config_ = NULL;
  }
  if (from.has_linux()) {
    linux_ = new ::runtime::LinuxPodSandboxConfig(*from.linux_);
  } else {
    linux_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxConfig)
}

void PodSandboxConfig::SharedCtor() {
  hostname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linux_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(linux_));
  _cached_size_ = 0;
}

PodSandboxConfig::~PodSandboxConfig() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxConfig)
  SharedDtor();
}

void PodSandboxConfig::SharedDtor() {
  hostname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete dns_config_;
  if (this != internal_default_instance()) delete linux_;
}

void PodSandboxConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxConfig& PodSandboxConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxConfig();
  return *internal_default_instance();
}

PodSandboxConfig* PodSandboxConfig::New(::google::protobuf::Arena* arena) const {
  PodSandboxConfig* n = new PodSandboxConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_mappings_.Clear();
  labels_.Clear();
  annotations_.Clear();
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && dns_config_ != NULL) {
    delete dns_config_;
  }
  dns_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && linux_ != NULL) {
    delete linux_;
  }
  linux_ = NULL;
  _internal_metadata_.Clear();
}

bool PodSandboxConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.PodSandboxMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hostname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostname().data(), static_cast<int>(this->hostname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.hostname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_directory().data(), static_cast<int>(this->log_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.log_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.DNSConfig dns_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dns_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .runtime.PortMapping port_mappings = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_port_mappings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          PodSandboxConfig_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxConfig_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          PodSandboxConfig_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxConfig_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxConfig.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxPodSandboxConfig linux = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linux()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxConfig)
  return false;
#undef DO_
}

void PodSandboxConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxMetadata metadata = 1;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->metadata_, output);
  }

  // string hostname = 2;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxConfig.hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->hostname(), output);
  }

  // string log_directory = 3;
  if (this->log_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_directory().data(), static_cast<int>(this->log_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxConfig.log_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_directory(), output);
  }

  // .runtime.DNSConfig dns_config = 4;
  if (this->has_dns_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->dns_config_, output);
  }

  // repeated .runtime.PortMapping port_mappings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->port_mappings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->port_mappings(static_cast<int>(i)), output);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 7;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxConfig_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxConfig_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .runtime.LinuxPodSandboxConfig linux = 8;
  if (this->has_linux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->linux_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxConfig)
}

::google::protobuf::uint8* PodSandboxConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->metadata_, deterministic, target);
  }

  // string hostname = 2;
  if (this->hostname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostname().data(), static_cast<int>(this->hostname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxConfig.hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->hostname(), target);
  }

  // string log_directory = 3;
  if (this->log_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_directory().data(), static_cast<int>(this->log_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxConfig.log_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_directory(), target);
  }

  // .runtime.DNSConfig dns_config = 4;
  if (this->has_dns_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->dns_config_, deterministic, target);
  }

  // repeated .runtime.PortMapping port_mappings = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->port_mappings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->port_mappings(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> labels = 6;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 7;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxConfig.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxConfig_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxConfig_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .runtime.LinuxPodSandboxConfig linux = 8;
  if (this->has_linux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->linux_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxConfig)
  return target;
}

size_t PodSandboxConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.PortMapping port_mappings = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->port_mappings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->port_mappings(static_cast<int>(i)));
    }
  }

  // map<string, string> labels = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxConfig_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxConfig_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string hostname = 2;
  if (this->hostname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostname());
  }

  // string log_directory = 3;
  if (this->log_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_directory());
  }

  // .runtime.PodSandboxMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .runtime.DNSConfig dns_config = 4;
  if (this->has_dns_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dns_config_);
  }

  // .runtime.LinuxPodSandboxConfig linux = 8;
  if (this->has_linux()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->linux_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxConfig)
    MergeFrom(*source);
  }
}

void PodSandboxConfig::MergeFrom(const PodSandboxConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  port_mappings_.MergeFrom(from.port_mappings_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.hostname().size() > 0) {

    hostname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostname_);
  }
  if (from.log_directory().size() > 0) {

    log_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_directory_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::PodSandboxMetadata::MergeFrom(from.metadata());
  }
  if (from.has_dns_config()) {
    mutable_dns_config()->::runtime::DNSConfig::MergeFrom(from.dns_config());
  }
  if (from.has_linux()) {
    mutable_linux()->::runtime::LinuxPodSandboxConfig::MergeFrom(from.linux());
  }
}

void PodSandboxConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxConfig::CopyFrom(const PodSandboxConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxConfig::IsInitialized() const {
  return true;
}

void PodSandboxConfig::Swap(PodSandboxConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxConfig::InternalSwap(PodSandboxConfig* other) {
  using std::swap;
  port_mappings_.InternalSwap(&other->port_mappings_);
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  hostname_.Swap(&other->hostname_);
  log_directory_.Swap(&other->log_directory_);
  swap(metadata_, other->metadata_);
  swap(dns_config_, other->dns_config_);
  swap(linux_, other->linux_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunPodSandboxRequest::InitAsDefaultInstance() {
  ::runtime::_RunPodSandboxRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::runtime::PodSandboxConfig*>(
      ::runtime::PodSandboxConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunPodSandboxRequest::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunPodSandboxRequest::RunPodSandboxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRunPodSandboxRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RunPodSandboxRequest)
}
RunPodSandboxRequest::RunPodSandboxRequest(const RunPodSandboxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::runtime::PodSandboxConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RunPodSandboxRequest)
}

void RunPodSandboxRequest::SharedCtor() {
  config_ = NULL;
  _cached_size_ = 0;
}

RunPodSandboxRequest::~RunPodSandboxRequest() {
  // @@protoc_insertion_point(destructor:runtime.RunPodSandboxRequest)
  SharedDtor();
}

void RunPodSandboxRequest::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
}

void RunPodSandboxRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunPodSandboxRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunPodSandboxRequest& RunPodSandboxRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRunPodSandboxRequest();
  return *internal_default_instance();
}

RunPodSandboxRequest* RunPodSandboxRequest::New(::google::protobuf::Arena* arena) const {
  RunPodSandboxRequest* n = new RunPodSandboxRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunPodSandboxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RunPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool RunPodSandboxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RunPodSandboxRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.PodSandboxConfig config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RunPodSandboxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RunPodSandboxRequest)
  return false;
#undef DO_
}

void RunPodSandboxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RunPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxConfig config = 1;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RunPodSandboxRequest)
}

::google::protobuf::uint8* RunPodSandboxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RunPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxConfig config = 1;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RunPodSandboxRequest)
  return target;
}

size_t RunPodSandboxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RunPodSandboxRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.PodSandboxConfig config = 1;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunPodSandboxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RunPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunPodSandboxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunPodSandboxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RunPodSandboxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RunPodSandboxRequest)
    MergeFrom(*source);
  }
}

void RunPodSandboxRequest::MergeFrom(const RunPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RunPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::runtime::PodSandboxConfig::MergeFrom(from.config());
  }
}

void RunPodSandboxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RunPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunPodSandboxRequest::CopyFrom(const RunPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RunPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPodSandboxRequest::IsInitialized() const {
  return true;
}

void RunPodSandboxRequest::Swap(RunPodSandboxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunPodSandboxRequest::InternalSwap(RunPodSandboxRequest* other) {
  using std::swap;
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunPodSandboxRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RunPodSandboxResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunPodSandboxResponse::kPodSandboxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunPodSandboxResponse::RunPodSandboxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRunPodSandboxResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RunPodSandboxResponse)
}
RunPodSandboxResponse::RunPodSandboxResponse(const RunPodSandboxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RunPodSandboxResponse)
}

void RunPodSandboxResponse::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RunPodSandboxResponse::~RunPodSandboxResponse() {
  // @@protoc_insertion_point(destructor:runtime.RunPodSandboxResponse)
  SharedDtor();
}

void RunPodSandboxResponse::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunPodSandboxResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunPodSandboxResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RunPodSandboxResponse& RunPodSandboxResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRunPodSandboxResponse();
  return *internal_default_instance();
}

RunPodSandboxResponse* RunPodSandboxResponse::New(::google::protobuf::Arena* arena) const {
  RunPodSandboxResponse* n = new RunPodSandboxResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunPodSandboxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RunPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RunPodSandboxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RunPodSandboxResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RunPodSandboxResponse.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RunPodSandboxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RunPodSandboxResponse)
  return false;
#undef DO_
}

void RunPodSandboxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RunPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RunPodSandboxResponse.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RunPodSandboxResponse)
}

::google::protobuf::uint8* RunPodSandboxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RunPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RunPodSandboxResponse.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RunPodSandboxResponse)
  return target;
}

size_t RunPodSandboxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RunPodSandboxResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunPodSandboxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RunPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunPodSandboxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunPodSandboxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RunPodSandboxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RunPodSandboxResponse)
    MergeFrom(*source);
  }
}

void RunPodSandboxResponse::MergeFrom(const RunPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RunPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
}

void RunPodSandboxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RunPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunPodSandboxResponse::CopyFrom(const RunPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RunPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunPodSandboxResponse::IsInitialized() const {
  return true;
}

void RunPodSandboxResponse::Swap(RunPodSandboxResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunPodSandboxResponse::InternalSwap(RunPodSandboxResponse* other) {
  using std::swap;
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunPodSandboxResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopPodSandboxRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopPodSandboxRequest::kPodSandboxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopPodSandboxRequest::StopPodSandboxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStopPodSandboxRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StopPodSandboxRequest)
}
StopPodSandboxRequest::StopPodSandboxRequest(const StopPodSandboxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.StopPodSandboxRequest)
}

void StopPodSandboxRequest::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StopPodSandboxRequest::~StopPodSandboxRequest() {
  // @@protoc_insertion_point(destructor:runtime.StopPodSandboxRequest)
  SharedDtor();
}

void StopPodSandboxRequest::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopPodSandboxRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopPodSandboxRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopPodSandboxRequest& StopPodSandboxRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStopPodSandboxRequest();
  return *internal_default_instance();
}

StopPodSandboxRequest* StopPodSandboxRequest::New(::google::protobuf::Arena* arena) const {
  StopPodSandboxRequest* n = new StopPodSandboxRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopPodSandboxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StopPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StopPodSandboxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StopPodSandboxRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StopPodSandboxRequest.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StopPodSandboxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StopPodSandboxRequest)
  return false;
#undef DO_
}

void StopPodSandboxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StopPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StopPodSandboxRequest.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StopPodSandboxRequest)
}

::google::protobuf::uint8* StopPodSandboxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StopPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StopPodSandboxRequest.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StopPodSandboxRequest)
  return target;
}

size_t StopPodSandboxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StopPodSandboxRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopPodSandboxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StopPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopPodSandboxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopPodSandboxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StopPodSandboxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StopPodSandboxRequest)
    MergeFrom(*source);
  }
}

void StopPodSandboxRequest::MergeFrom(const StopPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StopPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
}

void StopPodSandboxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StopPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopPodSandboxRequest::CopyFrom(const StopPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StopPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopPodSandboxRequest::IsInitialized() const {
  return true;
}

void StopPodSandboxRequest::Swap(StopPodSandboxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopPodSandboxRequest::InternalSwap(StopPodSandboxRequest* other) {
  using std::swap;
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopPodSandboxRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopPodSandboxResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopPodSandboxResponse::StopPodSandboxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStopPodSandboxResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StopPodSandboxResponse)
}
StopPodSandboxResponse::StopPodSandboxResponse(const StopPodSandboxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.StopPodSandboxResponse)
}

void StopPodSandboxResponse::SharedCtor() {
  _cached_size_ = 0;
}

StopPodSandboxResponse::~StopPodSandboxResponse() {
  // @@protoc_insertion_point(destructor:runtime.StopPodSandboxResponse)
  SharedDtor();
}

void StopPodSandboxResponse::SharedDtor() {
}

void StopPodSandboxResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopPodSandboxResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopPodSandboxResponse& StopPodSandboxResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStopPodSandboxResponse();
  return *internal_default_instance();
}

StopPodSandboxResponse* StopPodSandboxResponse::New(::google::protobuf::Arena* arena) const {
  StopPodSandboxResponse* n = new StopPodSandboxResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopPodSandboxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StopPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StopPodSandboxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StopPodSandboxResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StopPodSandboxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StopPodSandboxResponse)
  return false;
#undef DO_
}

void StopPodSandboxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StopPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StopPodSandboxResponse)
}

::google::protobuf::uint8* StopPodSandboxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StopPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StopPodSandboxResponse)
  return target;
}

size_t StopPodSandboxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StopPodSandboxResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopPodSandboxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StopPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopPodSandboxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopPodSandboxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StopPodSandboxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StopPodSandboxResponse)
    MergeFrom(*source);
  }
}

void StopPodSandboxResponse::MergeFrom(const StopPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StopPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopPodSandboxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StopPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopPodSandboxResponse::CopyFrom(const StopPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StopPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopPodSandboxResponse::IsInitialized() const {
  return true;
}

void StopPodSandboxResponse::Swap(StopPodSandboxResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopPodSandboxResponse::InternalSwap(StopPodSandboxResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopPodSandboxResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePodSandboxRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemovePodSandboxRequest::kPodSandboxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePodSandboxRequest::RemovePodSandboxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemovePodSandboxRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemovePodSandboxRequest)
}
RemovePodSandboxRequest::RemovePodSandboxRequest(const RemovePodSandboxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RemovePodSandboxRequest)
}

void RemovePodSandboxRequest::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RemovePodSandboxRequest::~RemovePodSandboxRequest() {
  // @@protoc_insertion_point(destructor:runtime.RemovePodSandboxRequest)
  SharedDtor();
}

void RemovePodSandboxRequest::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemovePodSandboxRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemovePodSandboxRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePodSandboxRequest& RemovePodSandboxRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemovePodSandboxRequest();
  return *internal_default_instance();
}

RemovePodSandboxRequest* RemovePodSandboxRequest::New(::google::protobuf::Arena* arena) const {
  RemovePodSandboxRequest* n = new RemovePodSandboxRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemovePodSandboxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemovePodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemovePodSandboxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemovePodSandboxRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RemovePodSandboxRequest.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemovePodSandboxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemovePodSandboxRequest)
  return false;
#undef DO_
}

void RemovePodSandboxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemovePodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RemovePodSandboxRequest.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemovePodSandboxRequest)
}

::google::protobuf::uint8* RemovePodSandboxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemovePodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RemovePodSandboxRequest.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemovePodSandboxRequest)
  return target;
}

size_t RemovePodSandboxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemovePodSandboxRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemovePodSandboxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemovePodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePodSandboxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePodSandboxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemovePodSandboxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemovePodSandboxRequest)
    MergeFrom(*source);
  }
}

void RemovePodSandboxRequest::MergeFrom(const RemovePodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemovePodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
}

void RemovePodSandboxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemovePodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePodSandboxRequest::CopyFrom(const RemovePodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemovePodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePodSandboxRequest::IsInitialized() const {
  return true;
}

void RemovePodSandboxRequest::Swap(RemovePodSandboxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePodSandboxRequest::InternalSwap(RemovePodSandboxRequest* other) {
  using std::swap;
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemovePodSandboxRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemovePodSandboxResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemovePodSandboxResponse::RemovePodSandboxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemovePodSandboxResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemovePodSandboxResponse)
}
RemovePodSandboxResponse::RemovePodSandboxResponse(const RemovePodSandboxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.RemovePodSandboxResponse)
}

void RemovePodSandboxResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemovePodSandboxResponse::~RemovePodSandboxResponse() {
  // @@protoc_insertion_point(destructor:runtime.RemovePodSandboxResponse)
  SharedDtor();
}

void RemovePodSandboxResponse::SharedDtor() {
}

void RemovePodSandboxResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemovePodSandboxResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemovePodSandboxResponse& RemovePodSandboxResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemovePodSandboxResponse();
  return *internal_default_instance();
}

RemovePodSandboxResponse* RemovePodSandboxResponse::New(::google::protobuf::Arena* arena) const {
  RemovePodSandboxResponse* n = new RemovePodSandboxResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemovePodSandboxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemovePodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemovePodSandboxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemovePodSandboxResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemovePodSandboxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemovePodSandboxResponse)
  return false;
#undef DO_
}

void RemovePodSandboxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemovePodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemovePodSandboxResponse)
}

::google::protobuf::uint8* RemovePodSandboxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemovePodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemovePodSandboxResponse)
  return target;
}

size_t RemovePodSandboxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemovePodSandboxResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemovePodSandboxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemovePodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemovePodSandboxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemovePodSandboxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemovePodSandboxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemovePodSandboxResponse)
    MergeFrom(*source);
  }
}

void RemovePodSandboxResponse::MergeFrom(const RemovePodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemovePodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemovePodSandboxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemovePodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemovePodSandboxResponse::CopyFrom(const RemovePodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemovePodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemovePodSandboxResponse::IsInitialized() const {
  return true;
}

void RemovePodSandboxResponse::Swap(RemovePodSandboxResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemovePodSandboxResponse::InternalSwap(RemovePodSandboxResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemovePodSandboxResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodSandboxStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxStatusRequest::kPodSandboxIdFieldNumber;
const int PodSandboxStatusRequest::kVerboseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxStatusRequest::PodSandboxStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxStatusRequest)
}
PodSandboxStatusRequest::PodSandboxStatusRequest(const PodSandboxStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  verbose_ = from.verbose_;
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxStatusRequest)
}

void PodSandboxStatusRequest::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verbose_ = false;
  _cached_size_ = 0;
}

PodSandboxStatusRequest::~PodSandboxStatusRequest() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxStatusRequest)
  SharedDtor();
}

void PodSandboxStatusRequest::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PodSandboxStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxStatusRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxStatusRequest& PodSandboxStatusRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatusRequest();
  return *internal_default_instance();
}

PodSandboxStatusRequest* PodSandboxStatusRequest::New(::google::protobuf::Arena* arena) const {
  PodSandboxStatusRequest* n = new PodSandboxStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verbose_ = false;
  _internal_metadata_.Clear();
}

bool PodSandboxStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatusRequest.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool verbose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxStatusRequest)
  return false;
#undef DO_
}

void PodSandboxStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxStatusRequest.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->verbose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxStatusRequest)
}

::google::protobuf::uint8* PodSandboxStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxStatusRequest.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->verbose(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxStatusRequest)
  return target;
}

size_t PodSandboxStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxStatusRequest)
    MergeFrom(*source);
  }
}

void PodSandboxStatusRequest::MergeFrom(const PodSandboxStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.verbose() != 0) {
    set_verbose(from.verbose());
  }
}

void PodSandboxStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxStatusRequest::CopyFrom(const PodSandboxStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxStatusRequest::IsInitialized() const {
  return true;
}

void PodSandboxStatusRequest::Swap(PodSandboxStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxStatusRequest::InternalSwap(PodSandboxStatusRequest* other) {
  using std::swap;
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  swap(verbose_, other->verbose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxStatusRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodSandboxNetworkStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxNetworkStatus::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxNetworkStatus::PodSandboxNetworkStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxNetworkStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxNetworkStatus)
}
PodSandboxNetworkStatus::PodSandboxNetworkStatus(const PodSandboxNetworkStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxNetworkStatus)
}

void PodSandboxNetworkStatus::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PodSandboxNetworkStatus::~PodSandboxNetworkStatus() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxNetworkStatus)
  SharedDtor();
}

void PodSandboxNetworkStatus::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PodSandboxNetworkStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxNetworkStatus::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxNetworkStatus& PodSandboxNetworkStatus::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxNetworkStatus();
  return *internal_default_instance();
}

PodSandboxNetworkStatus* PodSandboxNetworkStatus::New(::google::protobuf::Arena* arena) const {
  PodSandboxNetworkStatus* n = new PodSandboxNetworkStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxNetworkStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxNetworkStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PodSandboxNetworkStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxNetworkStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxNetworkStatus.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxNetworkStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxNetworkStatus)
  return false;
#undef DO_
}

void PodSandboxNetworkStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxNetworkStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxNetworkStatus.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxNetworkStatus)
}

::google::protobuf::uint8* PodSandboxNetworkStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxNetworkStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxNetworkStatus.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxNetworkStatus)
  return target;
}

size_t PodSandboxNetworkStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxNetworkStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxNetworkStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxNetworkStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxNetworkStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxNetworkStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxNetworkStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxNetworkStatus)
    MergeFrom(*source);
  }
}

void PodSandboxNetworkStatus::MergeFrom(const PodSandboxNetworkStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxNetworkStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
}

void PodSandboxNetworkStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxNetworkStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxNetworkStatus::CopyFrom(const PodSandboxNetworkStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxNetworkStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxNetworkStatus::IsInitialized() const {
  return true;
}

void PodSandboxNetworkStatus::Swap(PodSandboxNetworkStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxNetworkStatus::InternalSwap(PodSandboxNetworkStatus* other) {
  using std::swap;
  ip_.Swap(&other->ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxNetworkStatus::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Namespace::InitAsDefaultInstance() {
  ::runtime::_Namespace_default_instance_._instance.get_mutable()->options_ = const_cast< ::runtime::NamespaceOption*>(
      ::runtime::NamespaceOption::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Namespace::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Namespace::Namespace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsNamespace();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Namespace)
}
Namespace::Namespace(const Namespace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_options()) {
    options_ = new ::runtime::NamespaceOption(*from.options_);
  } else {
    options_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.Namespace)
}

void Namespace::SharedCtor() {
  options_ = NULL;
  _cached_size_ = 0;
}

Namespace::~Namespace() {
  // @@protoc_insertion_point(destructor:runtime.Namespace)
  SharedDtor();
}

void Namespace::SharedDtor() {
  if (this != internal_default_instance()) delete options_;
}

void Namespace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Namespace::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Namespace& Namespace::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsNamespace();
  return *internal_default_instance();
}

Namespace* Namespace::New(::google::protobuf::Arena* arena) const {
  Namespace* n = new Namespace;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Namespace::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  _internal_metadata_.Clear();
}

bool Namespace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Namespace)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.NamespaceOption options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Namespace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Namespace)
  return false;
#undef DO_
}

void Namespace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NamespaceOption options = 2;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->options_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Namespace)
}

::google::protobuf::uint8* Namespace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Namespace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NamespaceOption options = 2;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->options_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Namespace)
  return target;
}

size_t Namespace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Namespace)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.NamespaceOption options = 2;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->options_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Namespace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  const Namespace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Namespace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Namespace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Namespace)
    MergeFrom(*source);
  }
}

void Namespace::MergeFrom(const Namespace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Namespace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_options()) {
    mutable_options()->::runtime::NamespaceOption::MergeFrom(from.options());
  }
}

void Namespace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Namespace::CopyFrom(const Namespace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Namespace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Namespace::IsInitialized() const {
  return true;
}

void Namespace::Swap(Namespace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Namespace::InternalSwap(Namespace* other) {
  using std::swap;
  swap(options_, other->options_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Namespace::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxPodSandboxStatus::InitAsDefaultInstance() {
  ::runtime::_LinuxPodSandboxStatus_default_instance_._instance.get_mutable()->namespaces_ = const_cast< ::runtime::Namespace*>(
      ::runtime::Namespace::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxPodSandboxStatus::kNamespacesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxPodSandboxStatus::LinuxPodSandboxStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxPodSandboxStatus)
}
LinuxPodSandboxStatus::LinuxPodSandboxStatus(const LinuxPodSandboxStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_namespaces()) {
    namespaces_ = new ::runtime::Namespace(*from.namespaces_);
  } else {
    namespaces_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxPodSandboxStatus)
}

void LinuxPodSandboxStatus::SharedCtor() {
  namespaces_ = NULL;
  _cached_size_ = 0;
}

LinuxPodSandboxStatus::~LinuxPodSandboxStatus() {
  // @@protoc_insertion_point(destructor:runtime.LinuxPodSandboxStatus)
  SharedDtor();
}

void LinuxPodSandboxStatus::SharedDtor() {
  if (this != internal_default_instance()) delete namespaces_;
}

void LinuxPodSandboxStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxPodSandboxStatus::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxPodSandboxStatus& LinuxPodSandboxStatus::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxPodSandboxStatus();
  return *internal_default_instance();
}

LinuxPodSandboxStatus* LinuxPodSandboxStatus::New(::google::protobuf::Arena* arena) const {
  LinuxPodSandboxStatus* n = new LinuxPodSandboxStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxPodSandboxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxPodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && namespaces_ != NULL) {
    delete namespaces_;
  }
  namespaces_ = NULL;
  _internal_metadata_.Clear();
}

bool LinuxPodSandboxStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxPodSandboxStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.Namespace namespaces = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxPodSandboxStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxPodSandboxStatus)
  return false;
#undef DO_
}

void LinuxPodSandboxStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxPodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Namespace namespaces = 1;
  if (this->has_namespaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->namespaces_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxPodSandboxStatus)
}

::google::protobuf::uint8* LinuxPodSandboxStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxPodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Namespace namespaces = 1;
  if (this->has_namespaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->namespaces_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxPodSandboxStatus)
  return target;
}

size_t LinuxPodSandboxStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxPodSandboxStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.Namespace namespaces = 1;
  if (this->has_namespaces()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->namespaces_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxPodSandboxStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxPodSandboxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxPodSandboxStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxPodSandboxStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxPodSandboxStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxPodSandboxStatus)
    MergeFrom(*source);
  }
}

void LinuxPodSandboxStatus::MergeFrom(const LinuxPodSandboxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxPodSandboxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_namespaces()) {
    mutable_namespaces()->::runtime::Namespace::MergeFrom(from.namespaces());
  }
}

void LinuxPodSandboxStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxPodSandboxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxPodSandboxStatus::CopyFrom(const LinuxPodSandboxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxPodSandboxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxPodSandboxStatus::IsInitialized() const {
  return true;
}

void LinuxPodSandboxStatus::Swap(LinuxPodSandboxStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxPodSandboxStatus::InternalSwap(LinuxPodSandboxStatus* other) {
  using std::swap;
  swap(namespaces_, other->namespaces_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxPodSandboxStatus::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodSandboxStatus_LabelsEntry_DoNotUse::PodSandboxStatus_LabelsEntry_DoNotUse() {}
PodSandboxStatus_LabelsEntry_DoNotUse::PodSandboxStatus_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxStatus_LabelsEntry_DoNotUse::MergeFrom(const PodSandboxStatus_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxStatus_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[24];
}
void PodSandboxStatus_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PodSandboxStatus_AnnotationsEntry_DoNotUse::PodSandboxStatus_AnnotationsEntry_DoNotUse() {}
PodSandboxStatus_AnnotationsEntry_DoNotUse::PodSandboxStatus_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxStatus_AnnotationsEntry_DoNotUse::MergeFrom(const PodSandboxStatus_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxStatus_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[25];
}
void PodSandboxStatus_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodSandboxStatus::InitAsDefaultInstance() {
  ::runtime::_PodSandboxStatus_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::PodSandboxMetadata*>(
      ::runtime::PodSandboxMetadata::internal_default_instance());
  ::runtime::_PodSandboxStatus_default_instance_._instance.get_mutable()->network_ = const_cast< ::runtime::PodSandboxNetworkStatus*>(
      ::runtime::PodSandboxNetworkStatus::internal_default_instance());
  ::runtime::_PodSandboxStatus_default_instance_._instance.get_mutable()->linux_ = const_cast< ::runtime::LinuxPodSandboxStatus*>(
      ::runtime::LinuxPodSandboxStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxStatus::kIdFieldNumber;
const int PodSandboxStatus::kMetadataFieldNumber;
const int PodSandboxStatus::kStateFieldNumber;
const int PodSandboxStatus::kCreatedAtFieldNumber;
const int PodSandboxStatus::kNetworkFieldNumber;
const int PodSandboxStatus::kLinuxFieldNumber;
const int PodSandboxStatus::kLabelsFieldNumber;
const int PodSandboxStatus::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxStatus::PodSandboxStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxStatus)
}
PodSandboxStatus::PodSandboxStatus(const PodSandboxStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::PodSandboxMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_network()) {
    network_ = new ::runtime::PodSandboxNetworkStatus(*from.network_);
  } else {
    network_ = NULL;
  }
  if (from.has_linux()) {
    linux_ = new ::runtime::LinuxPodSandboxStatus(*from.linux_);
  } else {
    linux_ = NULL;
  }
  ::memcpy(&created_at_, &from.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxStatus)
}

void PodSandboxStatus::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(state_));
  _cached_size_ = 0;
}

PodSandboxStatus::~PodSandboxStatus() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxStatus)
  SharedDtor();
}

void PodSandboxStatus::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete network_;
  if (this != internal_default_instance()) delete linux_;
}

void PodSandboxStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxStatus::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxStatus& PodSandboxStatus::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatus();
  return *internal_default_instance();
}

PodSandboxStatus* PodSandboxStatus::New(::google::protobuf::Arena* arena) const {
  PodSandboxStatus* n = new PodSandboxStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  annotations_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && network_ != NULL) {
    delete network_;
  }
  network_ = NULL;
  if (GetArenaNoVirtual() == NULL && linux_ != NULL) {
    delete linux_;
  }
  linux_ = NULL;
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool PodSandboxStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatus.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::PodSandboxState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxNetworkStatus network = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxPodSandboxStatus linux = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linux()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          PodSandboxStatus_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxStatus_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatus.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatus.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          PodSandboxStatus_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxStatus_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatus.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatus.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxStatus)
  return false;
#undef DO_
}

void PodSandboxStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxStatus.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->created_at(), output);
  }

  // .runtime.PodSandboxNetworkStatus network = 5;
  if (this->has_network()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->network_, output);
  }

  // .runtime.LinuxPodSandboxStatus linux = 6;
  if (this->has_linux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->linux_, output);
  }

  // map<string, string> labels = 7;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatus_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatus_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 8;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatus_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatus_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxStatus)
}

::google::protobuf::uint8* PodSandboxStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxStatus.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metadata_, deterministic, target);
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->created_at(), target);
  }

  // .runtime.PodSandboxNetworkStatus network = 5;
  if (this->has_network()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->network_, deterministic, target);
  }

  // .runtime.LinuxPodSandboxStatus linux = 6;
  if (this->has_linux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->linux_, deterministic, target);
  }

  // map<string, string> labels = 7;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatus_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatus_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 8;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatus.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatus_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatus_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxStatus)
  return target;
}

size_t PodSandboxStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxStatus_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxStatus_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .runtime.PodSandboxNetworkStatus network = 5;
  if (this->has_network()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_);
  }

  // .runtime.LinuxPodSandboxStatus linux = 6;
  if (this->has_linux()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->linux_);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxStatus)
    MergeFrom(*source);
  }
}

void PodSandboxStatus::MergeFrom(const PodSandboxStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::PodSandboxMetadata::MergeFrom(from.metadata());
  }
  if (from.has_network()) {
    mutable_network()->::runtime::PodSandboxNetworkStatus::MergeFrom(from.network());
  }
  if (from.has_linux()) {
    mutable_linux()->::runtime::LinuxPodSandboxStatus::MergeFrom(from.linux());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void PodSandboxStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxStatus::CopyFrom(const PodSandboxStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxStatus::IsInitialized() const {
  return true;
}

void PodSandboxStatus::Swap(PodSandboxStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxStatus::InternalSwap(PodSandboxStatus* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  id_.Swap(&other->id_);
  swap(metadata_, other->metadata_);
  swap(network_, other->network_);
  swap(linux_, other->linux_);
  swap(created_at_, other->created_at_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxStatus::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodSandboxStatusResponse_InfoEntry_DoNotUse::PodSandboxStatusResponse_InfoEntry_DoNotUse() {}
PodSandboxStatusResponse_InfoEntry_DoNotUse::PodSandboxStatusResponse_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxStatusResponse_InfoEntry_DoNotUse::MergeFrom(const PodSandboxStatusResponse_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxStatusResponse_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[27];
}
void PodSandboxStatusResponse_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodSandboxStatusResponse::InitAsDefaultInstance() {
  ::runtime::_PodSandboxStatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::runtime::PodSandboxStatus*>(
      ::runtime::PodSandboxStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxStatusResponse::kStatusFieldNumber;
const int PodSandboxStatusResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxStatusResponse::PodSandboxStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxStatusResponse)
}
PodSandboxStatusResponse::PodSandboxStatusResponse(const PodSandboxStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    status_ = new ::runtime::PodSandboxStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxStatusResponse)
}

void PodSandboxStatusResponse::SharedCtor() {
  status_ = NULL;
  _cached_size_ = 0;
}

PodSandboxStatusResponse::~PodSandboxStatusResponse() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxStatusResponse)
  SharedDtor();
}

void PodSandboxStatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void PodSandboxStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxStatusResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxStatusResponse& PodSandboxStatusResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStatusResponse();
  return *internal_default_instance();
}

PodSandboxStatusResponse* PodSandboxStatusResponse::New(::google::protobuf::Arena* arena) const {
  PodSandboxStatusResponse* n = new PodSandboxStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool PodSandboxStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.PodSandboxStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PodSandboxStatusResponse_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxStatusResponse_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatusResponse.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxStatusResponse.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxStatusResponse)
  return false;
#undef DO_
}

void PodSandboxStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatusResponse.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxStatusResponse)
}

::google::protobuf::uint8* PodSandboxStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->status_, deterministic, target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxStatusResponse.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxStatusResponse)
  return target;
}

size_t PodSandboxStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxStatusResponse_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .runtime.PodSandboxStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxStatusResponse)
    MergeFrom(*source);
  }
}

void PodSandboxStatusResponse::MergeFrom(const PodSandboxStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    mutable_status()->::runtime::PodSandboxStatus::MergeFrom(from.status());
  }
}

void PodSandboxStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxStatusResponse::CopyFrom(const PodSandboxStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxStatusResponse::IsInitialized() const {
  return true;
}

void PodSandboxStatusResponse::Swap(PodSandboxStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxStatusResponse::InternalSwap(PodSandboxStatusResponse* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxStatusResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PodSandboxStateValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxStateValue::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxStateValue::PodSandboxStateValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStateValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxStateValue)
}
PodSandboxStateValue::PodSandboxStateValue(const PodSandboxStateValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxStateValue)
}

void PodSandboxStateValue::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

PodSandboxStateValue::~PodSandboxStateValue() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxStateValue)
  SharedDtor();
}

void PodSandboxStateValue::SharedDtor() {
}

void PodSandboxStateValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxStateValue::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxStateValue& PodSandboxStateValue::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxStateValue();
  return *internal_default_instance();
}

PodSandboxStateValue* PodSandboxStateValue::New(::google::protobuf::Arena* arena) const {
  PodSandboxStateValue* n = new PodSandboxStateValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxStateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear();
}

bool PodSandboxStateValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxStateValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.PodSandboxState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::PodSandboxState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxStateValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxStateValue)
  return false;
#undef DO_
}

void PodSandboxStateValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxStateValue)
}

::google::protobuf::uint8* PodSandboxStateValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxStateValue)
  return target;
}

size_t PodSandboxStateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxStateValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.PodSandboxState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxStateValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxStateValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxStateValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxStateValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxStateValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxStateValue)
    MergeFrom(*source);
  }
}

void PodSandboxStateValue::MergeFrom(const PodSandboxStateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxStateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void PodSandboxStateValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxStateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxStateValue::CopyFrom(const PodSandboxStateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxStateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxStateValue::IsInitialized() const {
  return true;
}

void PodSandboxStateValue::Swap(PodSandboxStateValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxStateValue::InternalSwap(PodSandboxStateValue* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxStateValue::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodSandboxFilter_LabelSelectorEntry_DoNotUse::PodSandboxFilter_LabelSelectorEntry_DoNotUse() {}
PodSandboxFilter_LabelSelectorEntry_DoNotUse::PodSandboxFilter_LabelSelectorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandboxFilter_LabelSelectorEntry_DoNotUse::MergeFrom(const PodSandboxFilter_LabelSelectorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandboxFilter_LabelSelectorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[30];
}
void PodSandboxFilter_LabelSelectorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodSandboxFilter::InitAsDefaultInstance() {
  ::runtime::_PodSandboxFilter_default_instance_._instance.get_mutable()->state_ = const_cast< ::runtime::PodSandboxStateValue*>(
      ::runtime::PodSandboxStateValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandboxFilter::kIdFieldNumber;
const int PodSandboxFilter::kStateFieldNumber;
const int PodSandboxFilter::kLabelSelectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandboxFilter::PodSandboxFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandboxFilter)
}
PodSandboxFilter::PodSandboxFilter(const PodSandboxFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_selector_.MergeFrom(from.label_selector_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_state()) {
    state_ = new ::runtime::PodSandboxStateValue(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandboxFilter)
}

void PodSandboxFilter::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = NULL;
  _cached_size_ = 0;
}

PodSandboxFilter::~PodSandboxFilter() {
  // @@protoc_insertion_point(destructor:runtime.PodSandboxFilter)
  SharedDtor();
}

void PodSandboxFilter::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_;
}

void PodSandboxFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandboxFilter::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandboxFilter& PodSandboxFilter::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandboxFilter();
  return *internal_default_instance();
}

PodSandboxFilter* PodSandboxFilter::New(::google::protobuf::Arena* arena) const {
  PodSandboxFilter* n = new PodSandboxFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandboxFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandboxFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_selector_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool PodSandboxFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandboxFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxFilter.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxStateValue state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> label_selector = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PodSandboxFilter_LabelSelectorEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandboxFilter_LabelSelectorEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&label_selector_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxFilter.LabelSelectorEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandboxFilter.LabelSelectorEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandboxFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandboxFilter)
  return false;
#undef DO_
}

void PodSandboxFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandboxFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxFilter.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.PodSandboxStateValue state = 2;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->state_, output);
  }

  // map<string, string> label_selector = 3;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxFilter.LabelSelectorEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandboxFilter)
}

::google::protobuf::uint8* PodSandboxFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandboxFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandboxFilter.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.PodSandboxStateValue state = 2;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->state_, deterministic, target);
  }

  // map<string, string> label_selector = 3;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandboxFilter.LabelSelectorEntry.value");
      }
    };

    if (deterministic &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandboxFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandboxFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandboxFilter)
  return target;
}

size_t PodSandboxFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandboxFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> label_selector = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->label_selector_size());
  {
    ::google::protobuf::scoped_ptr<PodSandboxFilter_LabelSelectorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->label_selector().begin();
        it != this->label_selector().end(); ++it) {
      entry.reset(label_selector_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .runtime.PodSandboxStateValue state = 2;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandboxFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandboxFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandboxFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandboxFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandboxFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandboxFilter)
    MergeFrom(*source);
  }
}

void PodSandboxFilter::MergeFrom(const PodSandboxFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandboxFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_selector_.MergeFrom(from.label_selector_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_state()) {
    mutable_state()->::runtime::PodSandboxStateValue::MergeFrom(from.state());
  }
}

void PodSandboxFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandboxFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandboxFilter::CopyFrom(const PodSandboxFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandboxFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandboxFilter::IsInitialized() const {
  return true;
}

void PodSandboxFilter::Swap(PodSandboxFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandboxFilter::InternalSwap(PodSandboxFilter* other) {
  using std::swap;
  label_selector_.Swap(&other->label_selector_);
  id_.Swap(&other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandboxFilter::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListPodSandboxRequest::InitAsDefaultInstance() {
  ::runtime::_ListPodSandboxRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::runtime::PodSandboxFilter*>(
      ::runtime::PodSandboxFilter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListPodSandboxRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListPodSandboxRequest::ListPodSandboxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListPodSandboxRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListPodSandboxRequest)
}
ListPodSandboxRequest::ListPodSandboxRequest(const ListPodSandboxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filter()) {
    filter_ = new ::runtime::PodSandboxFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ListPodSandboxRequest)
}

void ListPodSandboxRequest::SharedCtor() {
  filter_ = NULL;
  _cached_size_ = 0;
}

ListPodSandboxRequest::~ListPodSandboxRequest() {
  // @@protoc_insertion_point(destructor:runtime.ListPodSandboxRequest)
  SharedDtor();
}

void ListPodSandboxRequest::SharedDtor() {
  if (this != internal_default_instance()) delete filter_;
}

void ListPodSandboxRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListPodSandboxRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListPodSandboxRequest& ListPodSandboxRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListPodSandboxRequest();
  return *internal_default_instance();
}

ListPodSandboxRequest* ListPodSandboxRequest::New(::google::protobuf::Arena* arena) const {
  ListPodSandboxRequest* n = new ListPodSandboxRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListPodSandboxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  _internal_metadata_.Clear();
}

bool ListPodSandboxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListPodSandboxRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.PodSandboxFilter filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListPodSandboxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListPodSandboxRequest)
  return false;
#undef DO_
}

void ListPodSandboxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxFilter filter = 1;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListPodSandboxRequest)
}

::google::protobuf::uint8* ListPodSandboxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListPodSandboxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.PodSandboxFilter filter = 1;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListPodSandboxRequest)
  return target;
}

size_t ListPodSandboxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListPodSandboxRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.PodSandboxFilter filter = 1;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListPodSandboxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListPodSandboxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListPodSandboxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListPodSandboxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListPodSandboxRequest)
    MergeFrom(*source);
  }
}

void ListPodSandboxRequest::MergeFrom(const ListPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListPodSandboxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filter()) {
    mutable_filter()->::runtime::PodSandboxFilter::MergeFrom(from.filter());
  }
}

void ListPodSandboxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListPodSandboxRequest::CopyFrom(const ListPodSandboxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListPodSandboxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPodSandboxRequest::IsInitialized() const {
  return true;
}

void ListPodSandboxRequest::Swap(ListPodSandboxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListPodSandboxRequest::InternalSwap(ListPodSandboxRequest* other) {
  using std::swap;
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListPodSandboxRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PodSandbox_LabelsEntry_DoNotUse::PodSandbox_LabelsEntry_DoNotUse() {}
PodSandbox_LabelsEntry_DoNotUse::PodSandbox_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandbox_LabelsEntry_DoNotUse::MergeFrom(const PodSandbox_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandbox_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[33];
}
void PodSandbox_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PodSandbox_AnnotationsEntry_DoNotUse::PodSandbox_AnnotationsEntry_DoNotUse() {}
PodSandbox_AnnotationsEntry_DoNotUse::PodSandbox_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PodSandbox_AnnotationsEntry_DoNotUse::MergeFrom(const PodSandbox_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PodSandbox_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[34];
}
void PodSandbox_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PodSandbox::InitAsDefaultInstance() {
  ::runtime::_PodSandbox_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::PodSandboxMetadata*>(
      ::runtime::PodSandboxMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PodSandbox::kIdFieldNumber;
const int PodSandbox::kMetadataFieldNumber;
const int PodSandbox::kStateFieldNumber;
const int PodSandbox::kCreatedAtFieldNumber;
const int PodSandbox::kLabelsFieldNumber;
const int PodSandbox::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PodSandbox::PodSandbox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandbox();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PodSandbox)
}
PodSandbox::PodSandbox(const PodSandbox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::PodSandboxMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  ::memcpy(&created_at_, &from.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:runtime.PodSandbox)
}

void PodSandbox::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(state_));
  _cached_size_ = 0;
}

PodSandbox::~PodSandbox() {
  // @@protoc_insertion_point(destructor:runtime.PodSandbox)
  SharedDtor();
}

void PodSandbox::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void PodSandbox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodSandbox::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PodSandbox& PodSandbox::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPodSandbox();
  return *internal_default_instance();
}

PodSandbox* PodSandbox::New(::google::protobuf::Arena* arena) const {
  PodSandbox* n = new PodSandbox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PodSandbox::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PodSandbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  annotations_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool PodSandbox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PodSandbox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandbox.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::PodSandboxState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          PodSandbox_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandbox_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandbox.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandbox.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          PodSandbox_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PodSandbox_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandbox.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PodSandbox.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PodSandbox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PodSandbox)
  return false;
#undef DO_
}

void PodSandbox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PodSandbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandbox.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->created_at(), output);
  }

  // map<string, string> labels = 5;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandbox_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandbox_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 6;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandbox_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandbox_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PodSandbox)
}

::google::protobuf::uint8* PodSandbox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PodSandbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PodSandbox.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metadata_, deterministic, target);
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->created_at(), target);
  }

  // map<string, string> labels = 5;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandbox_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandbox_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 6;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.PodSandbox.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PodSandbox_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<PodSandbox_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PodSandbox)
  return target;
}

size_t PodSandbox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PodSandbox)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<PodSandbox_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<PodSandbox_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .runtime.PodSandboxMetadata metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  // .runtime.PodSandboxState state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodSandbox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PodSandbox)
  GOOGLE_DCHECK_NE(&from, this);
  const PodSandbox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PodSandbox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PodSandbox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PodSandbox)
    MergeFrom(*source);
  }
}

void PodSandbox::MergeFrom(const PodSandbox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PodSandbox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::PodSandboxMetadata::MergeFrom(from.metadata());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void PodSandbox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PodSandbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodSandbox::CopyFrom(const PodSandbox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PodSandbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodSandbox::IsInitialized() const {
  return true;
}

void PodSandbox::Swap(PodSandbox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PodSandbox::InternalSwap(PodSandbox* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  id_.Swap(&other->id_);
  swap(metadata_, other->metadata_);
  swap(created_at_, other->created_at_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PodSandbox::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListPodSandboxResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListPodSandboxResponse::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListPodSandboxResponse::ListPodSandboxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListPodSandboxResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListPodSandboxResponse)
}
ListPodSandboxResponse::ListPodSandboxResponse(const ListPodSandboxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ListPodSandboxResponse)
}

void ListPodSandboxResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListPodSandboxResponse::~ListPodSandboxResponse() {
  // @@protoc_insertion_point(destructor:runtime.ListPodSandboxResponse)
  SharedDtor();
}

void ListPodSandboxResponse::SharedDtor() {
}

void ListPodSandboxResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListPodSandboxResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListPodSandboxResponse& ListPodSandboxResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListPodSandboxResponse();
  return *internal_default_instance();
}

ListPodSandboxResponse* ListPodSandboxResponse::New(::google::protobuf::Arena* arena) const {
  ListPodSandboxResponse* n = new ListPodSandboxResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListPodSandboxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear();
}

bool ListPodSandboxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListPodSandboxResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.PodSandbox items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListPodSandboxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListPodSandboxResponse)
  return false;
#undef DO_
}

void ListPodSandboxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.PodSandbox items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListPodSandboxResponse)
}

::google::protobuf::uint8* ListPodSandboxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListPodSandboxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.PodSandbox items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListPodSandboxResponse)
  return target;
}

size_t ListPodSandboxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListPodSandboxResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.PodSandbox items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListPodSandboxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListPodSandboxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListPodSandboxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListPodSandboxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListPodSandboxResponse)
    MergeFrom(*source);
  }
}

void ListPodSandboxResponse::MergeFrom(const ListPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListPodSandboxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ListPodSandboxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListPodSandboxResponse::CopyFrom(const ListPodSandboxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListPodSandboxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListPodSandboxResponse::IsInitialized() const {
  return true;
}

void ListPodSandboxResponse::Swap(ListPodSandboxResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListPodSandboxResponse::InternalSwap(ListPodSandboxResponse* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListPodSandboxResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageSpec::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageSpec::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageSpec::ImageSpec()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageSpec)
}
ImageSpec::ImageSpec(const ImageSpec& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ImageSpec)
}

void ImageSpec::SharedCtor() {
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ImageSpec::~ImageSpec() {
  // @@protoc_insertion_point(destructor:runtime.ImageSpec)
  SharedDtor();
}

void ImageSpec::SharedDtor() {
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageSpec::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageSpec::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageSpec& ImageSpec::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageSpec();
  return *internal_default_instance();
}

ImageSpec* ImageSpec::New(::google::protobuf::Arena* arena) const {
  ImageSpec* n = new ImageSpec;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImageSpec::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageSpec)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image().data(), static_cast<int>(this->image().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ImageSpec.image"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageSpec)
  return false;
#undef DO_
}

void ImageSpec::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ImageSpec.image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageSpec)
}

::google::protobuf::uint8* ImageSpec::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageSpec)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image = 1;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image().data(), static_cast<int>(this->image().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ImageSpec.image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageSpec)
  return target;
}

size_t ImageSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageSpec)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image = 1;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageSpec::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageSpec* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageSpec>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageSpec)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageSpec)
    MergeFrom(*source);
  }
}

void ImageSpec::MergeFrom(const ImageSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
}

void ImageSpec::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageSpec::CopyFrom(const ImageSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageSpec::IsInitialized() const {
  return true;
}

void ImageSpec::Swap(ImageSpec* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageSpec::InternalSwap(ImageSpec* other) {
  using std::swap;
  image_.Swap(&other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageSpec::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue::kKeyFieldNumber;
const int KeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue::KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsKeyValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.KeyValue)
}
KeyValue::KeyValue(const KeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.KeyValue)
}

void KeyValue::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:runtime.KeyValue)
  SharedDtor();
}

void KeyValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue& KeyValue::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsKeyValue();
  return *internal_default_instance();
}

KeyValue* KeyValue::New(::google::protobuf::Arena* arena) const {
  KeyValue* n = new KeyValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.KeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.KeyValue.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.KeyValue.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.KeyValue)
  return false;
#undef DO_
}

void KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.KeyValue.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.KeyValue.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.KeyValue)
}

::google::protobuf::uint8* KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.KeyValue.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.KeyValue.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.KeyValue)
  return target;
}

size_t KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.KeyValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.KeyValue)
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {
  return true;
}

void KeyValue::Swap(KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue::InternalSwap(KeyValue* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxContainerResources::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxContainerResources::kCpuPeriodFieldNumber;
const int LinuxContainerResources::kCpuQuotaFieldNumber;
const int LinuxContainerResources::kCpuSharesFieldNumber;
const int LinuxContainerResources::kMemoryLimitInBytesFieldNumber;
const int LinuxContainerResources::kOomScoreAdjFieldNumber;
const int LinuxContainerResources::kCpusetCpusFieldNumber;
const int LinuxContainerResources::kCpusetMemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxContainerResources::LinuxContainerResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxContainerResources)
}
LinuxContainerResources::LinuxContainerResources(const LinuxContainerResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cpuset_cpus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpuset_cpus().size() > 0) {
    cpuset_cpus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_cpus_);
  }
  cpuset_mems_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cpuset_mems().size() > 0) {
    cpuset_mems_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_mems_);
  }
  ::memcpy(&cpu_period_, &from.cpu_period_,
    static_cast<size_t>(reinterpret_cast<char*>(&oom_score_adj_) -
    reinterpret_cast<char*>(&cpu_period_)) + sizeof(oom_score_adj_));
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxContainerResources)
}

void LinuxContainerResources::SharedCtor() {
  cpuset_cpus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpuset_mems_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cpu_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oom_score_adj_) -
      reinterpret_cast<char*>(&cpu_period_)) + sizeof(oom_score_adj_));
  _cached_size_ = 0;
}

LinuxContainerResources::~LinuxContainerResources() {
  // @@protoc_insertion_point(destructor:runtime.LinuxContainerResources)
  SharedDtor();
}

void LinuxContainerResources::SharedDtor() {
  cpuset_cpus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpuset_mems_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LinuxContainerResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxContainerResources::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxContainerResources& LinuxContainerResources::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerResources();
  return *internal_default_instance();
}

LinuxContainerResources* LinuxContainerResources::New(::google::protobuf::Arena* arena) const {
  LinuxContainerResources* n = new LinuxContainerResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxContainerResources::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxContainerResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cpuset_cpus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpuset_mems_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cpu_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oom_score_adj_) -
      reinterpret_cast<char*>(&cpu_period_)) + sizeof(oom_score_adj_));
  _internal_metadata_.Clear();
}

bool LinuxContainerResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxContainerResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 cpu_period = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cpu_period_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cpu_quota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cpu_quota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cpu_shares = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cpu_shares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 memory_limit_in_bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &memory_limit_in_bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 oom_score_adj = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oom_score_adj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpuset_cpus = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpuset_cpus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpuset_cpus().data(), static_cast<int>(this->cpuset_cpus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxContainerResources.cpuset_cpus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cpuset_mems = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpuset_mems()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cpuset_mems().data(), static_cast<int>(this->cpuset_mems().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxContainerResources.cpuset_mems"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxContainerResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxContainerResources)
  return false;
#undef DO_
}

void LinuxContainerResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxContainerResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cpu_period = 1;
  if (this->cpu_period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->cpu_period(), output);
  }

  // int64 cpu_quota = 2;
  if (this->cpu_quota() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cpu_quota(), output);
  }

  // int64 cpu_shares = 3;
  if (this->cpu_shares() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->cpu_shares(), output);
  }

  // int64 memory_limit_in_bytes = 4;
  if (this->memory_limit_in_bytes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->memory_limit_in_bytes(), output);
  }

  // int64 oom_score_adj = 5;
  if (this->oom_score_adj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->oom_score_adj(), output);
  }

  // string cpuset_cpus = 6;
  if (this->cpuset_cpus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpuset_cpus().data(), static_cast<int>(this->cpuset_cpus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerResources.cpuset_cpus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cpuset_cpus(), output);
  }

  // string cpuset_mems = 7;
  if (this->cpuset_mems().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpuset_mems().data(), static_cast<int>(this->cpuset_mems().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerResources.cpuset_mems");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cpuset_mems(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxContainerResources)
}

::google::protobuf::uint8* LinuxContainerResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxContainerResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 cpu_period = 1;
  if (this->cpu_period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->cpu_period(), target);
  }

  // int64 cpu_quota = 2;
  if (this->cpu_quota() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cpu_quota(), target);
  }

  // int64 cpu_shares = 3;
  if (this->cpu_shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->cpu_shares(), target);
  }

  // int64 memory_limit_in_bytes = 4;
  if (this->memory_limit_in_bytes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->memory_limit_in_bytes(), target);
  }

  // int64 oom_score_adj = 5;
  if (this->oom_score_adj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->oom_score_adj(), target);
  }

  // string cpuset_cpus = 6;
  if (this->cpuset_cpus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpuset_cpus().data(), static_cast<int>(this->cpuset_cpus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerResources.cpuset_cpus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cpuset_cpus(), target);
  }

  // string cpuset_mems = 7;
  if (this->cpuset_mems().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cpuset_mems().data(), static_cast<int>(this->cpuset_mems().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerResources.cpuset_mems");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cpuset_mems(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxContainerResources)
  return target;
}

size_t LinuxContainerResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxContainerResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cpuset_cpus = 6;
  if (this->cpuset_cpus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpuset_cpus());
  }

  // string cpuset_mems = 7;
  if (this->cpuset_mems().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cpuset_mems());
  }

  // int64 cpu_period = 1;
  if (this->cpu_period() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cpu_period());
  }

  // int64 cpu_quota = 2;
  if (this->cpu_quota() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cpu_quota());
  }

  // int64 cpu_shares = 3;
  if (this->cpu_shares() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cpu_shares());
  }

  // int64 memory_limit_in_bytes = 4;
  if (this->memory_limit_in_bytes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->memory_limit_in_bytes());
  }

  // int64 oom_score_adj = 5;
  if (this->oom_score_adj() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oom_score_adj());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxContainerResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxContainerResources)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxContainerResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxContainerResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxContainerResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxContainerResources)
    MergeFrom(*source);
  }
}

void LinuxContainerResources::MergeFrom(const LinuxContainerResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxContainerResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cpuset_cpus().size() > 0) {

    cpuset_cpus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_cpus_);
  }
  if (from.cpuset_mems().size() > 0) {

    cpuset_mems_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_mems_);
  }
  if (from.cpu_period() != 0) {
    set_cpu_period(from.cpu_period());
  }
  if (from.cpu_quota() != 0) {
    set_cpu_quota(from.cpu_quota());
  }
  if (from.cpu_shares() != 0) {
    set_cpu_shares(from.cpu_shares());
  }
  if (from.memory_limit_in_bytes() != 0) {
    set_memory_limit_in_bytes(from.memory_limit_in_bytes());
  }
  if (from.oom_score_adj() != 0) {
    set_oom_score_adj(from.oom_score_adj());
  }
}

void LinuxContainerResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxContainerResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxContainerResources::CopyFrom(const LinuxContainerResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxContainerResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxContainerResources::IsInitialized() const {
  return true;
}

void LinuxContainerResources::Swap(LinuxContainerResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxContainerResources::InternalSwap(LinuxContainerResources* other) {
  using std::swap;
  cpuset_cpus_.Swap(&other->cpuset_cpus_);
  cpuset_mems_.Swap(&other->cpuset_mems_);
  swap(cpu_period_, other->cpu_period_);
  swap(cpu_quota_, other->cpu_quota_);
  swap(cpu_shares_, other->cpu_shares_);
  swap(memory_limit_in_bytes_, other->memory_limit_in_bytes_);
  swap(oom_score_adj_, other->oom_score_adj_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxContainerResources::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SELinuxOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SELinuxOption::kUserFieldNumber;
const int SELinuxOption::kRoleFieldNumber;
const int SELinuxOption::kTypeFieldNumber;
const int SELinuxOption::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SELinuxOption::SELinuxOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsSELinuxOption();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.SELinuxOption)
}
SELinuxOption::SELinuxOption(const SELinuxOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user().size() > 0) {
    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.level().size() > 0) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.SELinuxOption)
}

void SELinuxOption::SharedCtor() {
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SELinuxOption::~SELinuxOption() {
  // @@protoc_insertion_point(destructor:runtime.SELinuxOption)
  SharedDtor();
}

void SELinuxOption::SharedDtor() {
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SELinuxOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SELinuxOption::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SELinuxOption& SELinuxOption::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsSELinuxOption();
  return *internal_default_instance();
}

SELinuxOption* SELinuxOption::New(::google::protobuf::Arena* arena) const {
  SELinuxOption* n = new SELinuxOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SELinuxOption::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.SELinuxOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SELinuxOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.SELinuxOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user().data(), static_cast<int>(this->user().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.SELinuxOption.user"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string role = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->role().data(), static_cast<int>(this->role().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.SELinuxOption.role"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.SELinuxOption.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->level().data(), static_cast<int>(this->level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.SELinuxOption.level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.SELinuxOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.SELinuxOption)
  return false;
#undef DO_
}

void SELinuxOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.SELinuxOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user(), output);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.role");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->role(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // string level = 4;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.SELinuxOption)
}

::google::protobuf::uint8* SELinuxOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.SELinuxOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user = 1;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user().data(), static_cast<int>(this->user().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user(), target);
  }

  // string role = 2;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->role().data(), static_cast<int>(this->role().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.role");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // string level = 4;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.SELinuxOption.level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.SELinuxOption)
  return target;
}

size_t SELinuxOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.SELinuxOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string user = 1;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  // string role = 2;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->role());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string level = 4;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SELinuxOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.SELinuxOption)
  GOOGLE_DCHECK_NE(&from, this);
  const SELinuxOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SELinuxOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.SELinuxOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.SELinuxOption)
    MergeFrom(*source);
  }
}

void SELinuxOption::MergeFrom(const SELinuxOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.SELinuxOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.level().size() > 0) {

    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
}

void SELinuxOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.SELinuxOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SELinuxOption::CopyFrom(const SELinuxOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.SELinuxOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SELinuxOption::IsInitialized() const {
  return true;
}

void SELinuxOption::Swap(SELinuxOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SELinuxOption::InternalSwap(SELinuxOption* other) {
  using std::swap;
  user_.Swap(&other->user_);
  role_.Swap(&other->role_);
  type_.Swap(&other->type_);
  level_.Swap(&other->level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SELinuxOption::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Capability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Capability::kAddCapabilitiesFieldNumber;
const int Capability::kDropCapabilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Capability::Capability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsCapability();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Capability)
}
Capability::Capability(const Capability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      add_capabilities_(from.add_capabilities_),
      drop_capabilities_(from.drop_capabilities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.Capability)
}

void Capability::SharedCtor() {
  _cached_size_ = 0;
}

Capability::~Capability() {
  // @@protoc_insertion_point(destructor:runtime.Capability)
  SharedDtor();
}

void Capability::SharedDtor() {
}

void Capability::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Capability::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Capability& Capability::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsCapability();
  return *internal_default_instance();
}

Capability* Capability::New(::google::protobuf::Arena* arena) const {
  Capability* n = new Capability;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Capability::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Capability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_capabilities_.Clear();
  drop_capabilities_.Clear();
  _internal_metadata_.Clear();
}

bool Capability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Capability)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string add_capabilities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_add_capabilities()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->add_capabilities(this->add_capabilities_size() - 1).data(),
            static_cast<int>(this->add_capabilities(this->add_capabilities_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Capability.add_capabilities"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string drop_capabilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_drop_capabilities()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drop_capabilities(this->drop_capabilities_size() - 1).data(),
            static_cast<int>(this->drop_capabilities(this->drop_capabilities_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Capability.drop_capabilities"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Capability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Capability)
  return false;
#undef DO_
}

void Capability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Capability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string add_capabilities = 1;
  for (int i = 0, n = this->add_capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_capabilities(i).data(), static_cast<int>(this->add_capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Capability.add_capabilities");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->add_capabilities(i), output);
  }

  // repeated string drop_capabilities = 2;
  for (int i = 0, n = this->drop_capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drop_capabilities(i).data(), static_cast<int>(this->drop_capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Capability.drop_capabilities");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->drop_capabilities(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Capability)
}

::google::protobuf::uint8* Capability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Capability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string add_capabilities = 1;
  for (int i = 0, n = this->add_capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_capabilities(i).data(), static_cast<int>(this->add_capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Capability.add_capabilities");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->add_capabilities(i), target);
  }

  // repeated string drop_capabilities = 2;
  for (int i = 0, n = this->drop_capabilities_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drop_capabilities(i).data(), static_cast<int>(this->drop_capabilities(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Capability.drop_capabilities");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->drop_capabilities(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Capability)
  return target;
}

size_t Capability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Capability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string add_capabilities = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->add_capabilities_size());
  for (int i = 0, n = this->add_capabilities_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->add_capabilities(i));
  }

  // repeated string drop_capabilities = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->drop_capabilities_size());
  for (int i = 0, n = this->drop_capabilities_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->drop_capabilities(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Capability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Capability)
  GOOGLE_DCHECK_NE(&from, this);
  const Capability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Capability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Capability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Capability)
    MergeFrom(*source);
  }
}

void Capability::MergeFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Capability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  add_capabilities_.MergeFrom(from.add_capabilities_);
  drop_capabilities_.MergeFrom(from.drop_capabilities_);
}

void Capability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Capability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Capability::CopyFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Capability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capability::IsInitialized() const {
  return true;
}

void Capability::Swap(Capability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Capability::InternalSwap(Capability* other) {
  using std::swap;
  add_capabilities_.InternalSwap(&other->add_capabilities_);
  drop_capabilities_.InternalSwap(&other->drop_capabilities_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Capability::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxContainerSecurityContext::InitAsDefaultInstance() {
  ::runtime::_LinuxContainerSecurityContext_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::runtime::Capability*>(
      ::runtime::Capability::internal_default_instance());
  ::runtime::_LinuxContainerSecurityContext_default_instance_._instance.get_mutable()->namespace_options_ = const_cast< ::runtime::NamespaceOption*>(
      ::runtime::NamespaceOption::internal_default_instance());
  ::runtime::_LinuxContainerSecurityContext_default_instance_._instance.get_mutable()->selinux_options_ = const_cast< ::runtime::SELinuxOption*>(
      ::runtime::SELinuxOption::internal_default_instance());
  ::runtime::_LinuxContainerSecurityContext_default_instance_._instance.get_mutable()->run_as_user_ = const_cast< ::runtime::Int64Value*>(
      ::runtime::Int64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxContainerSecurityContext::kCapabilitiesFieldNumber;
const int LinuxContainerSecurityContext::kPrivilegedFieldNumber;
const int LinuxContainerSecurityContext::kNamespaceOptionsFieldNumber;
const int LinuxContainerSecurityContext::kSelinuxOptionsFieldNumber;
const int LinuxContainerSecurityContext::kRunAsUserFieldNumber;
const int LinuxContainerSecurityContext::kRunAsUsernameFieldNumber;
const int LinuxContainerSecurityContext::kReadonlyRootfsFieldNumber;
const int LinuxContainerSecurityContext::kSupplementalGroupsFieldNumber;
const int LinuxContainerSecurityContext::kApparmorProfileFieldNumber;
const int LinuxContainerSecurityContext::kSeccompProfilePathFieldNumber;
const int LinuxContainerSecurityContext::kNoNewPrivsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxContainerSecurityContext::LinuxContainerSecurityContext()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerSecurityContext();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxContainerSecurityContext)
}
LinuxContainerSecurityContext::LinuxContainerSecurityContext(const LinuxContainerSecurityContext& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supplemental_groups_(from.supplemental_groups_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  run_as_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.run_as_username().size() > 0) {
    run_as_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_as_username_);
  }
  apparmor_profile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.apparmor_profile().size() > 0) {
    apparmor_profile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apparmor_profile_);
  }
  seccomp_profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.seccomp_profile_path().size() > 0) {
    seccomp_profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seccomp_profile_path_);
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::runtime::Capability(*from.capabilities_);
  } else {
    capabilities_ = NULL;
  }
  if (from.has_namespace_options()) {
    namespace_options_ = new ::runtime::NamespaceOption(*from.namespace_options_);
  } else {
    namespace_options_ = NULL;
  }
  if (from.has_selinux_options()) {
    selinux_options_ = new ::runtime::SELinuxOption(*from.selinux_options_);
  } else {
    selinux_options_ = NULL;
  }
  if (from.has_run_as_user()) {
    run_as_user_ = new ::runtime::Int64Value(*from.run_as_user_);
  } else {
    run_as_user_ = NULL;
  }
  ::memcpy(&privileged_, &from.privileged_,
    static_cast<size_t>(reinterpret_cast<char*>(&no_new_privs_) -
    reinterpret_cast<char*>(&privileged_)) + sizeof(no_new_privs_));
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxContainerSecurityContext)
}

void LinuxContainerSecurityContext::SharedCtor() {
  run_as_username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apparmor_profile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seccomp_profile_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_new_privs_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(no_new_privs_));
  _cached_size_ = 0;
}

LinuxContainerSecurityContext::~LinuxContainerSecurityContext() {
  // @@protoc_insertion_point(destructor:runtime.LinuxContainerSecurityContext)
  SharedDtor();
}

void LinuxContainerSecurityContext::SharedDtor() {
  run_as_username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apparmor_profile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seccomp_profile_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete namespace_options_;
  if (this != internal_default_instance()) delete selinux_options_;
  if (this != internal_default_instance()) delete run_as_user_;
}

void LinuxContainerSecurityContext::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxContainerSecurityContext::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxContainerSecurityContext& LinuxContainerSecurityContext::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerSecurityContext();
  return *internal_default_instance();
}

LinuxContainerSecurityContext* LinuxContainerSecurityContext::New(::google::protobuf::Arena* arena) const {
  LinuxContainerSecurityContext* n = new LinuxContainerSecurityContext;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxContainerSecurityContext::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxContainerSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supplemental_groups_.Clear();
  run_as_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apparmor_profile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seccomp_profile_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && capabilities_ != NULL) {
    delete capabilities_;
  }
  capabilities_ = NULL;
  if (GetArenaNoVirtual() == NULL && namespace_options_ != NULL) {
    delete namespace_options_;
  }
  namespace_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && selinux_options_ != NULL) {
    delete selinux_options_;
  }
  selinux_options_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_as_user_ != NULL) {
    delete run_as_user_;
  }
  run_as_user_ = NULL;
  ::memset(&privileged_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_new_privs_) -
      reinterpret_cast<char*>(&privileged_)) + sizeof(no_new_privs_));
  _internal_metadata_.Clear();
}

bool LinuxContainerSecurityContext::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxContainerSecurityContext)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.Capability capabilities = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool privileged = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &privileged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.NamespaceOption namespace_options = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_namespace_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.SELinuxOption selinux_options = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selinux_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.Int64Value run_as_user = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_as_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string run_as_username = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_as_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->run_as_username().data(), static_cast<int>(this->run_as_username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxContainerSecurityContext.run_as_username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool readonly_rootfs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &readonly_rootfs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 supplemental_groups = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_supplemental_groups())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 66u, input, this->mutable_supplemental_groups())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string apparmor_profile = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apparmor_profile()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->apparmor_profile().data(), static_cast<int>(this->apparmor_profile().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxContainerSecurityContext.apparmor_profile"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string seccomp_profile_path = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seccomp_profile_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.LinuxContainerSecurityContext.seccomp_profile_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool no_new_privs = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_new_privs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxContainerSecurityContext)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxContainerSecurityContext)
  return false;
#undef DO_
}

void LinuxContainerSecurityContext::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxContainerSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Capability capabilities = 1;
  if (this->has_capabilities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->capabilities_, output);
  }

  // bool privileged = 2;
  if (this->privileged() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->privileged(), output);
  }

  // .runtime.NamespaceOption namespace_options = 3;
  if (this->has_namespace_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->namespace_options_, output);
  }

  // .runtime.SELinuxOption selinux_options = 4;
  if (this->has_selinux_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->selinux_options_, output);
  }

  // .runtime.Int64Value run_as_user = 5;
  if (this->has_run_as_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->run_as_user_, output);
  }

  // string run_as_username = 6;
  if (this->run_as_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->run_as_username().data(), static_cast<int>(this->run_as_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.run_as_username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->run_as_username(), output);
  }

  // bool readonly_rootfs = 7;
  if (this->readonly_rootfs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->readonly_rootfs(), output);
  }

  // repeated int64 supplemental_groups = 8;
  if (this->supplemental_groups_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _supplemental_groups_cached_byte_size_));
  }
  for (int i = 0, n = this->supplemental_groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->supplemental_groups(i), output);
  }

  // string apparmor_profile = 9;
  if (this->apparmor_profile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apparmor_profile().data(), static_cast<int>(this->apparmor_profile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.apparmor_profile");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->apparmor_profile(), output);
  }

  // string seccomp_profile_path = 10;
  if (this->seccomp_profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.seccomp_profile_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->seccomp_profile_path(), output);
  }

  // bool no_new_privs = 11;
  if (this->no_new_privs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->no_new_privs(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxContainerSecurityContext)
}

::google::protobuf::uint8* LinuxContainerSecurityContext::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxContainerSecurityContext)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Capability capabilities = 1;
  if (this->has_capabilities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->capabilities_, deterministic, target);
  }

  // bool privileged = 2;
  if (this->privileged() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->privileged(), target);
  }

  // .runtime.NamespaceOption namespace_options = 3;
  if (this->has_namespace_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->namespace_options_, deterministic, target);
  }

  // .runtime.SELinuxOption selinux_options = 4;
  if (this->has_selinux_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->selinux_options_, deterministic, target);
  }

  // .runtime.Int64Value run_as_user = 5;
  if (this->has_run_as_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->run_as_user_, deterministic, target);
  }

  // string run_as_username = 6;
  if (this->run_as_username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->run_as_username().data(), static_cast<int>(this->run_as_username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.run_as_username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->run_as_username(), target);
  }

  // bool readonly_rootfs = 7;
  if (this->readonly_rootfs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->readonly_rootfs(), target);
  }

  // repeated int64 supplemental_groups = 8;
  if (this->supplemental_groups_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _supplemental_groups_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->supplemental_groups_, target);
  }

  // string apparmor_profile = 9;
  if (this->apparmor_profile().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->apparmor_profile().data(), static_cast<int>(this->apparmor_profile().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.apparmor_profile");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->apparmor_profile(), target);
  }

  // string seccomp_profile_path = 10;
  if (this->seccomp_profile_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->seccomp_profile_path().data(), static_cast<int>(this->seccomp_profile_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.LinuxContainerSecurityContext.seccomp_profile_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->seccomp_profile_path(), target);
  }

  // bool no_new_privs = 11;
  if (this->no_new_privs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->no_new_privs(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxContainerSecurityContext)
  return target;
}

size_t LinuxContainerSecurityContext::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxContainerSecurityContext)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 supplemental_groups = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->supplemental_groups_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _supplemental_groups_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string run_as_username = 6;
  if (this->run_as_username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->run_as_username());
  }

  // string apparmor_profile = 9;
  if (this->apparmor_profile().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apparmor_profile());
  }

  // string seccomp_profile_path = 10;
  if (this->seccomp_profile_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->seccomp_profile_path());
  }

  // .runtime.Capability capabilities = 1;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->capabilities_);
  }

  // .runtime.NamespaceOption namespace_options = 3;
  if (this->has_namespace_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->namespace_options_);
  }

  // .runtime.SELinuxOption selinux_options = 4;
  if (this->has_selinux_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->selinux_options_);
  }

  // .runtime.Int64Value run_as_user = 5;
  if (this->has_run_as_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->run_as_user_);
  }

  // bool privileged = 2;
  if (this->privileged() != 0) {
    total_size += 1 + 1;
  }

  // bool readonly_rootfs = 7;
  if (this->readonly_rootfs() != 0) {
    total_size += 1 + 1;
  }

  // bool no_new_privs = 11;
  if (this->no_new_privs() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxContainerSecurityContext::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxContainerSecurityContext)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxContainerSecurityContext* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxContainerSecurityContext>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxContainerSecurityContext)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxContainerSecurityContext)
    MergeFrom(*source);
  }
}

void LinuxContainerSecurityContext::MergeFrom(const LinuxContainerSecurityContext& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxContainerSecurityContext)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supplemental_groups_.MergeFrom(from.supplemental_groups_);
  if (from.run_as_username().size() > 0) {

    run_as_username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_as_username_);
  }
  if (from.apparmor_profile().size() > 0) {

    apparmor_profile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apparmor_profile_);
  }
  if (from.seccomp_profile_path().size() > 0) {

    seccomp_profile_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seccomp_profile_path_);
  }
  if (from.has_capabilities()) {
    mutable_capabilities()->::runtime::Capability::MergeFrom(from.capabilities());
  }
  if (from.has_namespace_options()) {
    mutable_namespace_options()->::runtime::NamespaceOption::MergeFrom(from.namespace_options());
  }
  if (from.has_selinux_options()) {
    mutable_selinux_options()->::runtime::SELinuxOption::MergeFrom(from.selinux_options());
  }
  if (from.has_run_as_user()) {
    mutable_run_as_user()->::runtime::Int64Value::MergeFrom(from.run_as_user());
  }
  if (from.privileged() != 0) {
    set_privileged(from.privileged());
  }
  if (from.readonly_rootfs() != 0) {
    set_readonly_rootfs(from.readonly_rootfs());
  }
  if (from.no_new_privs() != 0) {
    set_no_new_privs(from.no_new_privs());
  }
}

void LinuxContainerSecurityContext::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxContainerSecurityContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxContainerSecurityContext::CopyFrom(const LinuxContainerSecurityContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxContainerSecurityContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxContainerSecurityContext::IsInitialized() const {
  return true;
}

void LinuxContainerSecurityContext::Swap(LinuxContainerSecurityContext* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxContainerSecurityContext::InternalSwap(LinuxContainerSecurityContext* other) {
  using std::swap;
  supplemental_groups_.InternalSwap(&other->supplemental_groups_);
  run_as_username_.Swap(&other->run_as_username_);
  apparmor_profile_.Swap(&other->apparmor_profile_);
  seccomp_profile_path_.Swap(&other->seccomp_profile_path_);
  swap(capabilities_, other->capabilities_);
  swap(namespace_options_, other->namespace_options_);
  swap(selinux_options_, other->selinux_options_);
  swap(run_as_user_, other->run_as_user_);
  swap(privileged_, other->privileged_);
  swap(readonly_rootfs_, other->readonly_rootfs_);
  swap(no_new_privs_, other->no_new_privs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxContainerSecurityContext::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LinuxContainerConfig::InitAsDefaultInstance() {
  ::runtime::_LinuxContainerConfig_default_instance_._instance.get_mutable()->resources_ = const_cast< ::runtime::LinuxContainerResources*>(
      ::runtime::LinuxContainerResources::internal_default_instance());
  ::runtime::_LinuxContainerConfig_default_instance_._instance.get_mutable()->security_context_ = const_cast< ::runtime::LinuxContainerSecurityContext*>(
      ::runtime::LinuxContainerSecurityContext::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LinuxContainerConfig::kResourcesFieldNumber;
const int LinuxContainerConfig::kSecurityContextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LinuxContainerConfig::LinuxContainerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.LinuxContainerConfig)
}
LinuxContainerConfig::LinuxContainerConfig(const LinuxContainerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_resources()) {
    resources_ = new ::runtime::LinuxContainerResources(*from.resources_);
  } else {
    resources_ = NULL;
  }
  if (from.has_security_context()) {
    security_context_ = new ::runtime::LinuxContainerSecurityContext(*from.security_context_);
  } else {
    security_context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.LinuxContainerConfig)
}

void LinuxContainerConfig::SharedCtor() {
  ::memset(&resources_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&security_context_) -
      reinterpret_cast<char*>(&resources_)) + sizeof(security_context_));
  _cached_size_ = 0;
}

LinuxContainerConfig::~LinuxContainerConfig() {
  // @@protoc_insertion_point(destructor:runtime.LinuxContainerConfig)
  SharedDtor();
}

void LinuxContainerConfig::SharedDtor() {
  if (this != internal_default_instance()) delete resources_;
  if (this != internal_default_instance()) delete security_context_;
}

void LinuxContainerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LinuxContainerConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LinuxContainerConfig& LinuxContainerConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsLinuxContainerConfig();
  return *internal_default_instance();
}

LinuxContainerConfig* LinuxContainerConfig::New(::google::protobuf::Arena* arena) const {
  LinuxContainerConfig* n = new LinuxContainerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LinuxContainerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.LinuxContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && security_context_ != NULL) {
    delete security_context_;
  }
  security_context_ = NULL;
  _internal_metadata_.Clear();
}

bool LinuxContainerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.LinuxContainerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.LinuxContainerResources resources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxContainerSecurityContext security_context = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.LinuxContainerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.LinuxContainerConfig)
  return false;
#undef DO_
}

void LinuxContainerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.LinuxContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.LinuxContainerResources resources = 1;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->resources_, output);
  }

  // .runtime.LinuxContainerSecurityContext security_context = 2;
  if (this->has_security_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->security_context_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.LinuxContainerConfig)
}

::google::protobuf::uint8* LinuxContainerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.LinuxContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.LinuxContainerResources resources = 1;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->resources_, deterministic, target);
  }

  // .runtime.LinuxContainerSecurityContext security_context = 2;
  if (this->has_security_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->security_context_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.LinuxContainerConfig)
  return target;
}

size_t LinuxContainerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.LinuxContainerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.LinuxContainerResources resources = 1;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->resources_);
  }

  // .runtime.LinuxContainerSecurityContext security_context = 2;
  if (this->has_security_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LinuxContainerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.LinuxContainerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LinuxContainerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LinuxContainerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.LinuxContainerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.LinuxContainerConfig)
    MergeFrom(*source);
  }
}

void LinuxContainerConfig::MergeFrom(const LinuxContainerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.LinuxContainerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_resources()) {
    mutable_resources()->::runtime::LinuxContainerResources::MergeFrom(from.resources());
  }
  if (from.has_security_context()) {
    mutable_security_context()->::runtime::LinuxContainerSecurityContext::MergeFrom(from.security_context());
  }
}

void LinuxContainerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.LinuxContainerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LinuxContainerConfig::CopyFrom(const LinuxContainerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.LinuxContainerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LinuxContainerConfig::IsInitialized() const {
  return true;
}

void LinuxContainerConfig::Swap(LinuxContainerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LinuxContainerConfig::InternalSwap(LinuxContainerConfig* other) {
  using std::swap;
  swap(resources_, other->resources_);
  swap(security_context_, other->security_context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LinuxContainerConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerMetadata::kNameFieldNumber;
const int ContainerMetadata::kAttemptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerMetadata::ContainerMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerMetadata)
}
ContainerMetadata::ContainerMetadata(const ContainerMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  attempt_ = from.attempt_;
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerMetadata)
}

void ContainerMetadata::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attempt_ = 0u;
  _cached_size_ = 0;
}

ContainerMetadata::~ContainerMetadata() {
  // @@protoc_insertion_point(destructor:runtime.ContainerMetadata)
  SharedDtor();
}

void ContainerMetadata::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerMetadata::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerMetadata& ContainerMetadata::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerMetadata();
  return *internal_default_instance();
}

ContainerMetadata* ContainerMetadata::New(::google::protobuf::Arena* arena) const {
  ContainerMetadata* n = new ContainerMetadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attempt_ = 0u;
  _internal_metadata_.Clear();
}

bool ContainerMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerMetadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerMetadata.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attempt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attempt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerMetadata)
  return false;
#undef DO_
}

void ContainerMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerMetadata.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 attempt = 2;
  if (this->attempt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attempt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerMetadata)
}

::google::protobuf::uint8* ContainerMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerMetadata.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 attempt = 2;
  if (this->attempt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attempt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerMetadata)
  return target;
}

size_t ContainerMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 attempt = 2;
  if (this->attempt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attempt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerMetadata)
    MergeFrom(*source);
  }
}

void ContainerMetadata::MergeFrom(const ContainerMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.attempt() != 0) {
    set_attempt(from.attempt());
  }
}

void ContainerMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerMetadata::CopyFrom(const ContainerMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerMetadata::IsInitialized() const {
  return true;
}

void ContainerMetadata::Swap(ContainerMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerMetadata::InternalSwap(ContainerMetadata* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(attempt_, other->attempt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerMetadata::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Device::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Device::kContainerPathFieldNumber;
const int Device::kHostPathFieldNumber;
const int Device::kPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Device::Device()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsDevice();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Device)
}
Device::Device(const Device& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_path().size() > 0) {
    container_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_path_);
  }
  host_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_path().size() > 0) {
    host_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_path_);
  }
  permissions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.permissions().size() > 0) {
    permissions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permissions_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.Device)
}

void Device::SharedCtor() {
  container_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Device::~Device() {
  // @@protoc_insertion_point(destructor:runtime.Device)
  SharedDtor();
}

void Device::SharedDtor() {
  container_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Device::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Device::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Device& Device::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsDevice();
  return *internal_default_instance();
}

Device* Device::New(::google::protobuf::Arena* arena) const {
  Device* n = new Device;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Device::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  permissions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Device::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Device)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_path().data(), static_cast<int>(this->container_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Device.container_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_path().data(), static_cast<int>(this->host_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Device.host_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string permissions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_permissions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->permissions().data(), static_cast<int>(this->permissions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Device.permissions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Device)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Device)
  return false;
#undef DO_
}

void Device::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_path = 1;
  if (this->container_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_path().data(), static_cast<int>(this->container_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.container_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_path(), output);
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_path().data(), static_cast<int>(this->host_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.host_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_path(), output);
  }

  // string permissions = 3;
  if (this->permissions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions().data(), static_cast<int>(this->permissions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.permissions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->permissions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Device)
}

::google::protobuf::uint8* Device::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Device)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_path = 1;
  if (this->container_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_path().data(), static_cast<int>(this->container_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.container_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_path(), target);
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_path().data(), static_cast<int>(this->host_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.host_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_path(), target);
  }

  // string permissions = 3;
  if (this->permissions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->permissions().data(), static_cast<int>(this->permissions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Device.permissions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->permissions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Device)
  return target;
}

size_t Device::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Device)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_path = 1;
  if (this->container_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_path());
  }

  // string host_path = 2;
  if (this->host_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_path());
  }

  // string permissions = 3;
  if (this->permissions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->permissions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Device::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Device)
  GOOGLE_DCHECK_NE(&from, this);
  const Device* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Device>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Device)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Device)
    MergeFrom(*source);
  }
}

void Device::MergeFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Device)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_path().size() > 0) {

    container_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_path_);
  }
  if (from.host_path().size() > 0) {

    host_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_path_);
  }
  if (from.permissions().size() > 0) {

    permissions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.permissions_);
  }
}

void Device::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Device::CopyFrom(const Device& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Device)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Device::IsInitialized() const {
  return true;
}

void Device::Swap(Device* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Device::InternalSwap(Device* other) {
  using std::swap;
  container_path_.Swap(&other->container_path_);
  host_path_.Swap(&other->host_path_);
  permissions_.Swap(&other->permissions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Device::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerConfig_LabelsEntry_DoNotUse::ContainerConfig_LabelsEntry_DoNotUse() {}
ContainerConfig_LabelsEntry_DoNotUse::ContainerConfig_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerConfig_LabelsEntry_DoNotUse::MergeFrom(const ContainerConfig_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerConfig_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[46];
}
void ContainerConfig_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ContainerConfig_AnnotationsEntry_DoNotUse::ContainerConfig_AnnotationsEntry_DoNotUse() {}
ContainerConfig_AnnotationsEntry_DoNotUse::ContainerConfig_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerConfig_AnnotationsEntry_DoNotUse::MergeFrom(const ContainerConfig_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerConfig_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[47];
}
void ContainerConfig_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerConfig::InitAsDefaultInstance() {
  ::runtime::_ContainerConfig_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::ContainerMetadata*>(
      ::runtime::ContainerMetadata::internal_default_instance());
  ::runtime::_ContainerConfig_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
  ::runtime::_ContainerConfig_default_instance_._instance.get_mutable()->linux_ = const_cast< ::runtime::LinuxContainerConfig*>(
      ::runtime::LinuxContainerConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerConfig::kMetadataFieldNumber;
const int ContainerConfig::kImageFieldNumber;
const int ContainerConfig::kCommandFieldNumber;
const int ContainerConfig::kArgsFieldNumber;
const int ContainerConfig::kWorkingDirFieldNumber;
const int ContainerConfig::kEnvsFieldNumber;
const int ContainerConfig::kMountsFieldNumber;
const int ContainerConfig::kDevicesFieldNumber;
const int ContainerConfig::kLabelsFieldNumber;
const int ContainerConfig::kAnnotationsFieldNumber;
const int ContainerConfig::kLogPathFieldNumber;
const int ContainerConfig::kStdinFieldNumber;
const int ContainerConfig::kStdinOnceFieldNumber;
const int ContainerConfig::kTtyFieldNumber;
const int ContainerConfig::kLinuxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerConfig::ContainerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerConfig)
}
ContainerConfig::ContainerConfig(const ContainerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      command_(from.command_),
      args_(from.args_),
      envs_(from.envs_),
      mounts_(from.mounts_),
      devices_(from.devices_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  working_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.working_dir().size() > 0) {
    working_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_dir_);
  }
  log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_path().size() > 0) {
    log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::ContainerMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  if (from.has_linux()) {
    linux_ = new ::runtime::LinuxContainerConfig(*from.linux_);
  } else {
    linux_ = NULL;
  }
  ::memcpy(&stdin_, &from.stdin_,
    static_cast<size_t>(reinterpret_cast<char*>(&tty_) -
    reinterpret_cast<char*>(&stdin_)) + sizeof(tty_));
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerConfig)
}

void ContainerConfig::SharedCtor() {
  working_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tty_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(tty_));
  _cached_size_ = 0;
}

ContainerConfig::~ContainerConfig() {
  // @@protoc_insertion_point(destructor:runtime.ContainerConfig)
  SharedDtor();
}

void ContainerConfig::SharedDtor() {
  working_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete linux_;
}

void ContainerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerConfig& ContainerConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerConfig();
  return *internal_default_instance();
}

ContainerConfig* ContainerConfig::New(::google::protobuf::Arena* arena) const {
  ContainerConfig* n = new ContainerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_.Clear();
  args_.Clear();
  envs_.Clear();
  mounts_.Clear();
  devices_.Clear();
  labels_.Clear();
  annotations_.Clear();
  working_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && linux_ != NULL) {
    delete linux_;
  }
  linux_ = NULL;
  ::memset(&stdin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tty_) -
      reinterpret_cast<char*>(&stdin_)) + sizeof(tty_));
  _internal_metadata_.Clear();
}

bool ContainerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerMetadata metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ImageSpec image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string command = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command(this->command_size() - 1).data(),
            static_cast<int>(this->command(this->command_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.command"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string args = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->args(this->args_size() - 1).data(),
            static_cast<int>(this->args(this->args_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.args"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string working_dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_working_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->working_dir().data(), static_cast<int>(this->working_dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.working_dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .runtime.KeyValue envs = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_envs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .runtime.Mount mounts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .runtime.Device devices = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          ContainerConfig_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerConfig_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          ContainerConfig_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerConfig_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_path = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_path().data(), static_cast<int>(this->log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerConfig.log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdin = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdin_once = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdin_once_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tty = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxContainerConfig linux = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linux()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerConfig)
  return false;
#undef DO_
}

void ContainerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerMetadata metadata = 1;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->metadata_, output);
  }

  // .runtime.ImageSpec image = 2;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->image_, output);
  }

  // repeated string command = 3;
  for (int i = 0, n = this->command_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command(i).data(), static_cast<int>(this->command(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.command");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->command(i), output);
  }

  // repeated string args = 4;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->args(i), output);
  }

  // string working_dir = 5;
  if (this->working_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_dir().data(), static_cast<int>(this->working_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.working_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->working_dir(), output);
  }

  // repeated .runtime.KeyValue envs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->envs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->envs(static_cast<int>(i)), output);
  }

  // repeated .runtime.Mount mounts = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->mounts(static_cast<int>(i)), output);
  }

  // repeated .runtime.Device devices = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->devices(static_cast<int>(i)), output);
  }

  // map<string, string> labels = 9;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 10;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerConfig_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerConfig_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string log_path = 11;
  if (this->log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_path().data(), static_cast<int>(this->log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->log_path(), output);
  }

  // bool stdin = 12;
  if (this->stdin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->stdin(), output);
  }

  // bool stdin_once = 13;
  if (this->stdin_once() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->stdin_once(), output);
  }

  // bool tty = 14;
  if (this->tty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->tty(), output);
  }

  // .runtime.LinuxContainerConfig linux = 15;
  if (this->has_linux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->linux_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerConfig)
}

::google::protobuf::uint8* ContainerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerMetadata metadata = 1;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->metadata_, deterministic, target);
  }

  // .runtime.ImageSpec image = 2;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->image_, deterministic, target);
  }

  // repeated string command = 3;
  for (int i = 0, n = this->command_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command(i).data(), static_cast<int>(this->command(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.command");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->command(i), target);
  }

  // repeated string args = 4;
  for (int i = 0, n = this->args_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->args(i).data(), static_cast<int>(this->args(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->args(i), target);
  }

  // string working_dir = 5;
  if (this->working_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_dir().data(), static_cast<int>(this->working_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.working_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->working_dir(), target);
  }

  // repeated .runtime.KeyValue envs = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->envs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->envs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .runtime.Mount mounts = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->mounts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .runtime.Device devices = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->devices(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> labels = 9;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerConfig_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerConfig_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 10;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerConfig.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerConfig_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerConfig_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string log_path = 11;
  if (this->log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_path().data(), static_cast<int>(this->log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerConfig.log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->log_path(), target);
  }

  // bool stdin = 12;
  if (this->stdin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->stdin(), target);
  }

  // bool stdin_once = 13;
  if (this->stdin_once() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->stdin_once(), target);
  }

  // bool tty = 14;
  if (this->tty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->tty(), target);
  }

  // .runtime.LinuxContainerConfig linux = 15;
  if (this->has_linux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *this->linux_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerConfig)
  return target;
}

size_t ContainerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string command = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->command_size());
  for (int i = 0, n = this->command_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->command(i));
  }

  // repeated string args = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->args_size());
  for (int i = 0, n = this->args_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  // repeated .runtime.KeyValue envs = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->envs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->envs(static_cast<int>(i)));
    }
  }

  // repeated .runtime.Mount mounts = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->mounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mounts(static_cast<int>(i)));
    }
  }

  // repeated .runtime.Device devices = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // map<string, string> labels = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<ContainerConfig_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<ContainerConfig_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string working_dir = 5;
  if (this->working_dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->working_dir());
  }

  // string log_path = 11;
  if (this->log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_path());
  }

  // .runtime.ContainerMetadata metadata = 1;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .runtime.ImageSpec image = 2;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // .runtime.LinuxContainerConfig linux = 15;
  if (this->has_linux()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->linux_);
  }

  // bool stdin = 12;
  if (this->stdin() != 0) {
    total_size += 1 + 1;
  }

  // bool stdin_once = 13;
  if (this->stdin_once() != 0) {
    total_size += 1 + 1;
  }

  // bool tty = 14;
  if (this->tty() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerConfig)
    MergeFrom(*source);
  }
}

void ContainerConfig::MergeFrom(const ContainerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  command_.MergeFrom(from.command_);
  args_.MergeFrom(from.args_);
  envs_.MergeFrom(from.envs_);
  mounts_.MergeFrom(from.mounts_);
  devices_.MergeFrom(from.devices_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.working_dir().size() > 0) {

    working_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_dir_);
  }
  if (from.log_path().size() > 0) {

    log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::ContainerMetadata::MergeFrom(from.metadata());
  }
  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
  if (from.has_linux()) {
    mutable_linux()->::runtime::LinuxContainerConfig::MergeFrom(from.linux());
  }
  if (from.stdin() != 0) {
    set_stdin(from.stdin());
  }
  if (from.stdin_once() != 0) {
    set_stdin_once(from.stdin_once());
  }
  if (from.tty() != 0) {
    set_tty(from.tty());
  }
}

void ContainerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerConfig::CopyFrom(const ContainerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerConfig::IsInitialized() const {
  return true;
}

void ContainerConfig::Swap(ContainerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerConfig::InternalSwap(ContainerConfig* other) {
  using std::swap;
  command_.InternalSwap(&other->command_);
  args_.InternalSwap(&other->args_);
  envs_.InternalSwap(&other->envs_);
  mounts_.InternalSwap(&other->mounts_);
  devices_.InternalSwap(&other->devices_);
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  working_dir_.Swap(&other->working_dir_);
  log_path_.Swap(&other->log_path_);
  swap(metadata_, other->metadata_);
  swap(image_, other->image_);
  swap(linux_, other->linux_);
  swap(stdin_, other->stdin_);
  swap(stdin_once_, other->stdin_once_);
  swap(tty_, other->tty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateContainerRequest::InitAsDefaultInstance() {
  ::runtime::_CreateContainerRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::runtime::ContainerConfig*>(
      ::runtime::ContainerConfig::internal_default_instance());
  ::runtime::_CreateContainerRequest_default_instance_._instance.get_mutable()->sandbox_config_ = const_cast< ::runtime::PodSandboxConfig*>(
      ::runtime::PodSandboxConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateContainerRequest::kPodSandboxIdFieldNumber;
const int CreateContainerRequest::kConfigFieldNumber;
const int CreateContainerRequest::kSandboxConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateContainerRequest::CreateContainerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsCreateContainerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.CreateContainerRequest)
}
CreateContainerRequest::CreateContainerRequest(const CreateContainerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.has_config()) {
    config_ = new ::runtime::ContainerConfig(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_sandbox_config()) {
    sandbox_config_ = new ::runtime::PodSandboxConfig(*from.sandbox_config_);
  } else {
    sandbox_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.CreateContainerRequest)
}

void CreateContainerRequest::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sandbox_config_) -
      reinterpret_cast<char*>(&config_)) + sizeof(sandbox_config_));
  _cached_size_ = 0;
}

CreateContainerRequest::~CreateContainerRequest() {
  // @@protoc_insertion_point(destructor:runtime.CreateContainerRequest)
  SharedDtor();
}

void CreateContainerRequest::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete sandbox_config_;
}

void CreateContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContainerRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateContainerRequest& CreateContainerRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsCreateContainerRequest();
  return *internal_default_instance();
}

CreateContainerRequest* CreateContainerRequest::New(::google::protobuf::Arena* arena) const {
  CreateContainerRequest* n = new CreateContainerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateContainerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.CreateContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && sandbox_config_ != NULL) {
    delete sandbox_config_;
  }
  sandbox_config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.CreateContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.CreateContainerRequest.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerConfig config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxConfig sandbox_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sandbox_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.CreateContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.CreateContainerRequest)
  return false;
#undef DO_
}

void CreateContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.CreateContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.CreateContainerRequest.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  // .runtime.ContainerConfig config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->sandbox_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.CreateContainerRequest)
}

::google::protobuf::uint8* CreateContainerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.CreateContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.CreateContainerRequest.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  // .runtime.ContainerConfig config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->sandbox_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.CreateContainerRequest)
  return target;
}

size_t CreateContainerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.CreateContainerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  // .runtime.ContainerConfig config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sandbox_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.CreateContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateContainerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateContainerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.CreateContainerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.CreateContainerRequest)
    MergeFrom(*source);
  }
}

void CreateContainerRequest::MergeFrom(const CreateContainerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.CreateContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.has_config()) {
    mutable_config()->::runtime::ContainerConfig::MergeFrom(from.config());
  }
  if (from.has_sandbox_config()) {
    mutable_sandbox_config()->::runtime::PodSandboxConfig::MergeFrom(from.sandbox_config());
  }
}

void CreateContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.CreateContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContainerRequest::CopyFrom(const CreateContainerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.CreateContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContainerRequest::IsInitialized() const {
  return true;
}

void CreateContainerRequest::Swap(CreateContainerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateContainerRequest::InternalSwap(CreateContainerRequest* other) {
  using std::swap;
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  swap(config_, other->config_);
  swap(sandbox_config_, other->sandbox_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateContainerRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateContainerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateContainerResponse::kContainerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateContainerResponse::CreateContainerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsCreateContainerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.CreateContainerResponse)
}
CreateContainerResponse::CreateContainerResponse(const CreateContainerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.CreateContainerResponse)
}

void CreateContainerResponse::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateContainerResponse::~CreateContainerResponse() {
  // @@protoc_insertion_point(destructor:runtime.CreateContainerResponse)
  SharedDtor();
}

void CreateContainerResponse::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateContainerResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateContainerResponse& CreateContainerResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsCreateContainerResponse();
  return *internal_default_instance();
}

CreateContainerResponse* CreateContainerResponse::New(::google::protobuf::Arena* arena) const {
  CreateContainerResponse* n = new CreateContainerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateContainerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.CreateContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.CreateContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.CreateContainerResponse.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.CreateContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.CreateContainerResponse)
  return false;
#undef DO_
}

void CreateContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.CreateContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.CreateContainerResponse.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.CreateContainerResponse)
}

::google::protobuf::uint8* CreateContainerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.CreateContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.CreateContainerResponse.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.CreateContainerResponse)
  return target;
}

size_t CreateContainerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.CreateContainerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.CreateContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateContainerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateContainerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.CreateContainerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.CreateContainerResponse)
    MergeFrom(*source);
  }
}

void CreateContainerResponse::MergeFrom(const CreateContainerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.CreateContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
}

void CreateContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.CreateContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateContainerResponse::CopyFrom(const CreateContainerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.CreateContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateContainerResponse::IsInitialized() const {
  return true;
}

void CreateContainerResponse::Swap(CreateContainerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateContainerResponse::InternalSwap(CreateContainerResponse* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateContainerResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartContainerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartContainerRequest::kContainerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartContainerRequest::StartContainerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStartContainerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StartContainerRequest)
}
StartContainerRequest::StartContainerRequest(const StartContainerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.StartContainerRequest)
}

void StartContainerRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StartContainerRequest::~StartContainerRequest() {
  // @@protoc_insertion_point(destructor:runtime.StartContainerRequest)
  SharedDtor();
}

void StartContainerRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainerRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartContainerRequest& StartContainerRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStartContainerRequest();
  return *internal_default_instance();
}

StartContainerRequest* StartContainerRequest::New(::google::protobuf::Arena* arena) const {
  StartContainerRequest* n = new StartContainerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartContainerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StartContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StartContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StartContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StartContainerRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StartContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StartContainerRequest)
  return false;
#undef DO_
}

void StartContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StartContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StartContainerRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StartContainerRequest)
}

::google::protobuf::uint8* StartContainerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StartContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StartContainerRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StartContainerRequest)
  return target;
}

size_t StartContainerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StartContainerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StartContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartContainerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartContainerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StartContainerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StartContainerRequest)
    MergeFrom(*source);
  }
}

void StartContainerRequest::MergeFrom(const StartContainerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StartContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
}

void StartContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StartContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainerRequest::CopyFrom(const StartContainerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StartContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainerRequest::IsInitialized() const {
  return true;
}

void StartContainerRequest::Swap(StartContainerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartContainerRequest::InternalSwap(StartContainerRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartContainerRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartContainerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartContainerResponse::StartContainerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStartContainerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StartContainerResponse)
}
StartContainerResponse::StartContainerResponse(const StartContainerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.StartContainerResponse)
}

void StartContainerResponse::SharedCtor() {
  _cached_size_ = 0;
}

StartContainerResponse::~StartContainerResponse() {
  // @@protoc_insertion_point(destructor:runtime.StartContainerResponse)
  SharedDtor();
}

void StartContainerResponse::SharedDtor() {
}

void StartContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartContainerResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartContainerResponse& StartContainerResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStartContainerResponse();
  return *internal_default_instance();
}

StartContainerResponse* StartContainerResponse::New(::google::protobuf::Arena* arena) const {
  StartContainerResponse* n = new StartContainerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartContainerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StartContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StartContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StartContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StartContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StartContainerResponse)
  return false;
#undef DO_
}

void StartContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StartContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StartContainerResponse)
}

::google::protobuf::uint8* StartContainerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StartContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StartContainerResponse)
  return target;
}

size_t StartContainerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StartContainerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StartContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StartContainerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartContainerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StartContainerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StartContainerResponse)
    MergeFrom(*source);
  }
}

void StartContainerResponse::MergeFrom(const StartContainerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StartContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StartContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StartContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartContainerResponse::CopyFrom(const StartContainerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StartContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartContainerResponse::IsInitialized() const {
  return true;
}

void StartContainerResponse::Swap(StartContainerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartContainerResponse::InternalSwap(StartContainerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartContainerResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopContainerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopContainerRequest::kContainerIdFieldNumber;
const int StopContainerRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopContainerRequest::StopContainerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStopContainerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StopContainerRequest)
}
StopContainerRequest::StopContainerRequest(const StopContainerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:runtime.StopContainerRequest)
}

void StopContainerRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

StopContainerRequest::~StopContainerRequest() {
  // @@protoc_insertion_point(destructor:runtime.StopContainerRequest)
  SharedDtor();
}

void StopContainerRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainerRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopContainerRequest& StopContainerRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStopContainerRequest();
  return *internal_default_instance();
}

StopContainerRequest* StopContainerRequest::New(::google::protobuf::Arena* arena) const {
  StopContainerRequest* n = new StopContainerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopContainerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StopContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool StopContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StopContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StopContainerRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timeout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StopContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StopContainerRequest)
  return false;
#undef DO_
}

void StopContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StopContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StopContainerRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StopContainerRequest)
}

::google::protobuf::uint8* StopContainerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StopContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StopContainerRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timeout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StopContainerRequest)
  return target;
}

size_t StopContainerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StopContainerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // int64 timeout = 2;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StopContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopContainerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopContainerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StopContainerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StopContainerRequest)
    MergeFrom(*source);
  }
}

void StopContainerRequest::MergeFrom(const StopContainerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StopContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void StopContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StopContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainerRequest::CopyFrom(const StopContainerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StopContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainerRequest::IsInitialized() const {
  return true;
}

void StopContainerRequest::Swap(StopContainerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopContainerRequest::InternalSwap(StopContainerRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  swap(timeout_, other->timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopContainerRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopContainerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopContainerResponse::StopContainerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStopContainerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StopContainerResponse)
}
StopContainerResponse::StopContainerResponse(const StopContainerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.StopContainerResponse)
}

void StopContainerResponse::SharedCtor() {
  _cached_size_ = 0;
}

StopContainerResponse::~StopContainerResponse() {
  // @@protoc_insertion_point(destructor:runtime.StopContainerResponse)
  SharedDtor();
}

void StopContainerResponse::SharedDtor() {
}

void StopContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopContainerResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopContainerResponse& StopContainerResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStopContainerResponse();
  return *internal_default_instance();
}

StopContainerResponse* StopContainerResponse::New(::google::protobuf::Arena* arena) const {
  StopContainerResponse* n = new StopContainerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopContainerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StopContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StopContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StopContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StopContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StopContainerResponse)
  return false;
#undef DO_
}

void StopContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StopContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StopContainerResponse)
}

::google::protobuf::uint8* StopContainerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StopContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StopContainerResponse)
  return target;
}

size_t StopContainerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StopContainerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StopContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopContainerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopContainerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StopContainerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StopContainerResponse)
    MergeFrom(*source);
  }
}

void StopContainerResponse::MergeFrom(const StopContainerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StopContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StopContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopContainerResponse::CopyFrom(const StopContainerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StopContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopContainerResponse::IsInitialized() const {
  return true;
}

void StopContainerResponse::Swap(StopContainerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopContainerResponse::InternalSwap(StopContainerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopContainerResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveContainerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveContainerRequest::kContainerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveContainerRequest::RemoveContainerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveContainerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemoveContainerRequest)
}
RemoveContainerRequest::RemoveContainerRequest(const RemoveContainerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RemoveContainerRequest)
}

void RemoveContainerRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RemoveContainerRequest::~RemoveContainerRequest() {
  // @@protoc_insertion_point(destructor:runtime.RemoveContainerRequest)
  SharedDtor();
}

void RemoveContainerRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveContainerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveContainerRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveContainerRequest& RemoveContainerRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveContainerRequest();
  return *internal_default_instance();
}

RemoveContainerRequest* RemoveContainerRequest::New(::google::protobuf::Arena* arena) const {
  RemoveContainerRequest* n = new RemoveContainerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveContainerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemoveContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemoveContainerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemoveContainerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RemoveContainerRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemoveContainerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemoveContainerRequest)
  return false;
#undef DO_
}

void RemoveContainerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemoveContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RemoveContainerRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemoveContainerRequest)
}

::google::protobuf::uint8* RemoveContainerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemoveContainerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RemoveContainerRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemoveContainerRequest)
  return target;
}

size_t RemoveContainerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemoveContainerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveContainerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemoveContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveContainerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveContainerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemoveContainerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemoveContainerRequest)
    MergeFrom(*source);
  }
}

void RemoveContainerRequest::MergeFrom(const RemoveContainerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemoveContainerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
}

void RemoveContainerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemoveContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveContainerRequest::CopyFrom(const RemoveContainerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemoveContainerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveContainerRequest::IsInitialized() const {
  return true;
}

void RemoveContainerRequest::Swap(RemoveContainerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveContainerRequest::InternalSwap(RemoveContainerRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveContainerRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveContainerResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveContainerResponse::RemoveContainerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveContainerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemoveContainerResponse)
}
RemoveContainerResponse::RemoveContainerResponse(const RemoveContainerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.RemoveContainerResponse)
}

void RemoveContainerResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemoveContainerResponse::~RemoveContainerResponse() {
  // @@protoc_insertion_point(destructor:runtime.RemoveContainerResponse)
  SharedDtor();
}

void RemoveContainerResponse::SharedDtor() {
}

void RemoveContainerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveContainerResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveContainerResponse& RemoveContainerResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveContainerResponse();
  return *internal_default_instance();
}

RemoveContainerResponse* RemoveContainerResponse::New(::google::protobuf::Arena* arena) const {
  RemoveContainerResponse* n = new RemoveContainerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveContainerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemoveContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveContainerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemoveContainerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemoveContainerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemoveContainerResponse)
  return false;
#undef DO_
}

void RemoveContainerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemoveContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemoveContainerResponse)
}

::google::protobuf::uint8* RemoveContainerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemoveContainerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemoveContainerResponse)
  return target;
}

size_t RemoveContainerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemoveContainerResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveContainerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemoveContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveContainerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveContainerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemoveContainerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemoveContainerResponse)
    MergeFrom(*source);
  }
}

void RemoveContainerResponse::MergeFrom(const RemoveContainerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemoveContainerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveContainerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemoveContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveContainerResponse::CopyFrom(const RemoveContainerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemoveContainerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveContainerResponse::IsInitialized() const {
  return true;
}

void RemoveContainerResponse::Swap(RemoveContainerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveContainerResponse::InternalSwap(RemoveContainerResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveContainerResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerStateValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStateValue::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStateValue::ContainerStateValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStateValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStateValue)
}
ContainerStateValue::ContainerStateValue(const ContainerStateValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStateValue)
}

void ContainerStateValue::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

ContainerStateValue::~ContainerStateValue() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStateValue)
  SharedDtor();
}

void ContainerStateValue::SharedDtor() {
}

void ContainerStateValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStateValue::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStateValue& ContainerStateValue::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStateValue();
  return *internal_default_instance();
}

ContainerStateValue* ContainerStateValue::New(::google::protobuf::Arena* arena) const {
  ContainerStateValue* n = new ContainerStateValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear();
}

bool ContainerStateValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStateValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::ContainerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStateValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStateValue)
  return false;
#undef DO_
}

void ContainerStateValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStateValue)
}

::google::protobuf::uint8* ContainerStateValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStateValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStateValue)
  return target;
}

size_t ContainerStateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStateValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ContainerState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStateValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStateValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStateValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStateValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStateValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStateValue)
    MergeFrom(*source);
  }
}

void ContainerStateValue::MergeFrom(const ContainerStateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void ContainerStateValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStateValue::CopyFrom(const ContainerStateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStateValue::IsInitialized() const {
  return true;
}

void ContainerStateValue::Swap(ContainerStateValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStateValue::InternalSwap(ContainerStateValue* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStateValue::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerFilter_LabelSelectorEntry_DoNotUse::ContainerFilter_LabelSelectorEntry_DoNotUse() {}
ContainerFilter_LabelSelectorEntry_DoNotUse::ContainerFilter_LabelSelectorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerFilter_LabelSelectorEntry_DoNotUse::MergeFrom(const ContainerFilter_LabelSelectorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerFilter_LabelSelectorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[58];
}
void ContainerFilter_LabelSelectorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerFilter::InitAsDefaultInstance() {
  ::runtime::_ContainerFilter_default_instance_._instance.get_mutable()->state_ = const_cast< ::runtime::ContainerStateValue*>(
      ::runtime::ContainerStateValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerFilter::kIdFieldNumber;
const int ContainerFilter::kStateFieldNumber;
const int ContainerFilter::kPodSandboxIdFieldNumber;
const int ContainerFilter::kLabelSelectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerFilter::ContainerFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerFilter)
}
ContainerFilter::ContainerFilter(const ContainerFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_selector_.MergeFrom(from.label_selector_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.has_state()) {
    state_ = new ::runtime::ContainerStateValue(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerFilter)
}

void ContainerFilter::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = NULL;
  _cached_size_ = 0;
}

ContainerFilter::~ContainerFilter() {
  // @@protoc_insertion_point(destructor:runtime.ContainerFilter)
  SharedDtor();
}

void ContainerFilter::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete state_;
}

void ContainerFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerFilter::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerFilter& ContainerFilter::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerFilter();
  return *internal_default_instance();
}

ContainerFilter* ContainerFilter::New(::google::protobuf::Arena* arena) const {
  ContainerFilter* n = new ContainerFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_selector_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool ContainerFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerFilter.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerStateValue state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pod_sandbox_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerFilter.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> label_selector = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ContainerFilter_LabelSelectorEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerFilter_LabelSelectorEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&label_selector_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerFilter.LabelSelectorEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerFilter.LabelSelectorEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerFilter)
  return false;
#undef DO_
}

void ContainerFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerFilter.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.ContainerStateValue state = 2;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->state_, output);
  }

  // string pod_sandbox_id = 3;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerFilter.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pod_sandbox_id(), output);
  }

  // map<string, string> label_selector = 4;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerFilter.LabelSelectorEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerFilter)
}

::google::protobuf::uint8* ContainerFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerFilter.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.ContainerStateValue state = 2;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->state_, deterministic, target);
  }

  // string pod_sandbox_id = 3;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerFilter.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pod_sandbox_id(), target);
  }

  // map<string, string> label_selector = 4;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerFilter.LabelSelectorEntry.value");
      }
    };

    if (deterministic &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerFilter)
  return target;
}

size_t ContainerFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> label_selector = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->label_selector_size());
  {
    ::google::protobuf::scoped_ptr<ContainerFilter_LabelSelectorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->label_selector().begin();
        it != this->label_selector().end(); ++it) {
      entry.reset(label_selector_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string pod_sandbox_id = 3;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  // .runtime.ContainerStateValue state = 2;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerFilter)
    MergeFrom(*source);
  }
}

void ContainerFilter::MergeFrom(const ContainerFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_selector_.MergeFrom(from.label_selector_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.has_state()) {
    mutable_state()->::runtime::ContainerStateValue::MergeFrom(from.state());
  }
}

void ContainerFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerFilter::CopyFrom(const ContainerFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerFilter::IsInitialized() const {
  return true;
}

void ContainerFilter::Swap(ContainerFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerFilter::InternalSwap(ContainerFilter* other) {
  using std::swap;
  label_selector_.Swap(&other->label_selector_);
  id_.Swap(&other->id_);
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerFilter::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListContainersRequest::InitAsDefaultInstance() {
  ::runtime::_ListContainersRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::runtime::ContainerFilter*>(
      ::runtime::ContainerFilter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListContainersRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListContainersRequest::ListContainersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainersRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListContainersRequest)
}
ListContainersRequest::ListContainersRequest(const ListContainersRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filter()) {
    filter_ = new ::runtime::ContainerFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ListContainersRequest)
}

void ListContainersRequest::SharedCtor() {
  filter_ = NULL;
  _cached_size_ = 0;
}

ListContainersRequest::~ListContainersRequest() {
  // @@protoc_insertion_point(destructor:runtime.ListContainersRequest)
  SharedDtor();
}

void ListContainersRequest::SharedDtor() {
  if (this != internal_default_instance()) delete filter_;
}

void ListContainersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainersRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListContainersRequest& ListContainersRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainersRequest();
  return *internal_default_instance();
}

ListContainersRequest* ListContainersRequest::New(::google::protobuf::Arena* arena) const {
  ListContainersRequest* n = new ListContainersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListContainersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListContainersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  _internal_metadata_.Clear();
}

bool ListContainersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListContainersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerFilter filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListContainersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListContainersRequest)
  return false;
#undef DO_
}

void ListContainersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListContainersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerFilter filter = 1;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListContainersRequest)
}

::google::protobuf::uint8* ListContainersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListContainersRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerFilter filter = 1;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListContainersRequest)
  return target;
}

size_t ListContainersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListContainersRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ContainerFilter filter = 1;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListContainersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListContainersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListContainersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListContainersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListContainersRequest)
    MergeFrom(*source);
  }
}

void ListContainersRequest::MergeFrom(const ListContainersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListContainersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filter()) {
    mutable_filter()->::runtime::ContainerFilter::MergeFrom(from.filter());
  }
}

void ListContainersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListContainersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainersRequest::CopyFrom(const ListContainersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListContainersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainersRequest::IsInitialized() const {
  return true;
}

void ListContainersRequest::Swap(ListContainersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListContainersRequest::InternalSwap(ListContainersRequest* other) {
  using std::swap;
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListContainersRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Container_LabelsEntry_DoNotUse::Container_LabelsEntry_DoNotUse() {}
Container_LabelsEntry_DoNotUse::Container_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Container_LabelsEntry_DoNotUse::MergeFrom(const Container_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Container_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[61];
}
void Container_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Container_AnnotationsEntry_DoNotUse::Container_AnnotationsEntry_DoNotUse() {}
Container_AnnotationsEntry_DoNotUse::Container_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Container_AnnotationsEntry_DoNotUse::MergeFrom(const Container_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Container_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[62];
}
void Container_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Container::InitAsDefaultInstance() {
  ::runtime::_Container_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::ContainerMetadata*>(
      ::runtime::ContainerMetadata::internal_default_instance());
  ::runtime::_Container_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Container::kIdFieldNumber;
const int Container::kPodSandboxIdFieldNumber;
const int Container::kMetadataFieldNumber;
const int Container::kImageFieldNumber;
const int Container::kImageRefFieldNumber;
const int Container::kStateFieldNumber;
const int Container::kCreatedAtFieldNumber;
const int Container::kLabelsFieldNumber;
const int Container::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Container::Container()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Container)
}
Container::Container(const Container& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_ref().size() > 0) {
    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::ContainerMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  ::memcpy(&created_at_, &from.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:runtime.Container)
}

void Container::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(state_));
  _cached_size_ = 0;
}

Container::~Container() {
  // @@protoc_insertion_point(destructor:runtime.Container)
  SharedDtor();
}

void Container::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete image_;
}

void Container::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Container::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Container& Container::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainer();
  return *internal_default_instance();
}

Container* Container::New(::google::protobuf::Arena* arena) const {
  Container* n = new Container;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Container::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  annotations_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool Container::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Container)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pod_sandbox_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerMetadata metadata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ImageSpec image = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_ref = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_ref().data(), static_cast<int>(this->image_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.image_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerState state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::ContainerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          Container_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Container_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          Container_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Container_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Container.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Container)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Container)
  return false;
#undef DO_
}

void Container::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pod_sandbox_id(), output);
  }

  // .runtime.ContainerMetadata metadata = 3;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->metadata_, output);
  }

  // .runtime.ImageSpec image = 4;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->image_, output);
  }

  // string image_ref = 5;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.image_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->image_ref(), output);
  }

  // .runtime.ContainerState state = 6;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->state(), output);
  }

  // int64 created_at = 7;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->created_at(), output);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Container_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Container_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 9;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Container_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Container_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Container)
}

::google::protobuf::uint8* Container::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Container)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pod_sandbox_id(), target);
  }

  // .runtime.ContainerMetadata metadata = 3;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->metadata_, deterministic, target);
  }

  // .runtime.ImageSpec image = 4;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->image_, deterministic, target);
  }

  // string image_ref = 5;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Container.image_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->image_ref(), target);
  }

  // .runtime.ContainerState state = 6;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->state(), target);
  }

  // int64 created_at = 7;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->created_at(), target);
  }

  // map<string, string> labels = 8;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Container_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Container_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 9;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.Container.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Container_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Container_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Container)
  return target;
}

size_t Container::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Container)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<Container_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<Container_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  // string image_ref = 5;
  if (this->image_ref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_ref());
  }

  // .runtime.ContainerMetadata metadata = 3;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .runtime.ImageSpec image = 4;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // int64 created_at = 7;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  // .runtime.ContainerState state = 6;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Container::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Container)
  GOOGLE_DCHECK_NE(&from, this);
  const Container* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Container>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Container)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Container)
    MergeFrom(*source);
  }
}

void Container::MergeFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Container)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  if (from.image_ref().size() > 0) {

    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::ContainerMetadata::MergeFrom(from.metadata());
  }
  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void Container::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Container)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Container::CopyFrom(const Container& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Container)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Container::IsInitialized() const {
  return true;
}

void Container::Swap(Container* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Container::InternalSwap(Container* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  id_.Swap(&other->id_);
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  image_ref_.Swap(&other->image_ref_);
  swap(metadata_, other->metadata_);
  swap(image_, other->image_);
  swap(created_at_, other->created_at_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Container::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListContainersResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListContainersResponse::kContainersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListContainersResponse::ListContainersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainersResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListContainersResponse)
}
ListContainersResponse::ListContainersResponse(const ListContainersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      containers_(from.containers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ListContainersResponse)
}

void ListContainersResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListContainersResponse::~ListContainersResponse() {
  // @@protoc_insertion_point(destructor:runtime.ListContainersResponse)
  SharedDtor();
}

void ListContainersResponse::SharedDtor() {
}

void ListContainersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainersResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListContainersResponse& ListContainersResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainersResponse();
  return *internal_default_instance();
}

ListContainersResponse* ListContainersResponse::New(::google::protobuf::Arena* arena) const {
  ListContainersResponse* n = new ListContainersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListContainersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListContainersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  containers_.Clear();
  _internal_metadata_.Clear();
}

bool ListContainersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListContainersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.Container containers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_containers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListContainersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListContainersResponse)
  return false;
#undef DO_
}

void ListContainersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListContainersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.Container containers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->containers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->containers(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListContainersResponse)
}

::google::protobuf::uint8* ListContainersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListContainersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.Container containers = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->containers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->containers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListContainersResponse)
  return target;
}

size_t ListContainersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListContainersResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.Container containers = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->containers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->containers(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListContainersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListContainersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListContainersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListContainersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListContainersResponse)
    MergeFrom(*source);
  }
}

void ListContainersResponse::MergeFrom(const ListContainersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListContainersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  containers_.MergeFrom(from.containers_);
}

void ListContainersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListContainersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainersResponse::CopyFrom(const ListContainersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListContainersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainersResponse::IsInitialized() const {
  return true;
}

void ListContainersResponse::Swap(ListContainersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListContainersResponse::InternalSwap(ListContainersResponse* other) {
  using std::swap;
  containers_.InternalSwap(&other->containers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListContainersResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatusRequest::kContainerIdFieldNumber;
const int ContainerStatusRequest::kVerboseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatusRequest::ContainerStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatusRequest)
}
ContainerStatusRequest::ContainerStatusRequest(const ContainerStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  verbose_ = from.verbose_;
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatusRequest)
}

void ContainerStatusRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verbose_ = false;
  _cached_size_ = 0;
}

ContainerStatusRequest::~ContainerStatusRequest() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatusRequest)
  SharedDtor();
}

void ContainerStatusRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatusRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatusRequest& ContainerStatusRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatusRequest();
  return *internal_default_instance();
}

ContainerStatusRequest* ContainerStatusRequest::New(::google::protobuf::Arena* arena) const {
  ContainerStatusRequest* n = new ContainerStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verbose_ = false;
  _internal_metadata_.Clear();
}

bool ContainerStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatusRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool verbose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatusRequest)
  return false;
#undef DO_
}

void ContainerStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatusRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->verbose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatusRequest)
}

::google::protobuf::uint8* ContainerStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatusRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->verbose(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatusRequest)
  return target;
}

size_t ContainerStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatusRequest)
    MergeFrom(*source);
  }
}

void ContainerStatusRequest::MergeFrom(const ContainerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.verbose() != 0) {
    set_verbose(from.verbose());
  }
}

void ContainerStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatusRequest::CopyFrom(const ContainerStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatusRequest::IsInitialized() const {
  return true;
}

void ContainerStatusRequest::Swap(ContainerStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatusRequest::InternalSwap(ContainerStatusRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  swap(verbose_, other->verbose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatusRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerStatus_LabelsEntry_DoNotUse::ContainerStatus_LabelsEntry_DoNotUse() {}
ContainerStatus_LabelsEntry_DoNotUse::ContainerStatus_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerStatus_LabelsEntry_DoNotUse::MergeFrom(const ContainerStatus_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerStatus_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[66];
}
void ContainerStatus_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ContainerStatus_AnnotationsEntry_DoNotUse::ContainerStatus_AnnotationsEntry_DoNotUse() {}
ContainerStatus_AnnotationsEntry_DoNotUse::ContainerStatus_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerStatus_AnnotationsEntry_DoNotUse::MergeFrom(const ContainerStatus_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerStatus_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[67];
}
void ContainerStatus_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerStatus::InitAsDefaultInstance() {
  ::runtime::_ContainerStatus_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::ContainerMetadata*>(
      ::runtime::ContainerMetadata::internal_default_instance());
  ::runtime::_ContainerStatus_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatus::kIdFieldNumber;
const int ContainerStatus::kMetadataFieldNumber;
const int ContainerStatus::kStateFieldNumber;
const int ContainerStatus::kCreatedAtFieldNumber;
const int ContainerStatus::kStartedAtFieldNumber;
const int ContainerStatus::kFinishedAtFieldNumber;
const int ContainerStatus::kExitCodeFieldNumber;
const int ContainerStatus::kImageFieldNumber;
const int ContainerStatus::kImageRefFieldNumber;
const int ContainerStatus::kReasonFieldNumber;
const int ContainerStatus::kMessageFieldNumber;
const int ContainerStatus::kLabelsFieldNumber;
const int ContainerStatus::kAnnotationsFieldNumber;
const int ContainerStatus::kMountsFieldNumber;
const int ContainerStatus::kLogPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatus::ContainerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatus)
}
ContainerStatus::ContainerStatus(const ContainerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mounts_(from.mounts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_ref().size() > 0) {
    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_path().size() > 0) {
    log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::ContainerMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  ::memcpy(&created_at_, &from.created_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&finished_at_) -
    reinterpret_cast<char*>(&created_at_)) + sizeof(finished_at_));
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatus)
}

void ContainerStatus::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_at_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(finished_at_));
  _cached_size_ = 0;
}

ContainerStatus::~ContainerStatus() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatus)
  SharedDtor();
}

void ContainerStatus::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
  if (this != internal_default_instance()) delete image_;
}

void ContainerStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatus::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatus& ContainerStatus::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatus();
  return *internal_default_instance();
}

ContainerStatus* ContainerStatus::New(::google::protobuf::Arena* arena) const {
  ContainerStatus* n = new ContainerStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  annotations_.Clear();
  mounts_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  ::memset(&created_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&finished_at_) -
      reinterpret_cast<char*>(&created_at_)) + sizeof(finished_at_));
  _internal_metadata_.Clear();
}

bool ContainerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerState state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::runtime::ContainerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 created_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &created_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 started_at = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &started_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 finished_at = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &finished_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exit_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exit_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ImageSpec image = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_ref = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_ref().data(), static_cast<int>(this->image_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.image_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          ContainerStatus_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerStatus_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          ContainerStatus_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerStatus_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .runtime.Mount mounts = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_path = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_path().data(), static_cast<int>(this->log_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatus.log_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatus)
  return false;
#undef DO_
}

void ContainerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // .runtime.ContainerState state = 3;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->state(), output);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->created_at(), output);
  }

  // int64 started_at = 5;
  if (this->started_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->started_at(), output);
  }

  // int64 finished_at = 6;
  if (this->finished_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->finished_at(), output);
  }

  // int32 exit_code = 7;
  if (this->exit_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->exit_code(), output);
  }

  // .runtime.ImageSpec image = 8;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->image_, output);
  }

  // string image_ref = 9;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.image_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->image_ref(), output);
  }

  // string reason = 10;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reason(), output);
  }

  // string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->message(), output);
  }

  // map<string, string> labels = 12;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatus_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatus_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            12, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 13;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatus_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatus_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .runtime.Mount mounts = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->mounts(static_cast<int>(i)), output);
  }

  // string log_path = 15;
  if (this->log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_path().data(), static_cast<int>(this->log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.log_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->log_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatus)
}

::google::protobuf::uint8* ContainerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metadata_, deterministic, target);
  }

  // .runtime.ContainerState state = 3;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->state(), target);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->created_at(), target);
  }

  // int64 started_at = 5;
  if (this->started_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->started_at(), target);
  }

  // int64 finished_at = 6;
  if (this->finished_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->finished_at(), target);
  }

  // int32 exit_code = 7;
  if (this->exit_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->exit_code(), target);
  }

  // .runtime.ImageSpec image = 8;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->image_, deterministic, target);
  }

  // string image_ref = 9;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.image_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->image_ref(), target);
  }

  // string reason = 10;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reason(), target);
  }

  // string message = 11;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->message(), target);
  }

  // map<string, string> labels = 12;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatus_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatus_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       12, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 13;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatus.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatus_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatus_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .runtime.Mount mounts = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->mounts(static_cast<int>(i)), deterministic, target);
  }

  // string log_path = 15;
  if (this->log_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_path().data(), static_cast<int>(this->log_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatus.log_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->log_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatus)
  return target;
}

size_t ContainerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<ContainerStatus_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<ContainerStatus_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .runtime.Mount mounts = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->mounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mounts(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string image_ref = 9;
  if (this->image_ref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_ref());
  }

  // string reason = 10;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // string message = 11;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string log_path = 15;
  if (this->log_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_path());
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  // .runtime.ImageSpec image = 8;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // int64 created_at = 4;
  if (this->created_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->created_at());
  }

  // int64 started_at = 5;
  if (this->started_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->started_at());
  }

  // .runtime.ContainerState state = 3;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 exit_code = 7;
  if (this->exit_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exit_code());
  }

  // int64 finished_at = 6;
  if (this->finished_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->finished_at());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatus)
    MergeFrom(*source);
  }
}

void ContainerStatus::MergeFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  mounts_.MergeFrom(from.mounts_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.image_ref().size() > 0) {

    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.log_path().size() > 0) {

    log_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_path_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::ContainerMetadata::MergeFrom(from.metadata());
  }
  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
  if (from.created_at() != 0) {
    set_created_at(from.created_at());
  }
  if (from.started_at() != 0) {
    set_started_at(from.started_at());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.exit_code() != 0) {
    set_exit_code(from.exit_code());
  }
  if (from.finished_at() != 0) {
    set_finished_at(from.finished_at());
  }
}

void ContainerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatus::CopyFrom(const ContainerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatus::IsInitialized() const {
  return true;
}

void ContainerStatus::Swap(ContainerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatus::InternalSwap(ContainerStatus* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  mounts_.InternalSwap(&other->mounts_);
  id_.Swap(&other->id_);
  image_ref_.Swap(&other->image_ref_);
  reason_.Swap(&other->reason_);
  message_.Swap(&other->message_);
  log_path_.Swap(&other->log_path_);
  swap(metadata_, other->metadata_);
  swap(image_, other->image_);
  swap(created_at_, other->created_at_);
  swap(started_at_, other->started_at_);
  swap(state_, other->state_);
  swap(exit_code_, other->exit_code_);
  swap(finished_at_, other->finished_at_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatus::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerStatusResponse_InfoEntry_DoNotUse::ContainerStatusResponse_InfoEntry_DoNotUse() {}
ContainerStatusResponse_InfoEntry_DoNotUse::ContainerStatusResponse_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerStatusResponse_InfoEntry_DoNotUse::MergeFrom(const ContainerStatusResponse_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerStatusResponse_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[69];
}
void ContainerStatusResponse_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerStatusResponse::InitAsDefaultInstance() {
  ::runtime::_ContainerStatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::runtime::ContainerStatus*>(
      ::runtime::ContainerStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatusResponse::kStatusFieldNumber;
const int ContainerStatusResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatusResponse::ContainerStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatusResponse)
}
ContainerStatusResponse::ContainerStatusResponse(const ContainerStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    status_ = new ::runtime::ContainerStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatusResponse)
}

void ContainerStatusResponse::SharedCtor() {
  status_ = NULL;
  _cached_size_ = 0;
}

ContainerStatusResponse::~ContainerStatusResponse() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatusResponse)
  SharedDtor();
}

void ContainerStatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void ContainerStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatusResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatusResponse& ContainerStatusResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatusResponse();
  return *internal_default_instance();
}

ContainerStatusResponse* ContainerStatusResponse::New(::google::protobuf::Arena* arena) const {
  ContainerStatusResponse* n = new ContainerStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ContainerStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ContainerStatusResponse_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerStatusResponse_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatusResponse.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatusResponse.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatusResponse)
  return false;
#undef DO_
}

void ContainerStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatusResponse.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatusResponse)
}

::google::protobuf::uint8* ContainerStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->status_, deterministic, target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatusResponse.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatusResponse)
  return target;
}

size_t ContainerStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<ContainerStatusResponse_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .runtime.ContainerStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatusResponse)
    MergeFrom(*source);
  }
}

void ContainerStatusResponse::MergeFrom(const ContainerStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    mutable_status()->::runtime::ContainerStatus::MergeFrom(from.status());
  }
}

void ContainerStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatusResponse::CopyFrom(const ContainerStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatusResponse::IsInitialized() const {
  return true;
}

void ContainerStatusResponse::Swap(ContainerStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatusResponse::InternalSwap(ContainerStatusResponse* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatusResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateContainerResourcesRequest::InitAsDefaultInstance() {
  ::runtime::_UpdateContainerResourcesRequest_default_instance_._instance.get_mutable()->linux_ = const_cast< ::runtime::LinuxContainerResources*>(
      ::runtime::LinuxContainerResources::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateContainerResourcesRequest::kContainerIdFieldNumber;
const int UpdateContainerResourcesRequest::kLinuxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateContainerResourcesRequest::UpdateContainerResourcesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateContainerResourcesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.UpdateContainerResourcesRequest)
}
UpdateContainerResourcesRequest::UpdateContainerResourcesRequest(const UpdateContainerResourcesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.has_linux()) {
    linux_ = new ::runtime::LinuxContainerResources(*from.linux_);
  } else {
    linux_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.UpdateContainerResourcesRequest)
}

void UpdateContainerResourcesRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  linux_ = NULL;
  _cached_size_ = 0;
}

UpdateContainerResourcesRequest::~UpdateContainerResourcesRequest() {
  // @@protoc_insertion_point(destructor:runtime.UpdateContainerResourcesRequest)
  SharedDtor();
}

void UpdateContainerResourcesRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete linux_;
}

void UpdateContainerResourcesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateContainerResourcesRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateContainerResourcesRequest& UpdateContainerResourcesRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateContainerResourcesRequest();
  return *internal_default_instance();
}

UpdateContainerResourcesRequest* UpdateContainerResourcesRequest::New(::google::protobuf::Arena* arena) const {
  UpdateContainerResourcesRequest* n = new UpdateContainerResourcesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateContainerResourcesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.UpdateContainerResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && linux_ != NULL) {
    delete linux_;
  }
  linux_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateContainerResourcesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.UpdateContainerResourcesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.UpdateContainerResourcesRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.LinuxContainerResources linux = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linux()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.UpdateContainerResourcesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.UpdateContainerResourcesRequest)
  return false;
#undef DO_
}

void UpdateContainerResourcesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.UpdateContainerResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.UpdateContainerResourcesRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // .runtime.LinuxContainerResources linux = 2;
  if (this->has_linux()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->linux_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.UpdateContainerResourcesRequest)
}

::google::protobuf::uint8* UpdateContainerResourcesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.UpdateContainerResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.UpdateContainerResourcesRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // .runtime.LinuxContainerResources linux = 2;
  if (this->has_linux()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->linux_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.UpdateContainerResourcesRequest)
  return target;
}

size_t UpdateContainerResourcesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.UpdateContainerResourcesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // .runtime.LinuxContainerResources linux = 2;
  if (this->has_linux()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->linux_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateContainerResourcesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.UpdateContainerResourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateContainerResourcesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateContainerResourcesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.UpdateContainerResourcesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.UpdateContainerResourcesRequest)
    MergeFrom(*source);
  }
}

void UpdateContainerResourcesRequest::MergeFrom(const UpdateContainerResourcesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.UpdateContainerResourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.has_linux()) {
    mutable_linux()->::runtime::LinuxContainerResources::MergeFrom(from.linux());
  }
}

void UpdateContainerResourcesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.UpdateContainerResourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateContainerResourcesRequest::CopyFrom(const UpdateContainerResourcesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.UpdateContainerResourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateContainerResourcesRequest::IsInitialized() const {
  return true;
}

void UpdateContainerResourcesRequest::Swap(UpdateContainerResourcesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateContainerResourcesRequest::InternalSwap(UpdateContainerResourcesRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  swap(linux_, other->linux_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateContainerResourcesRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateContainerResourcesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateContainerResourcesResponse::UpdateContainerResourcesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateContainerResourcesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.UpdateContainerResourcesResponse)
}
UpdateContainerResourcesResponse::UpdateContainerResourcesResponse(const UpdateContainerResourcesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.UpdateContainerResourcesResponse)
}

void UpdateContainerResourcesResponse::SharedCtor() {
  _cached_size_ = 0;
}

UpdateContainerResourcesResponse::~UpdateContainerResourcesResponse() {
  // @@protoc_insertion_point(destructor:runtime.UpdateContainerResourcesResponse)
  SharedDtor();
}

void UpdateContainerResourcesResponse::SharedDtor() {
}

void UpdateContainerResourcesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateContainerResourcesResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateContainerResourcesResponse& UpdateContainerResourcesResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateContainerResourcesResponse();
  return *internal_default_instance();
}

UpdateContainerResourcesResponse* UpdateContainerResourcesResponse::New(::google::protobuf::Arena* arena) const {
  UpdateContainerResourcesResponse* n = new UpdateContainerResourcesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateContainerResourcesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.UpdateContainerResourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UpdateContainerResourcesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.UpdateContainerResourcesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.UpdateContainerResourcesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.UpdateContainerResourcesResponse)
  return false;
#undef DO_
}

void UpdateContainerResourcesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.UpdateContainerResourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.UpdateContainerResourcesResponse)
}

::google::protobuf::uint8* UpdateContainerResourcesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.UpdateContainerResourcesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.UpdateContainerResourcesResponse)
  return target;
}

size_t UpdateContainerResourcesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.UpdateContainerResourcesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateContainerResourcesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.UpdateContainerResourcesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateContainerResourcesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateContainerResourcesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.UpdateContainerResourcesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.UpdateContainerResourcesResponse)
    MergeFrom(*source);
  }
}

void UpdateContainerResourcesResponse::MergeFrom(const UpdateContainerResourcesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.UpdateContainerResourcesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateContainerResourcesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.UpdateContainerResourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateContainerResourcesResponse::CopyFrom(const UpdateContainerResourcesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.UpdateContainerResourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateContainerResourcesResponse::IsInitialized() const {
  return true;
}

void UpdateContainerResourcesResponse::Swap(UpdateContainerResourcesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateContainerResourcesResponse::InternalSwap(UpdateContainerResourcesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateContainerResourcesResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecSyncRequest::kContainerIdFieldNumber;
const int ExecSyncRequest::kCmdFieldNumber;
const int ExecSyncRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecSyncRequest::ExecSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsExecSyncRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ExecSyncRequest)
}
ExecSyncRequest::ExecSyncRequest(const ExecSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmd_(from.cmd_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  timeout_ = from.timeout_;
  // @@protoc_insertion_point(copy_constructor:runtime.ExecSyncRequest)
}

void ExecSyncRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ExecSyncRequest::~ExecSyncRequest() {
  // @@protoc_insertion_point(destructor:runtime.ExecSyncRequest)
  SharedDtor();
}

void ExecSyncRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecSyncRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecSyncRequest& ExecSyncRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsExecSyncRequest();
  return *internal_default_instance();
}

ExecSyncRequest* ExecSyncRequest::New(::google::protobuf::Arena* arena) const {
  ExecSyncRequest* n = new ExecSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ExecSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_.Clear();
  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExecSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ExecSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ExecSyncRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd(this->cmd_size() - 1).data(),
            static_cast<int>(this->cmd(this->cmd_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ExecSyncRequest.cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ExecSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ExecSyncRequest)
  return false;
#undef DO_
}

void ExecSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ExecSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecSyncRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // repeated string cmd = 2;
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd(i).data(), static_cast<int>(this->cmd(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecSyncRequest.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cmd(i), output);
  }

  // int64 timeout = 3;
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ExecSyncRequest)
}

::google::protobuf::uint8* ExecSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ExecSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecSyncRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // repeated string cmd = 2;
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd(i).data(), static_cast<int>(this->cmd(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecSyncRequest.cmd");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cmd(i), target);
  }

  // int64 timeout = 3;
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->timeout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ExecSyncRequest)
  return target;
}

size_t ExecSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ExecSyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cmd = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cmd_size());
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cmd(i));
  }

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // int64 timeout = 3;
  if (this->timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ExecSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ExecSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ExecSyncRequest)
    MergeFrom(*source);
  }
}

void ExecSyncRequest::MergeFrom(const ExecSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ExecSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmd_.MergeFrom(from.cmd_);
  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
}

void ExecSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ExecSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecSyncRequest::CopyFrom(const ExecSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ExecSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecSyncRequest::IsInitialized() const {
  return true;
}

void ExecSyncRequest::Swap(ExecSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecSyncRequest::InternalSwap(ExecSyncRequest* other) {
  using std::swap;
  cmd_.InternalSwap(&other->cmd_);
  container_id_.Swap(&other->container_id_);
  swap(timeout_, other->timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecSyncRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecSyncResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecSyncResponse::kStdoutFieldNumber;
const int ExecSyncResponse::kStderrFieldNumber;
const int ExecSyncResponse::kExitCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecSyncResponse::ExecSyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsExecSyncResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ExecSyncResponse)
}
ExecSyncResponse::ExecSyncResponse(const ExecSyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stdout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stdout().size() > 0) {
    stdout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stdout_);
  }
  stderr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stderr().size() > 0) {
    stderr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stderr_);
  }
  exit_code_ = from.exit_code_;
  // @@protoc_insertion_point(copy_constructor:runtime.ExecSyncResponse)
}

void ExecSyncResponse::SharedCtor() {
  stdout_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stderr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exit_code_ = 0;
  _cached_size_ = 0;
}

ExecSyncResponse::~ExecSyncResponse() {
  // @@protoc_insertion_point(destructor:runtime.ExecSyncResponse)
  SharedDtor();
}

void ExecSyncResponse::SharedDtor() {
  stdout_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stderr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecSyncResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecSyncResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecSyncResponse& ExecSyncResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsExecSyncResponse();
  return *internal_default_instance();
}

ExecSyncResponse* ExecSyncResponse::New(::google::protobuf::Arena* arena) const {
  ExecSyncResponse* n = new ExecSyncResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ExecSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stdout_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stderr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exit_code_ = 0;
  _internal_metadata_.Clear();
}

bool ExecSyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ExecSyncResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes stdout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stdout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stderr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stderr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 exit_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exit_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ExecSyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ExecSyncResponse)
  return false;
#undef DO_
}

void ExecSyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ExecSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes stdout = 1;
  if (this->stdout().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->stdout(), output);
  }

  // bytes stderr = 2;
  if (this->stderr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->stderr(), output);
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exit_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ExecSyncResponse)
}

::google::protobuf::uint8* ExecSyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ExecSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes stdout = 1;
  if (this->stdout().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->stdout(), target);
  }

  // bytes stderr = 2;
  if (this->stderr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->stderr(), target);
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exit_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ExecSyncResponse)
  return target;
}

size_t ExecSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ExecSyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes stdout = 1;
  if (this->stdout().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stdout());
  }

  // bytes stderr = 2;
  if (this->stderr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stderr());
  }

  // int32 exit_code = 3;
  if (this->exit_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->exit_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecSyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ExecSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecSyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecSyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ExecSyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ExecSyncResponse)
    MergeFrom(*source);
  }
}

void ExecSyncResponse::MergeFrom(const ExecSyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ExecSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stdout().size() > 0) {

    stdout_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stdout_);
  }
  if (from.stderr().size() > 0) {

    stderr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stderr_);
  }
  if (from.exit_code() != 0) {
    set_exit_code(from.exit_code());
  }
}

void ExecSyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ExecSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecSyncResponse::CopyFrom(const ExecSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ExecSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecSyncResponse::IsInitialized() const {
  return true;
}

void ExecSyncResponse::Swap(ExecSyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecSyncResponse::InternalSwap(ExecSyncResponse* other) {
  using std::swap;
  stdout_.Swap(&other->stdout_);
  stderr_.Swap(&other->stderr_);
  swap(exit_code_, other->exit_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecSyncResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecRequest::kContainerIdFieldNumber;
const int ExecRequest::kCmdFieldNumber;
const int ExecRequest::kTtyFieldNumber;
const int ExecRequest::kStdinFieldNumber;
const int ExecRequest::kStdoutFieldNumber;
const int ExecRequest::kStderrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecRequest::ExecRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsExecRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ExecRequest)
}
ExecRequest::ExecRequest(const ExecRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cmd_(from.cmd_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  ::memcpy(&tty_, &from.tty_,
    static_cast<size_t>(reinterpret_cast<char*>(&stderr_) -
    reinterpret_cast<char*>(&tty_)) + sizeof(stderr_));
  // @@protoc_insertion_point(copy_constructor:runtime.ExecRequest)
}

void ExecRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stderr_) -
      reinterpret_cast<char*>(&tty_)) + sizeof(stderr_));
  _cached_size_ = 0;
}

ExecRequest::~ExecRequest() {
  // @@protoc_insertion_point(destructor:runtime.ExecRequest)
  SharedDtor();
}

void ExecRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecRequest& ExecRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsExecRequest();
  return *internal_default_instance();
}

ExecRequest* ExecRequest::New(::google::protobuf::Arena* arena) const {
  ExecRequest* n = new ExecRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ExecRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_.Clear();
  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stderr_) -
      reinterpret_cast<char*>(&tty_)) + sizeof(stderr_));
  _internal_metadata_.Clear();
}

bool ExecRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ExecRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ExecRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cmd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cmd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cmd(this->cmd_size() - 1).data(),
            static_cast<int>(this->cmd(this->cmd_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ExecRequest.cmd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdout = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stderr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stderr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ExecRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ExecRequest)
  return false;
#undef DO_
}

void ExecRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ExecRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // repeated string cmd = 2;
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd(i).data(), static_cast<int>(this->cmd(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecRequest.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cmd(i), output);
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->tty(), output);
  }

  // bool stdin = 4;
  if (this->stdin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->stdin(), output);
  }

  // bool stdout = 5;
  if (this->stdout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stdout(), output);
  }

  // bool stderr = 6;
  if (this->stderr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->stderr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ExecRequest)
}

::google::protobuf::uint8* ExecRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ExecRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // repeated string cmd = 2;
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cmd(i).data(), static_cast<int>(this->cmd(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecRequest.cmd");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cmd(i), target);
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->tty(), target);
  }

  // bool stdin = 4;
  if (this->stdin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->stdin(), target);
  }

  // bool stdout = 5;
  if (this->stdout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stdout(), target);
  }

  // bool stderr = 6;
  if (this->stderr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->stderr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ExecRequest)
  return target;
}

size_t ExecRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ExecRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cmd = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cmd_size());
  for (int i = 0, n = this->cmd_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cmd(i));
  }

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    total_size += 1 + 1;
  }

  // bool stdin = 4;
  if (this->stdin() != 0) {
    total_size += 1 + 1;
  }

  // bool stdout = 5;
  if (this->stdout() != 0) {
    total_size += 1 + 1;
  }

  // bool stderr = 6;
  if (this->stderr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ExecRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ExecRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ExecRequest)
    MergeFrom(*source);
  }
}

void ExecRequest::MergeFrom(const ExecRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ExecRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cmd_.MergeFrom(from.cmd_);
  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.tty() != 0) {
    set_tty(from.tty());
  }
  if (from.stdin() != 0) {
    set_stdin(from.stdin());
  }
  if (from.stdout() != 0) {
    set_stdout(from.stdout());
  }
  if (from.stderr() != 0) {
    set_stderr(from.stderr());
  }
}

void ExecRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ExecRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecRequest::CopyFrom(const ExecRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ExecRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecRequest::IsInitialized() const {
  return true;
}

void ExecRequest::Swap(ExecRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecRequest::InternalSwap(ExecRequest* other) {
  using std::swap;
  cmd_.InternalSwap(&other->cmd_);
  container_id_.Swap(&other->container_id_);
  swap(tty_, other->tty_);
  swap(stdin_, other->stdin_);
  swap(stdout_, other->stdout_);
  swap(stderr_, other->stderr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecResponse::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecResponse::ExecResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsExecResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ExecResponse)
}
ExecResponse::ExecResponse(const ExecResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ExecResponse)
}

void ExecResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ExecResponse::~ExecResponse() {
  // @@protoc_insertion_point(destructor:runtime.ExecResponse)
  SharedDtor();
}

void ExecResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecResponse& ExecResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsExecResponse();
  return *internal_default_instance();
}

ExecResponse* ExecResponse::New(::google::protobuf::Arena* arena) const {
  ExecResponse* n = new ExecResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ExecResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ExecResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ExecResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ExecResponse.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ExecResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ExecResponse)
  return false;
#undef DO_
}

void ExecResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ExecResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ExecResponse)
}

::google::protobuf::uint8* ExecResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ExecResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ExecResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ExecResponse)
  return target;
}

size_t ExecResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ExecResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ExecResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ExecResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ExecResponse)
    MergeFrom(*source);
  }
}

void ExecResponse::MergeFrom(const ExecResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ExecResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void ExecResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ExecResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecResponse::CopyFrom(const ExecResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ExecResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecResponse::IsInitialized() const {
  return true;
}

void ExecResponse::Swap(ExecResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecResponse::InternalSwap(ExecResponse* other) {
  using std::swap;
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachRequest::kContainerIdFieldNumber;
const int AttachRequest::kStdinFieldNumber;
const int AttachRequest::kTtyFieldNumber;
const int AttachRequest::kStdoutFieldNumber;
const int AttachRequest::kStderrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachRequest::AttachRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsAttachRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.AttachRequest)
}
AttachRequest::AttachRequest(const AttachRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  ::memcpy(&stdin_, &from.stdin_,
    static_cast<size_t>(reinterpret_cast<char*>(&stderr_) -
    reinterpret_cast<char*>(&stdin_)) + sizeof(stderr_));
  // @@protoc_insertion_point(copy_constructor:runtime.AttachRequest)
}

void AttachRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stdin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stderr_) -
      reinterpret_cast<char*>(&stdin_)) + sizeof(stderr_));
  _cached_size_ = 0;
}

AttachRequest::~AttachRequest() {
  // @@protoc_insertion_point(destructor:runtime.AttachRequest)
  SharedDtor();
}

void AttachRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachRequest& AttachRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsAttachRequest();
  return *internal_default_instance();
}

AttachRequest* AttachRequest::New(::google::protobuf::Arena* arena) const {
  AttachRequest* n = new AttachRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttachRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.AttachRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stdin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stderr_) -
      reinterpret_cast<char*>(&stdin_)) + sizeof(stderr_));
  _internal_metadata_.Clear();
}

bool AttachRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.AttachRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AttachRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stdout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stdout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stderr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stderr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.AttachRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.AttachRequest)
  return false;
#undef DO_
}

void AttachRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.AttachRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AttachRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  // bool stdin = 2;
  if (this->stdin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->stdin(), output);
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->tty(), output);
  }

  // bool stdout = 4;
  if (this->stdout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->stdout(), output);
  }

  // bool stderr = 5;
  if (this->stderr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stderr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.AttachRequest)
}

::google::protobuf::uint8* AttachRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.AttachRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AttachRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  // bool stdin = 2;
  if (this->stdin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->stdin(), target);
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->tty(), target);
  }

  // bool stdout = 4;
  if (this->stdout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->stdout(), target);
  }

  // bool stderr = 5;
  if (this->stderr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stderr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.AttachRequest)
  return target;
}

size_t AttachRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.AttachRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  // bool stdin = 2;
  if (this->stdin() != 0) {
    total_size += 1 + 1;
  }

  // bool tty = 3;
  if (this->tty() != 0) {
    total_size += 1 + 1;
  }

  // bool stdout = 4;
  if (this->stdout() != 0) {
    total_size += 1 + 1;
  }

  // bool stderr = 5;
  if (this->stderr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.AttachRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.AttachRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.AttachRequest)
    MergeFrom(*source);
  }
}

void AttachRequest::MergeFrom(const AttachRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.AttachRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  if (from.stdin() != 0) {
    set_stdin(from.stdin());
  }
  if (from.tty() != 0) {
    set_tty(from.tty());
  }
  if (from.stdout() != 0) {
    set_stdout(from.stdout());
  }
  if (from.stderr() != 0) {
    set_stderr(from.stderr());
  }
}

void AttachRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.AttachRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachRequest::CopyFrom(const AttachRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.AttachRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachRequest::IsInitialized() const {
  return true;
}

void AttachRequest::Swap(AttachRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachRequest::InternalSwap(AttachRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  swap(stdin_, other->stdin_);
  swap(tty_, other->tty_);
  swap(stdout_, other->stdout_);
  swap(stderr_, other->stderr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttachRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachResponse::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachResponse::AttachResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsAttachResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.AttachResponse)
}
AttachResponse::AttachResponse(const AttachResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.AttachResponse)
}

void AttachResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AttachResponse::~AttachResponse() {
  // @@protoc_insertion_point(destructor:runtime.AttachResponse)
  SharedDtor();
}

void AttachResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttachResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachResponse& AttachResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsAttachResponse();
  return *internal_default_instance();
}

AttachResponse* AttachResponse::New(::google::protobuf::Arena* arena) const {
  AttachResponse* n = new AttachResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttachResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.AttachResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttachResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.AttachResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AttachResponse.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.AttachResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.AttachResponse)
  return false;
#undef DO_
}

void AttachResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.AttachResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AttachResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.AttachResponse)
}

::google::protobuf::uint8* AttachResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.AttachResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AttachResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.AttachResponse)
  return target;
}

size_t AttachResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.AttachResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttachResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.AttachResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.AttachResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.AttachResponse)
    MergeFrom(*source);
  }
}

void AttachResponse::MergeFrom(const AttachResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.AttachResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void AttachResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.AttachResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachResponse::CopyFrom(const AttachResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.AttachResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachResponse::IsInitialized() const {
  return true;
}

void AttachResponse::Swap(AttachResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachResponse::InternalSwap(AttachResponse* other) {
  using std::swap;
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttachResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PortForwardRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortForwardRequest::kPodSandboxIdFieldNumber;
const int PortForwardRequest::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortForwardRequest::PortForwardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPortForwardRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PortForwardRequest)
}
PortForwardRequest::PortForwardRequest(const PortForwardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      port_(from.port_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PortForwardRequest)
}

void PortForwardRequest::SharedCtor() {
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PortForwardRequest::~PortForwardRequest() {
  // @@protoc_insertion_point(destructor:runtime.PortForwardRequest)
  SharedDtor();
}

void PortForwardRequest::SharedDtor() {
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PortForwardRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PortForwardRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortForwardRequest& PortForwardRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPortForwardRequest();
  return *internal_default_instance();
}

PortForwardRequest* PortForwardRequest::New(::google::protobuf::Arena* arena) const {
  PortForwardRequest* n = new PortForwardRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PortForwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PortForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_.Clear();
  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PortForwardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PortForwardRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_sandbox_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PortForwardRequest.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_port())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_port())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PortForwardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PortForwardRequest)
  return false;
#undef DO_
}

void PortForwardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PortForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortForwardRequest.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_sandbox_id(), output);
  }

  // repeated int32 port = 2;
  if (this->port_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _port_cached_byte_size_));
  }
  for (int i = 0, n = this->port_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->port(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PortForwardRequest)
}

::google::protobuf::uint8* PortForwardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PortForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortForwardRequest.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_sandbox_id(), target);
  }

  // repeated int32 port = 2;
  if (this->port_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _port_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->port_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PortForwardRequest)
  return target;
}

size_t PortForwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PortForwardRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 port = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->port_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _port_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string pod_sandbox_id = 1;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PortForwardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PortForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PortForwardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortForwardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PortForwardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PortForwardRequest)
    MergeFrom(*source);
  }
}

void PortForwardRequest::MergeFrom(const PortForwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PortForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  port_.MergeFrom(from.port_);
  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
}

void PortForwardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PortForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortForwardRequest::CopyFrom(const PortForwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PortForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortForwardRequest::IsInitialized() const {
  return true;
}

void PortForwardRequest::Swap(PortForwardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortForwardRequest::InternalSwap(PortForwardRequest* other) {
  using std::swap;
  port_.InternalSwap(&other->port_);
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PortForwardRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PortForwardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortForwardResponse::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortForwardResponse::PortForwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPortForwardResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PortForwardResponse)
}
PortForwardResponse::PortForwardResponse(const PortForwardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PortForwardResponse)
}

void PortForwardResponse::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PortForwardResponse::~PortForwardResponse() {
  // @@protoc_insertion_point(destructor:runtime.PortForwardResponse)
  SharedDtor();
}

void PortForwardResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PortForwardResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PortForwardResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortForwardResponse& PortForwardResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPortForwardResponse();
  return *internal_default_instance();
}

PortForwardResponse* PortForwardResponse::New(::google::protobuf::Arena* arena) const {
  PortForwardResponse* n = new PortForwardResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PortForwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PortForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PortForwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PortForwardResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PortForwardResponse.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PortForwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PortForwardResponse)
  return false;
#undef DO_
}

void PortForwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PortForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortForwardResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PortForwardResponse)
}

::google::protobuf::uint8* PortForwardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PortForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PortForwardResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PortForwardResponse)
  return target;
}

size_t PortForwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PortForwardResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PortForwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PortForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PortForwardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortForwardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PortForwardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PortForwardResponse)
    MergeFrom(*source);
  }
}

void PortForwardResponse::MergeFrom(const PortForwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PortForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void PortForwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PortForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortForwardResponse::CopyFrom(const PortForwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PortForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortForwardResponse::IsInitialized() const {
  return true;
}

void PortForwardResponse::Swap(PortForwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortForwardResponse::InternalSwap(PortForwardResponse* other) {
  using std::swap;
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PortForwardResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageFilter::InitAsDefaultInstance() {
  ::runtime::_ImageFilter_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageFilter::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageFilter::ImageFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageFilter)
}
ImageFilter::ImageFilter(const ImageFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ImageFilter)
}

void ImageFilter::SharedCtor() {
  image_ = NULL;
  _cached_size_ = 0;
}

ImageFilter::~ImageFilter() {
  // @@protoc_insertion_point(destructor:runtime.ImageFilter)
  SharedDtor();
}

void ImageFilter::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
}

void ImageFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageFilter::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageFilter& ImageFilter::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFilter();
  return *internal_default_instance();
}

ImageFilter* ImageFilter::New(::google::protobuf::Arena* arena) const {
  ImageFilter* n = new ImageFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ImageSpec image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageFilter)
  return false;
#undef DO_
}

void ImageFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageFilter)
}

::google::protobuf::uint8* ImageFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->image_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageFilter)
  return target;
}

size_t ImageFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageFilter)
    MergeFrom(*source);
  }
}

void ImageFilter::MergeFrom(const ImageFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
}

void ImageFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageFilter::CopyFrom(const ImageFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageFilter::IsInitialized() const {
  return true;
}

void ImageFilter::Swap(ImageFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageFilter::InternalSwap(ImageFilter* other) {
  using std::swap;
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageFilter::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListImagesRequest::InitAsDefaultInstance() {
  ::runtime::_ListImagesRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::runtime::ImageFilter*>(
      ::runtime::ImageFilter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListImagesRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListImagesRequest::ListImagesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListImagesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListImagesRequest)
}
ListImagesRequest::ListImagesRequest(const ListImagesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filter()) {
    filter_ = new ::runtime::ImageFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ListImagesRequest)
}

void ListImagesRequest::SharedCtor() {
  filter_ = NULL;
  _cached_size_ = 0;
}

ListImagesRequest::~ListImagesRequest() {
  // @@protoc_insertion_point(destructor:runtime.ListImagesRequest)
  SharedDtor();
}

void ListImagesRequest::SharedDtor() {
  if (this != internal_default_instance()) delete filter_;
}

void ListImagesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListImagesRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListImagesRequest& ListImagesRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListImagesRequest();
  return *internal_default_instance();
}

ListImagesRequest* ListImagesRequest::New(::google::protobuf::Arena* arena) const {
  ListImagesRequest* n = new ListImagesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListImagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  _internal_metadata_.Clear();
}

bool ListImagesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListImagesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ImageFilter filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListImagesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListImagesRequest)
  return false;
#undef DO_
}

void ListImagesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageFilter filter = 1;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListImagesRequest)
}

::google::protobuf::uint8* ListImagesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListImagesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageFilter filter = 1;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListImagesRequest)
  return target;
}

size_t ListImagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListImagesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ImageFilter filter = 1;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListImagesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListImagesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListImagesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListImagesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListImagesRequest)
    MergeFrom(*source);
  }
}

void ListImagesRequest::MergeFrom(const ListImagesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListImagesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filter()) {
    mutable_filter()->::runtime::ImageFilter::MergeFrom(from.filter());
  }
}

void ListImagesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListImagesRequest::CopyFrom(const ListImagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListImagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListImagesRequest::IsInitialized() const {
  return true;
}

void ListImagesRequest::Swap(ListImagesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListImagesRequest::InternalSwap(ListImagesRequest* other) {
  using std::swap;
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListImagesRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Image::InitAsDefaultInstance() {
  ::runtime::_Image_default_instance_._instance.get_mutable()->uid_ = const_cast< ::runtime::Int64Value*>(
      ::runtime::Int64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Image::kIdFieldNumber;
const int Image::kRepoTagsFieldNumber;
const int Image::kRepoDigestsFieldNumber;
const int Image::kSizeFieldNumber;
const int Image::kUidFieldNumber;
const int Image::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.Image)
}
Image::Image(const Image& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      repo_tags_(from.repo_tags_),
      repo_digests_(from.repo_digests_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_uid()) {
    uid_ = new ::runtime::Int64Value(*from.uid_);
  } else {
    uid_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:runtime.Image)
}

void Image::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(size_));
  _cached_size_ = 0;
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:runtime.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete uid_;
}

void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Image& Image::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImage();
  return *internal_default_instance();
}

Image* Image::New(::google::protobuf::Arena* arena) const {
  Image* n = new Image;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  repo_tags_.Clear();
  repo_digests_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && uid_ != NULL) {
    delete uid_;
  }
  uid_ = NULL;
  size_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Image.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repo_tags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repo_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_tags(this->repo_tags_size() - 1).data(),
            static_cast<int>(this->repo_tags(this->repo_tags_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Image.repo_tags"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repo_digests = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repo_digests()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repo_digests(this->repo_digests_size() - 1).data(),
            static_cast<int>(this->repo_digests(this->repo_digests_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Image.repo_digests"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.Int64Value uid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.Image.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated string repo_tags = 2;
  for (int i = 0, n = this->repo_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_tags(i).data(), static_cast<int>(this->repo_tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.repo_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->repo_tags(i), output);
  }

  // repeated string repo_digests = 3;
  for (int i = 0, n = this->repo_digests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_digests(i).data(), static_cast<int>(this->repo_digests(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.repo_digests");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->repo_digests(i), output);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->size(), output);
  }

  // .runtime.Int64Value uid = 5;
  if (this->has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->uid_, output);
  }

  // string username = 6;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->username(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.Image)
}

::google::protobuf::uint8* Image::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.Image)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated string repo_tags = 2;
  for (int i = 0, n = this->repo_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_tags(i).data(), static_cast<int>(this->repo_tags(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.repo_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->repo_tags(i), target);
  }

  // repeated string repo_digests = 3;
  for (int i = 0, n = this->repo_digests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repo_digests(i).data(), static_cast<int>(this->repo_digests(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.repo_digests");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->repo_digests(i), target);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->size(), target);
  }

  // .runtime.Int64Value uid = 5;
  if (this->has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->uid_, deterministic, target);
  }

  // string username = 6;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.Image.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->username(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.Image)
  return target;
}

size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.Image)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string repo_tags = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repo_tags_size());
  for (int i = 0, n = this->repo_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repo_tags(i));
  }

  // repeated string repo_digests = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repo_digests_size());
  for (int i = 0, n = this->repo_digests_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repo_digests(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string username = 6;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // .runtime.Int64Value uid = 5;
  if (this->has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->uid_);
  }

  // uint64 size = 4;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.Image)
  GOOGLE_DCHECK_NE(&from, this);
  const Image* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.Image)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.Image)
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.Image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repo_tags_.MergeFrom(from.repo_tags_);
  repo_digests_.MergeFrom(from.repo_digests_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_uid()) {
    mutable_uid()->::runtime::Int64Value::MergeFrom(from.uid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  using std::swap;
  repo_tags_.InternalSwap(&other->repo_tags_);
  repo_digests_.InternalSwap(&other->repo_digests_);
  id_.Swap(&other->id_);
  username_.Swap(&other->username_);
  swap(uid_, other->uid_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListImagesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListImagesResponse::kImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListImagesResponse::ListImagesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListImagesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListImagesResponse)
}
ListImagesResponse::ListImagesResponse(const ListImagesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ListImagesResponse)
}

void ListImagesResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListImagesResponse::~ListImagesResponse() {
  // @@protoc_insertion_point(destructor:runtime.ListImagesResponse)
  SharedDtor();
}

void ListImagesResponse::SharedDtor() {
}

void ListImagesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListImagesResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListImagesResponse& ListImagesResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListImagesResponse();
  return *internal_default_instance();
}

ListImagesResponse* ListImagesResponse::New(::google::protobuf::Arena* arena) const {
  ListImagesResponse* n = new ListImagesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListImagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  _internal_metadata_.Clear();
}

bool ListImagesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListImagesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.Image images = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListImagesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListImagesResponse)
  return false;
#undef DO_
}

void ListImagesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.Image images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->images(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListImagesResponse)
}

::google::protobuf::uint8* ListImagesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListImagesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.Image images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->images(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListImagesResponse)
  return target;
}

size_t ListImagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListImagesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.Image images = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->images(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListImagesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListImagesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListImagesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListImagesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListImagesResponse)
    MergeFrom(*source);
  }
}

void ListImagesResponse::MergeFrom(const ListImagesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListImagesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
}

void ListImagesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListImagesResponse::CopyFrom(const ListImagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListImagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListImagesResponse::IsInitialized() const {
  return true;
}

void ListImagesResponse::Swap(ListImagesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListImagesResponse::InternalSwap(ListImagesResponse* other) {
  using std::swap;
  images_.InternalSwap(&other->images_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListImagesResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageStatusRequest::InitAsDefaultInstance() {
  ::runtime::_ImageStatusRequest_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageStatusRequest::kImageFieldNumber;
const int ImageStatusRequest::kVerboseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageStatusRequest::ImageStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageStatusRequest)
}
ImageStatusRequest::ImageStatusRequest(const ImageStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  verbose_ = from.verbose_;
  // @@protoc_insertion_point(copy_constructor:runtime.ImageStatusRequest)
}

void ImageStatusRequest::SharedCtor() {
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&verbose_) -
      reinterpret_cast<char*>(&image_)) + sizeof(verbose_));
  _cached_size_ = 0;
}

ImageStatusRequest::~ImageStatusRequest() {
  // @@protoc_insertion_point(destructor:runtime.ImageStatusRequest)
  SharedDtor();
}

void ImageStatusRequest::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
}

void ImageStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageStatusRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageStatusRequest& ImageStatusRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageStatusRequest();
  return *internal_default_instance();
}

ImageStatusRequest* ImageStatusRequest::New(::google::protobuf::Arena* arena) const {
  ImageStatusRequest* n = new ImageStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  verbose_ = false;
  _internal_metadata_.Clear();
}

bool ImageStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ImageSpec image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool verbose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageStatusRequest)
  return false;
#undef DO_
}

void ImageStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->verbose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageStatusRequest)
}

::google::protobuf::uint8* ImageStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->image_, deterministic, target);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->verbose(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageStatusRequest)
  return target;
}

size_t ImageStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // bool verbose = 2;
  if (this->verbose() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageStatusRequest)
    MergeFrom(*source);
  }
}

void ImageStatusRequest::MergeFrom(const ImageStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
  if (from.verbose() != 0) {
    set_verbose(from.verbose());
  }
}

void ImageStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageStatusRequest::CopyFrom(const ImageStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageStatusRequest::IsInitialized() const {
  return true;
}

void ImageStatusRequest::Swap(ImageStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageStatusRequest::InternalSwap(ImageStatusRequest* other) {
  using std::swap;
  swap(image_, other->image_);
  swap(verbose_, other->verbose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageStatusRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ImageStatusResponse_InfoEntry_DoNotUse::ImageStatusResponse_InfoEntry_DoNotUse() {}
ImageStatusResponse_InfoEntry_DoNotUse::ImageStatusResponse_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ImageStatusResponse_InfoEntry_DoNotUse::MergeFrom(const ImageStatusResponse_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ImageStatusResponse_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[86];
}
void ImageStatusResponse_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ImageStatusResponse::InitAsDefaultInstance() {
  ::runtime::_ImageStatusResponse_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::Image*>(
      ::runtime::Image::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageStatusResponse::kImageFieldNumber;
const int ImageStatusResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageStatusResponse::ImageStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageStatusResponse)
}
ImageStatusResponse::ImageStatusResponse(const ImageStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  if (from.has_image()) {
    image_ = new ::runtime::Image(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ImageStatusResponse)
}

void ImageStatusResponse::SharedCtor() {
  image_ = NULL;
  _cached_size_ = 0;
}

ImageStatusResponse::~ImageStatusResponse() {
  // @@protoc_insertion_point(destructor:runtime.ImageStatusResponse)
  SharedDtor();
}

void ImageStatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
}

void ImageStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageStatusResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageStatusResponse& ImageStatusResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageStatusResponse();
  return *internal_default_instance();
}

ImageStatusResponse* ImageStatusResponse::New(::google::protobuf::Arena* arena) const {
  ImageStatusResponse* n = new ImageStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.Image image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ImageStatusResponse_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ImageStatusResponse_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ImageStatusResponse.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ImageStatusResponse.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageStatusResponse)
  return false;
#undef DO_
}

void ImageStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Image image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ImageStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ImageStatusResponse.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ImageStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ImageStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageStatusResponse)
}

::google::protobuf::uint8* ImageStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.Image image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->image_, deterministic, target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ImageStatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ImageStatusResponse.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ImageStatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ImageStatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageStatusResponse)
  return target;
}

size_t ImageStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<ImageStatusResponse_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .runtime.Image image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageStatusResponse)
    MergeFrom(*source);
  }
}

void ImageStatusResponse::MergeFrom(const ImageStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_image()) {
    mutable_image()->::runtime::Image::MergeFrom(from.image());
  }
}

void ImageStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageStatusResponse::CopyFrom(const ImageStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageStatusResponse::IsInitialized() const {
  return true;
}

void ImageStatusResponse::Swap(ImageStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageStatusResponse::InternalSwap(ImageStatusResponse* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageStatusResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthConfig::kUsernameFieldNumber;
const int AuthConfig::kPasswordFieldNumber;
const int AuthConfig::kAuthFieldNumber;
const int AuthConfig::kServerAddressFieldNumber;
const int AuthConfig::kIdentityTokenFieldNumber;
const int AuthConfig::kRegistryTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthConfig::AuthConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsAuthConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.AuthConfig)
}
AuthConfig::AuthConfig(const AuthConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  auth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth().size() > 0) {
    auth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  server_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_address().size() > 0) {
    server_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_address_);
  }
  identity_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.identity_token().size() > 0) {
    identity_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_token_);
  }
  registry_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.registry_token().size() > 0) {
    registry_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registry_token_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.AuthConfig)
}

void AuthConfig::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AuthConfig::~AuthConfig() {
  // @@protoc_insertion_point(destructor:runtime.AuthConfig)
  SharedDtor();
}

void AuthConfig::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthConfig& AuthConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsAuthConfig();
  return *internal_default_instance();
}

AuthConfig* AuthConfig::New(::google::protobuf::Arena* arena) const {
  AuthConfig* n = new AuthConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.AuthConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  identity_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registry_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AuthConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.AuthConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string auth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_auth()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->auth().data(), static_cast<int>(this->auth().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.auth"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_address().data(), static_cast<int>(this->server_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.server_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string identity_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_identity_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->identity_token().data(), static_cast<int>(this->identity_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.identity_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string registry_token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registry_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registry_token().data(), static_cast<int>(this->registry_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.AuthConfig.registry_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.AuthConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.AuthConfig)
  return false;
#undef DO_
}

void AuthConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.AuthConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string auth = 3;
  if (this->auth().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth().data(), static_cast<int>(this->auth().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.auth");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->auth(), output);
  }

  // string server_address = 4;
  if (this->server_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_address().data(), static_cast<int>(this->server_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.server_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->server_address(), output);
  }

  // string identity_token = 5;
  if (this->identity_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity_token().data(), static_cast<int>(this->identity_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.identity_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->identity_token(), output);
  }

  // string registry_token = 6;
  if (this->registry_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_token().data(), static_cast<int>(this->registry_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.registry_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->registry_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.AuthConfig)
}

::google::protobuf::uint8* AuthConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.AuthConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string auth = 3;
  if (this->auth().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->auth().data(), static_cast<int>(this->auth().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.auth");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->auth(), target);
  }

  // string server_address = 4;
  if (this->server_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_address().data(), static_cast<int>(this->server_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.server_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->server_address(), target);
  }

  // string identity_token = 5;
  if (this->identity_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->identity_token().data(), static_cast<int>(this->identity_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.identity_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->identity_token(), target);
  }

  // string registry_token = 6;
  if (this->registry_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_token().data(), static_cast<int>(this->registry_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.AuthConfig.registry_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->registry_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.AuthConfig)
  return target;
}

size_t AuthConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.AuthConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string auth = 3;
  if (this->auth().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->auth());
  }

  // string server_address = 4;
  if (this->server_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_address());
  }

  // string identity_token = 5;
  if (this->identity_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->identity_token());
  }

  // string registry_token = 6;
  if (this->registry_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->registry_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.AuthConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.AuthConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.AuthConfig)
    MergeFrom(*source);
  }
}

void AuthConfig::MergeFrom(const AuthConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.AuthConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.auth().size() > 0) {

    auth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  if (from.server_address().size() > 0) {

    server_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_address_);
  }
  if (from.identity_token().size() > 0) {

    identity_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.identity_token_);
  }
  if (from.registry_token().size() > 0) {

    registry_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registry_token_);
  }
}

void AuthConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.AuthConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthConfig::CopyFrom(const AuthConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.AuthConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthConfig::IsInitialized() const {
  return true;
}

void AuthConfig::Swap(AuthConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthConfig::InternalSwap(AuthConfig* other) {
  using std::swap;
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  auth_.Swap(&other->auth_);
  server_address_.Swap(&other->server_address_);
  identity_token_.Swap(&other->identity_token_);
  registry_token_.Swap(&other->registry_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullImageRequest::InitAsDefaultInstance() {
  ::runtime::_PullImageRequest_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
  ::runtime::_PullImageRequest_default_instance_._instance.get_mutable()->auth_ = const_cast< ::runtime::AuthConfig*>(
      ::runtime::AuthConfig::internal_default_instance());
  ::runtime::_PullImageRequest_default_instance_._instance.get_mutable()->sandbox_config_ = const_cast< ::runtime::PodSandboxConfig*>(
      ::runtime::PodSandboxConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullImageRequest::kImageFieldNumber;
const int PullImageRequest::kAuthFieldNumber;
const int PullImageRequest::kSandboxConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullImageRequest::PullImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPullImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PullImageRequest)
}
PullImageRequest::PullImageRequest(const PullImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  if (from.has_auth()) {
    auth_ = new ::runtime::AuthConfig(*from.auth_);
  } else {
    auth_ = NULL;
  }
  if (from.has_sandbox_config()) {
    sandbox_config_ = new ::runtime::PodSandboxConfig(*from.sandbox_config_);
  } else {
    sandbox_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PullImageRequest)
}

void PullImageRequest::SharedCtor() {
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sandbox_config_) -
      reinterpret_cast<char*>(&image_)) + sizeof(sandbox_config_));
  _cached_size_ = 0;
}

PullImageRequest::~PullImageRequest() {
  // @@protoc_insertion_point(destructor:runtime.PullImageRequest)
  SharedDtor();
}

void PullImageRequest::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete sandbox_config_;
}

void PullImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullImageRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullImageRequest& PullImageRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPullImageRequest();
  return *internal_default_instance();
}

PullImageRequest* PullImageRequest::New(::google::protobuf::Arena* arena) const {
  PullImageRequest* n = new PullImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PullImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) {
    delete auth_;
  }
  auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && sandbox_config_ != NULL) {
    delete sandbox_config_;
  }
  sandbox_config_ = NULL;
  _internal_metadata_.Clear();
}

bool PullImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PullImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ImageSpec image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.AuthConfig auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.PodSandboxConfig sandbox_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sandbox_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PullImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PullImageRequest)
  return false;
#undef DO_
}

void PullImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PullImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  // .runtime.AuthConfig auth = 2;
  if (this->has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->auth_, output);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->sandbox_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PullImageRequest)
}

::google::protobuf::uint8* PullImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PullImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->image_, deterministic, target);
  }

  // .runtime.AuthConfig auth = 2;
  if (this->has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->auth_, deterministic, target);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->sandbox_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PullImageRequest)
  return target;
}

size_t PullImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PullImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  // .runtime.AuthConfig auth = 2;
  if (this->has_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->auth_);
  }

  // .runtime.PodSandboxConfig sandbox_config = 3;
  if (this->has_sandbox_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sandbox_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PullImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PullImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PullImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PullImageRequest)
    MergeFrom(*source);
  }
}

void PullImageRequest::MergeFrom(const PullImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PullImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
  if (from.has_auth()) {
    mutable_auth()->::runtime::AuthConfig::MergeFrom(from.auth());
  }
  if (from.has_sandbox_config()) {
    mutable_sandbox_config()->::runtime::PodSandboxConfig::MergeFrom(from.sandbox_config());
  }
}

void PullImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PullImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullImageRequest::CopyFrom(const PullImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PullImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullImageRequest::IsInitialized() const {
  return true;
}

void PullImageRequest::Swap(PullImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullImageRequest::InternalSwap(PullImageRequest* other) {
  using std::swap;
  swap(image_, other->image_);
  swap(auth_, other->auth_);
  swap(sandbox_config_, other->sandbox_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullImageRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PullImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PullImageResponse::kImageRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PullImageResponse::PullImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsPullImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.PullImageResponse)
}
PullImageResponse::PullImageResponse(const PullImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_ref().size() > 0) {
    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.PullImageResponse)
}

void PullImageResponse::SharedCtor() {
  image_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PullImageResponse::~PullImageResponse() {
  // @@protoc_insertion_point(destructor:runtime.PullImageResponse)
  SharedDtor();
}

void PullImageResponse::SharedDtor() {
  image_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PullImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PullImageResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PullImageResponse& PullImageResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsPullImageResponse();
  return *internal_default_instance();
}

PullImageResponse* PullImageResponse::New(::google::protobuf::Arena* arena) const {
  PullImageResponse* n = new PullImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PullImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.PullImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_ref_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PullImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.PullImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_ref().data(), static_cast<int>(this->image_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.PullImageResponse.image_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.PullImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.PullImageResponse)
  return false;
#undef DO_
}

void PullImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.PullImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_ref = 1;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PullImageResponse.image_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_ref(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.PullImageResponse)
}

::google::protobuf::uint8* PullImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.PullImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_ref = 1;
  if (this->image_ref().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_ref().data(), static_cast<int>(this->image_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.PullImageResponse.image_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_ref(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.PullImageResponse)
  return target;
}

size_t PullImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.PullImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_ref = 1;
  if (this->image_ref().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PullImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.PullImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PullImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PullImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.PullImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.PullImageResponse)
    MergeFrom(*source);
  }
}

void PullImageResponse::MergeFrom(const PullImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.PullImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_ref().size() > 0) {

    image_ref_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_ref_);
  }
}

void PullImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.PullImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PullImageResponse::CopyFrom(const PullImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.PullImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullImageResponse::IsInitialized() const {
  return true;
}

void PullImageResponse::Swap(PullImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PullImageResponse::InternalSwap(PullImageResponse* other) {
  using std::swap;
  image_ref_.Swap(&other->image_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PullImageResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveImageRequest::InitAsDefaultInstance() {
  ::runtime::_RemoveImageRequest_default_instance_._instance.get_mutable()->image_ = const_cast< ::runtime::ImageSpec*>(
      ::runtime::ImageSpec::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveImageRequest::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveImageRequest::RemoveImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveImageRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemoveImageRequest)
}
RemoveImageRequest::RemoveImageRequest(const RemoveImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::runtime::ImageSpec(*from.image_);
  } else {
    image_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RemoveImageRequest)
}

void RemoveImageRequest::SharedCtor() {
  image_ = NULL;
  _cached_size_ = 0;
}

RemoveImageRequest::~RemoveImageRequest() {
  // @@protoc_insertion_point(destructor:runtime.RemoveImageRequest)
  SharedDtor();
}

void RemoveImageRequest::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
}

void RemoveImageRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveImageRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveImageRequest& RemoveImageRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveImageRequest();
  return *internal_default_instance();
}

RemoveImageRequest* RemoveImageRequest::New(::google::protobuf::Arena* arena) const {
  RemoveImageRequest* n = new RemoveImageRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemoveImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoveImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemoveImageRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ImageSpec image = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemoveImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemoveImageRequest)
  return false;
#undef DO_
}

void RemoveImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemoveImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->image_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemoveImageRequest)
}

::google::protobuf::uint8* RemoveImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemoveImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->image_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemoveImageRequest)
  return target;
}

size_t RemoveImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemoveImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ImageSpec image = 1;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->image_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemoveImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemoveImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemoveImageRequest)
    MergeFrom(*source);
  }
}

void RemoveImageRequest::MergeFrom(const RemoveImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemoveImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    mutable_image()->::runtime::ImageSpec::MergeFrom(from.image());
  }
}

void RemoveImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemoveImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveImageRequest::CopyFrom(const RemoveImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemoveImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveImageRequest::IsInitialized() const {
  return true;
}

void RemoveImageRequest::Swap(RemoveImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveImageRequest::InternalSwap(RemoveImageRequest* other) {
  using std::swap;
  swap(image_, other->image_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveImageRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveImageResponse::RemoveImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveImageResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RemoveImageResponse)
}
RemoveImageResponse::RemoveImageResponse(const RemoveImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.RemoveImageResponse)
}

void RemoveImageResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemoveImageResponse::~RemoveImageResponse() {
  // @@protoc_insertion_point(destructor:runtime.RemoveImageResponse)
  SharedDtor();
}

void RemoveImageResponse::SharedDtor() {
}

void RemoveImageResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveImageResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveImageResponse& RemoveImageResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRemoveImageResponse();
  return *internal_default_instance();
}

RemoveImageResponse* RemoveImageResponse::New(::google::protobuf::Arena* arena) const {
  RemoveImageResponse* n = new RemoveImageResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RemoveImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RemoveImageResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RemoveImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RemoveImageResponse)
  return false;
#undef DO_
}

void RemoveImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RemoveImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RemoveImageResponse)
}

::google::protobuf::uint8* RemoveImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RemoveImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RemoveImageResponse)
  return target;
}

size_t RemoveImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RemoveImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RemoveImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RemoveImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RemoveImageResponse)
    MergeFrom(*source);
  }
}

void RemoveImageResponse::MergeFrom(const RemoveImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RemoveImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RemoveImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveImageResponse::CopyFrom(const RemoveImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RemoveImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveImageResponse::IsInitialized() const {
  return true;
}

void RemoveImageResponse::Swap(RemoveImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveImageResponse::InternalSwap(RemoveImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveImageResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetworkConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetworkConfig::kPodCidrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetworkConfig::NetworkConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsNetworkConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.NetworkConfig)
}
NetworkConfig::NetworkConfig(const NetworkConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pod_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_cidr().size() > 0) {
    pod_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_cidr_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.NetworkConfig)
}

void NetworkConfig::SharedCtor() {
  pod_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

NetworkConfig::~NetworkConfig() {
  // @@protoc_insertion_point(destructor:runtime.NetworkConfig)
  SharedDtor();
}

void NetworkConfig::SharedDtor() {
  pod_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetworkConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NetworkConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetworkConfig& NetworkConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsNetworkConfig();
  return *internal_default_instance();
}

NetworkConfig* NetworkConfig::New(::google::protobuf::Arena* arena) const {
  NetworkConfig* n = new NetworkConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NetworkConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pod_cidr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool NetworkConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.NetworkConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pod_cidr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_cidr().data(), static_cast<int>(this->pod_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.NetworkConfig.pod_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.NetworkConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.NetworkConfig)
  return false;
#undef DO_
}

void NetworkConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_cidr = 1;
  if (this->pod_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_cidr().data(), static_cast<int>(this->pod_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.NetworkConfig.pod_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_cidr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.NetworkConfig)
}

::google::protobuf::uint8* NetworkConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.NetworkConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pod_cidr = 1;
  if (this->pod_cidr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_cidr().data(), static_cast<int>(this->pod_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.NetworkConfig.pod_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_cidr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.NetworkConfig)
  return target;
}

size_t NetworkConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.NetworkConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pod_cidr = 1;
  if (this->pod_cidr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_cidr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NetworkConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.NetworkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetworkConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.NetworkConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.NetworkConfig)
    MergeFrom(*source);
  }
}

void NetworkConfig::MergeFrom(const NetworkConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.NetworkConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pod_cidr().size() > 0) {

    pod_cidr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_cidr_);
  }
}

void NetworkConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.NetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkConfig::CopyFrom(const NetworkConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.NetworkConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkConfig::IsInitialized() const {
  return true;
}

void NetworkConfig::Swap(NetworkConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetworkConfig::InternalSwap(NetworkConfig* other) {
  using std::swap;
  pod_cidr_.Swap(&other->pod_cidr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NetworkConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeConfig::InitAsDefaultInstance() {
  ::runtime::_RuntimeConfig_default_instance_._instance.get_mutable()->network_config_ = const_cast< ::runtime::NetworkConfig*>(
      ::runtime::NetworkConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeConfig::kNetworkConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeConfig::RuntimeConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RuntimeConfig)
}
RuntimeConfig::RuntimeConfig(const RuntimeConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_network_config()) {
    network_config_ = new ::runtime::NetworkConfig(*from.network_config_);
  } else {
    network_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.RuntimeConfig)
}

void RuntimeConfig::SharedCtor() {
  network_config_ = NULL;
  _cached_size_ = 0;
}

RuntimeConfig::~RuntimeConfig() {
  // @@protoc_insertion_point(destructor:runtime.RuntimeConfig)
  SharedDtor();
}

void RuntimeConfig::SharedDtor() {
  if (this != internal_default_instance()) delete network_config_;
}

void RuntimeConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeConfig::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeConfig& RuntimeConfig::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeConfig();
  return *internal_default_instance();
}

RuntimeConfig* RuntimeConfig::New(::google::protobuf::Arena* arena) const {
  RuntimeConfig* n = new RuntimeConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RuntimeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && network_config_ != NULL) {
    delete network_config_;
  }
  network_config_ = NULL;
  _internal_metadata_.Clear();
}

bool RuntimeConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RuntimeConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.NetworkConfig network_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_network_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RuntimeConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RuntimeConfig)
  return false;
#undef DO_
}

void RuntimeConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RuntimeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NetworkConfig network_config = 1;
  if (this->has_network_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->network_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RuntimeConfig)
}

::google::protobuf::uint8* RuntimeConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RuntimeConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.NetworkConfig network_config = 1;
  if (this->has_network_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->network_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RuntimeConfig)
  return target;
}

size_t RuntimeConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RuntimeConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.NetworkConfig network_config = 1;
  if (this->has_network_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->network_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RuntimeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RuntimeConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RuntimeConfig)
    MergeFrom(*source);
  }
}

void RuntimeConfig::MergeFrom(const RuntimeConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RuntimeConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_network_config()) {
    mutable_network_config()->::runtime::NetworkConfig::MergeFrom(from.network_config());
  }
}

void RuntimeConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RuntimeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeConfig::CopyFrom(const RuntimeConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RuntimeConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeConfig::IsInitialized() const {
  return true;
}

void RuntimeConfig::Swap(RuntimeConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeConfig::InternalSwap(RuntimeConfig* other) {
  using std::swap;
  swap(network_config_, other->network_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeConfig::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRuntimeConfigRequest::InitAsDefaultInstance() {
  ::runtime::_UpdateRuntimeConfigRequest_default_instance_._instance.get_mutable()->runtime_config_ = const_cast< ::runtime::RuntimeConfig*>(
      ::runtime::RuntimeConfig::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRuntimeConfigRequest::kRuntimeConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRuntimeConfigRequest::UpdateRuntimeConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateRuntimeConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.UpdateRuntimeConfigRequest)
}
UpdateRuntimeConfigRequest::UpdateRuntimeConfigRequest(const UpdateRuntimeConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_runtime_config()) {
    runtime_config_ = new ::runtime::RuntimeConfig(*from.runtime_config_);
  } else {
    runtime_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.UpdateRuntimeConfigRequest)
}

void UpdateRuntimeConfigRequest::SharedCtor() {
  runtime_config_ = NULL;
  _cached_size_ = 0;
}

UpdateRuntimeConfigRequest::~UpdateRuntimeConfigRequest() {
  // @@protoc_insertion_point(destructor:runtime.UpdateRuntimeConfigRequest)
  SharedDtor();
}

void UpdateRuntimeConfigRequest::SharedDtor() {
  if (this != internal_default_instance()) delete runtime_config_;
}

void UpdateRuntimeConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRuntimeConfigRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRuntimeConfigRequest& UpdateRuntimeConfigRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateRuntimeConfigRequest();
  return *internal_default_instance();
}

UpdateRuntimeConfigRequest* UpdateRuntimeConfigRequest::New(::google::protobuf::Arena* arena) const {
  UpdateRuntimeConfigRequest* n = new UpdateRuntimeConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRuntimeConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.UpdateRuntimeConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && runtime_config_ != NULL) {
    delete runtime_config_;
  }
  runtime_config_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateRuntimeConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.UpdateRuntimeConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.RuntimeConfig runtime_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_runtime_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.UpdateRuntimeConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.UpdateRuntimeConfigRequest)
  return false;
#undef DO_
}

void UpdateRuntimeConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.UpdateRuntimeConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.RuntimeConfig runtime_config = 1;
  if (this->has_runtime_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->runtime_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.UpdateRuntimeConfigRequest)
}

::google::protobuf::uint8* UpdateRuntimeConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.UpdateRuntimeConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.RuntimeConfig runtime_config = 1;
  if (this->has_runtime_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->runtime_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.UpdateRuntimeConfigRequest)
  return target;
}

size_t UpdateRuntimeConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.UpdateRuntimeConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.RuntimeConfig runtime_config = 1;
  if (this->has_runtime_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->runtime_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRuntimeConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.UpdateRuntimeConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRuntimeConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRuntimeConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.UpdateRuntimeConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.UpdateRuntimeConfigRequest)
    MergeFrom(*source);
  }
}

void UpdateRuntimeConfigRequest::MergeFrom(const UpdateRuntimeConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.UpdateRuntimeConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_runtime_config()) {
    mutable_runtime_config()->::runtime::RuntimeConfig::MergeFrom(from.runtime_config());
  }
}

void UpdateRuntimeConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.UpdateRuntimeConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRuntimeConfigRequest::CopyFrom(const UpdateRuntimeConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.UpdateRuntimeConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeConfigRequest::IsInitialized() const {
  return true;
}

void UpdateRuntimeConfigRequest::Swap(UpdateRuntimeConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRuntimeConfigRequest::InternalSwap(UpdateRuntimeConfigRequest* other) {
  using std::swap;
  swap(runtime_config_, other->runtime_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRuntimeConfigRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRuntimeConfigResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRuntimeConfigResponse::UpdateRuntimeConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateRuntimeConfigResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.UpdateRuntimeConfigResponse)
}
UpdateRuntimeConfigResponse::UpdateRuntimeConfigResponse(const UpdateRuntimeConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.UpdateRuntimeConfigResponse)
}

void UpdateRuntimeConfigResponse::SharedCtor() {
  _cached_size_ = 0;
}

UpdateRuntimeConfigResponse::~UpdateRuntimeConfigResponse() {
  // @@protoc_insertion_point(destructor:runtime.UpdateRuntimeConfigResponse)
  SharedDtor();
}

void UpdateRuntimeConfigResponse::SharedDtor() {
}

void UpdateRuntimeConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRuntimeConfigResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRuntimeConfigResponse& UpdateRuntimeConfigResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsUpdateRuntimeConfigResponse();
  return *internal_default_instance();
}

UpdateRuntimeConfigResponse* UpdateRuntimeConfigResponse::New(::google::protobuf::Arena* arena) const {
  UpdateRuntimeConfigResponse* n = new UpdateRuntimeConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRuntimeConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.UpdateRuntimeConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UpdateRuntimeConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.UpdateRuntimeConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.UpdateRuntimeConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.UpdateRuntimeConfigResponse)
  return false;
#undef DO_
}

void UpdateRuntimeConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.UpdateRuntimeConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.UpdateRuntimeConfigResponse)
}

::google::protobuf::uint8* UpdateRuntimeConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.UpdateRuntimeConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.UpdateRuntimeConfigResponse)
  return target;
}

size_t UpdateRuntimeConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.UpdateRuntimeConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRuntimeConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.UpdateRuntimeConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRuntimeConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRuntimeConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.UpdateRuntimeConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.UpdateRuntimeConfigResponse)
    MergeFrom(*source);
  }
}

void UpdateRuntimeConfigResponse::MergeFrom(const UpdateRuntimeConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.UpdateRuntimeConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UpdateRuntimeConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.UpdateRuntimeConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRuntimeConfigResponse::CopyFrom(const UpdateRuntimeConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.UpdateRuntimeConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeConfigResponse::IsInitialized() const {
  return true;
}

void UpdateRuntimeConfigResponse::Swap(UpdateRuntimeConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRuntimeConfigResponse::InternalSwap(UpdateRuntimeConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRuntimeConfigResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeCondition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeCondition::kTypeFieldNumber;
const int RuntimeCondition::kStatusFieldNumber;
const int RuntimeCondition::kReasonFieldNumber;
const int RuntimeCondition::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeCondition::RuntimeCondition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeCondition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RuntimeCondition)
}
RuntimeCondition::RuntimeCondition(const RuntimeCondition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:runtime.RuntimeCondition)
}

void RuntimeCondition::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _cached_size_ = 0;
}

RuntimeCondition::~RuntimeCondition() {
  // @@protoc_insertion_point(destructor:runtime.RuntimeCondition)
  SharedDtor();
}

void RuntimeCondition::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RuntimeCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeCondition::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeCondition& RuntimeCondition::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeCondition();
  return *internal_default_instance();
}

RuntimeCondition* RuntimeCondition::New(::google::protobuf::Arena* arena) const {
  RuntimeCondition* n = new RuntimeCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RuntimeCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

bool RuntimeCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RuntimeCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RuntimeCondition.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RuntimeCondition.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.RuntimeCondition.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RuntimeCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RuntimeCondition)
  return false;
#undef DO_
}

void RuntimeCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RuntimeCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // bool status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->status(), output);
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reason(), output);
  }

  // string message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RuntimeCondition)
}

::google::protobuf::uint8* RuntimeCondition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RuntimeCondition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // bool status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->status(), target);
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reason(), target);
  }

  // string message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.RuntimeCondition.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RuntimeCondition)
  return target;
}

size_t RuntimeCondition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RuntimeCondition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // string message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bool status = 2;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeCondition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RuntimeCondition)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeCondition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeCondition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RuntimeCondition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RuntimeCondition)
    MergeFrom(*source);
  }
}

void RuntimeCondition::MergeFrom(const RuntimeCondition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RuntimeCondition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RuntimeCondition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RuntimeCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeCondition::CopyFrom(const RuntimeCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RuntimeCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeCondition::IsInitialized() const {
  return true;
}

void RuntimeCondition::Swap(RuntimeCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeCondition::InternalSwap(RuntimeCondition* other) {
  using std::swap;
  type_.Swap(&other->type_);
  reason_.Swap(&other->reason_);
  message_.Swap(&other->message_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeCondition::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RuntimeStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuntimeStatus::kConditionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuntimeStatus::RuntimeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.RuntimeStatus)
}
RuntimeStatus::RuntimeStatus(const RuntimeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      conditions_(from.conditions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.RuntimeStatus)
}

void RuntimeStatus::SharedCtor() {
  _cached_size_ = 0;
}

RuntimeStatus::~RuntimeStatus() {
  // @@protoc_insertion_point(destructor:runtime.RuntimeStatus)
  SharedDtor();
}

void RuntimeStatus::SharedDtor() {
}

void RuntimeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuntimeStatus::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuntimeStatus& RuntimeStatus::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsRuntimeStatus();
  return *internal_default_instance();
}

RuntimeStatus* RuntimeStatus::New(::google::protobuf::Arena* arena) const {
  RuntimeStatus* n = new RuntimeStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuntimeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.RuntimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conditions_.Clear();
  _internal_metadata_.Clear();
}

bool RuntimeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.RuntimeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.RuntimeCondition conditions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_conditions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.RuntimeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.RuntimeStatus)
  return false;
#undef DO_
}

void RuntimeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.RuntimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.RuntimeCondition conditions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->conditions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.RuntimeStatus)
}

::google::protobuf::uint8* RuntimeStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.RuntimeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.RuntimeCondition conditions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conditions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->conditions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.RuntimeStatus)
  return target;
}

size_t RuntimeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.RuntimeStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.RuntimeCondition conditions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->conditions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conditions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuntimeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.RuntimeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const RuntimeStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuntimeStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.RuntimeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.RuntimeStatus)
    MergeFrom(*source);
  }
}

void RuntimeStatus::MergeFrom(const RuntimeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.RuntimeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conditions_.MergeFrom(from.conditions_);
}

void RuntimeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.RuntimeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuntimeStatus::CopyFrom(const RuntimeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.RuntimeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeStatus::IsInitialized() const {
  return true;
}

void RuntimeStatus::Swap(RuntimeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuntimeStatus::InternalSwap(RuntimeStatus* other) {
  using std::swap;
  conditions_.InternalSwap(&other->conditions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuntimeStatus::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusRequest::kVerboseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusRequest::StatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StatusRequest)
}
StatusRequest::StatusRequest(const StatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  verbose_ = from.verbose_;
  // @@protoc_insertion_point(copy_constructor:runtime.StatusRequest)
}

void StatusRequest::SharedCtor() {
  verbose_ = false;
  _cached_size_ = 0;
}

StatusRequest::~StatusRequest() {
  // @@protoc_insertion_point(destructor:runtime.StatusRequest)
  SharedDtor();
}

void StatusRequest::SharedDtor() {
}

void StatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusRequest& StatusRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStatusRequest();
  return *internal_default_instance();
}

StatusRequest* StatusRequest::New(::google::protobuf::Arena* arena) const {
  StatusRequest* n = new StatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verbose_ = false;
  _internal_metadata_.Clear();
}

bool StatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool verbose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verbose_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StatusRequest)
  return false;
#undef DO_
}

void StatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool verbose = 1;
  if (this->verbose() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->verbose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StatusRequest)
}

::google::protobuf::uint8* StatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool verbose = 1;
  if (this->verbose() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->verbose(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StatusRequest)
  return target;
}

size_t StatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool verbose = 1;
  if (this->verbose() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StatusRequest)
    MergeFrom(*source);
  }
}

void StatusRequest::MergeFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.verbose() != 0) {
    set_verbose(from.verbose());
  }
}

void StatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusRequest::CopyFrom(const StatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusRequest::IsInitialized() const {
  return true;
}

void StatusRequest::Swap(StatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusRequest::InternalSwap(StatusRequest* other) {
  using std::swap;
  swap(verbose_, other->verbose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StatusResponse_InfoEntry_DoNotUse::StatusResponse_InfoEntry_DoNotUse() {}
StatusResponse_InfoEntry_DoNotUse::StatusResponse_InfoEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void StatusResponse_InfoEntry_DoNotUse::MergeFrom(const StatusResponse_InfoEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StatusResponse_InfoEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[100];
}
void StatusResponse_InfoEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void StatusResponse::InitAsDefaultInstance() {
  ::runtime::_StatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::runtime::RuntimeStatus*>(
      ::runtime::RuntimeStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusResponse::kStatusFieldNumber;
const int StatusResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusResponse::StatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StatusResponse)
}
StatusResponse::StatusResponse(const StatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    status_ = new ::runtime::RuntimeStatus(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.StatusResponse)
}

void StatusResponse::SharedCtor() {
  status_ = NULL;
  _cached_size_ = 0;
}

StatusResponse::~StatusResponse() {
  // @@protoc_insertion_point(destructor:runtime.StatusResponse)
  SharedDtor();
}

void StatusResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void StatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusResponse& StatusResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStatusResponse();
  return *internal_default_instance();
}

StatusResponse* StatusResponse::New(::google::protobuf::Arena* arena) const {
  StatusResponse* n = new StatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  info_.Clear();
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool StatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.RuntimeStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          StatusResponse_InfoEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StatusResponse_InfoEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&info_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StatusResponse.InfoEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StatusResponse.InfoEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StatusResponse)
  return false;
#undef DO_
}

void StatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.RuntimeStatus status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->status_, output);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.StatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.StatusResponse.InfoEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<StatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StatusResponse)
}

::google::protobuf::uint8* StatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.RuntimeStatus status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->status_, deterministic, target);
  }

  // map<string, string> info = 2;
  if (!this->info().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.StatusResponse.InfoEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.StatusResponse.InfoEntry.value");
      }
    };

    if (deterministic &&
        this->info().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->info().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<StatusResponse_InfoEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(info_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<StatusResponse_InfoEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->info().begin();
          it != this->info().end(); ++it) {
        entry.reset(info_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StatusResponse)
  return target;
}

size_t StatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> info = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->info_size());
  {
    ::google::protobuf::scoped_ptr<StatusResponse_InfoEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->info().begin();
        it != this->info().end(); ++it) {
      entry.reset(info_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .runtime.RuntimeStatus status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StatusResponse)
    MergeFrom(*source);
  }
}

void StatusResponse::MergeFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  info_.MergeFrom(from.info_);
  if (from.has_status()) {
    mutable_status()->::runtime::RuntimeStatus::MergeFrom(from.status());
  }
}

void StatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusResponse::CopyFrom(const StatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusResponse::IsInitialized() const {
  return true;
}

void StatusResponse::Swap(StatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusResponse::InternalSwap(StatusResponse* other) {
  using std::swap;
  info_.Swap(&other->info_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageFsInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageFsInfoRequest::ImageFsInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFsInfoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageFsInfoRequest)
}
ImageFsInfoRequest::ImageFsInfoRequest(const ImageFsInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ImageFsInfoRequest)
}

void ImageFsInfoRequest::SharedCtor() {
  _cached_size_ = 0;
}

ImageFsInfoRequest::~ImageFsInfoRequest() {
  // @@protoc_insertion_point(destructor:runtime.ImageFsInfoRequest)
  SharedDtor();
}

void ImageFsInfoRequest::SharedDtor() {
}

void ImageFsInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageFsInfoRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageFsInfoRequest& ImageFsInfoRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFsInfoRequest();
  return *internal_default_instance();
}

ImageFsInfoRequest* ImageFsInfoRequest::New(::google::protobuf::Arena* arena) const {
  ImageFsInfoRequest* n = new ImageFsInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageFsInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageFsInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ImageFsInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageFsInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageFsInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageFsInfoRequest)
  return false;
#undef DO_
}

void ImageFsInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageFsInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageFsInfoRequest)
}

::google::protobuf::uint8* ImageFsInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageFsInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageFsInfoRequest)
  return target;
}

size_t ImageFsInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageFsInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageFsInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageFsInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageFsInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageFsInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageFsInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageFsInfoRequest)
    MergeFrom(*source);
  }
}

void ImageFsInfoRequest::MergeFrom(const ImageFsInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageFsInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImageFsInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageFsInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageFsInfoRequest::CopyFrom(const ImageFsInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageFsInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageFsInfoRequest::IsInitialized() const {
  return true;
}

void ImageFsInfoRequest::Swap(ImageFsInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageFsInfoRequest::InternalSwap(ImageFsInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageFsInfoRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UInt64Value::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UInt64Value::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UInt64Value::UInt64Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsUInt64Value();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.UInt64Value)
}
UInt64Value::UInt64Value(const UInt64Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:runtime.UInt64Value)
}

void UInt64Value::SharedCtor() {
  value_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

UInt64Value::~UInt64Value() {
  // @@protoc_insertion_point(destructor:runtime.UInt64Value)
  SharedDtor();
}

void UInt64Value::SharedDtor() {
}

void UInt64Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UInt64Value::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UInt64Value& UInt64Value::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsUInt64Value();
  return *internal_default_instance();
}

UInt64Value* UInt64Value::New(::google::protobuf::Arena* arena) const {
  UInt64Value* n = new UInt64Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UInt64Value::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.UInt64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool UInt64Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.UInt64Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.UInt64Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.UInt64Value)
  return false;
#undef DO_
}

void UInt64Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.UInt64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.UInt64Value)
}

::google::protobuf::uint8* UInt64Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.UInt64Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.UInt64Value)
  return target;
}

size_t UInt64Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.UInt64Value)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UInt64Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.UInt64Value)
  GOOGLE_DCHECK_NE(&from, this);
  const UInt64Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UInt64Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.UInt64Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.UInt64Value)
    MergeFrom(*source);
  }
}

void UInt64Value::MergeFrom(const UInt64Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.UInt64Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void UInt64Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.UInt64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UInt64Value::CopyFrom(const UInt64Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.UInt64Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UInt64Value::IsInitialized() const {
  return true;
}

void UInt64Value::Swap(UInt64Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UInt64Value::InternalSwap(UInt64Value* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UInt64Value::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorageIdentifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorageIdentifier::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorageIdentifier::StorageIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsStorageIdentifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.StorageIdentifier)
}
StorageIdentifier::StorageIdentifier(const StorageIdentifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.StorageIdentifier)
}

void StorageIdentifier::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StorageIdentifier::~StorageIdentifier() {
  // @@protoc_insertion_point(destructor:runtime.StorageIdentifier)
  SharedDtor();
}

void StorageIdentifier::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StorageIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorageIdentifier::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorageIdentifier& StorageIdentifier::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsStorageIdentifier();
  return *internal_default_instance();
}

StorageIdentifier* StorageIdentifier::New(::google::protobuf::Arena* arena) const {
  StorageIdentifier* n = new StorageIdentifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorageIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.StorageIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StorageIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.StorageIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uuid().data(), static_cast<int>(this->uuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.StorageIdentifier.uuid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.StorageIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.StorageIdentifier)
  return false;
#undef DO_
}

void StorageIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.StorageIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StorageIdentifier.uuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.StorageIdentifier)
}

::google::protobuf::uint8* StorageIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.StorageIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uuid().data(), static_cast<int>(this->uuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.StorageIdentifier.uuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.StorageIdentifier)
  return target;
}

size_t StorageIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.StorageIdentifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorageIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.StorageIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const StorageIdentifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorageIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.StorageIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.StorageIdentifier)
    MergeFrom(*source);
  }
}

void StorageIdentifier::MergeFrom(const StorageIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.StorageIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void StorageIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.StorageIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorageIdentifier::CopyFrom(const StorageIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.StorageIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorageIdentifier::IsInitialized() const {
  return true;
}

void StorageIdentifier::Swap(StorageIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorageIdentifier::InternalSwap(StorageIdentifier* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorageIdentifier::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FilesystemUsage::InitAsDefaultInstance() {
  ::runtime::_FilesystemUsage_default_instance_._instance.get_mutable()->storage_id_ = const_cast< ::runtime::StorageIdentifier*>(
      ::runtime::StorageIdentifier::internal_default_instance());
  ::runtime::_FilesystemUsage_default_instance_._instance.get_mutable()->used_bytes_ = const_cast< ::runtime::UInt64Value*>(
      ::runtime::UInt64Value::internal_default_instance());
  ::runtime::_FilesystemUsage_default_instance_._instance.get_mutable()->inodes_used_ = const_cast< ::runtime::UInt64Value*>(
      ::runtime::UInt64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilesystemUsage::kTimestampFieldNumber;
const int FilesystemUsage::kStorageIdFieldNumber;
const int FilesystemUsage::kUsedBytesFieldNumber;
const int FilesystemUsage::kInodesUsedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilesystemUsage::FilesystemUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsFilesystemUsage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.FilesystemUsage)
}
FilesystemUsage::FilesystemUsage(const FilesystemUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_storage_id()) {
    storage_id_ = new ::runtime::StorageIdentifier(*from.storage_id_);
  } else {
    storage_id_ = NULL;
  }
  if (from.has_used_bytes()) {
    used_bytes_ = new ::runtime::UInt64Value(*from.used_bytes_);
  } else {
    used_bytes_ = NULL;
  }
  if (from.has_inodes_used()) {
    inodes_used_ = new ::runtime::UInt64Value(*from.inodes_used_);
  } else {
    inodes_used_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:runtime.FilesystemUsage)
}

void FilesystemUsage::SharedCtor() {
  ::memset(&storage_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&storage_id_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

FilesystemUsage::~FilesystemUsage() {
  // @@protoc_insertion_point(destructor:runtime.FilesystemUsage)
  SharedDtor();
}

void FilesystemUsage::SharedDtor() {
  if (this != internal_default_instance()) delete storage_id_;
  if (this != internal_default_instance()) delete used_bytes_;
  if (this != internal_default_instance()) delete inodes_used_;
}

void FilesystemUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilesystemUsage::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FilesystemUsage& FilesystemUsage::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsFilesystemUsage();
  return *internal_default_instance();
}

FilesystemUsage* FilesystemUsage::New(::google::protobuf::Arena* arena) const {
  FilesystemUsage* n = new FilesystemUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilesystemUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.FilesystemUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && storage_id_ != NULL) {
    delete storage_id_;
  }
  storage_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && used_bytes_ != NULL) {
    delete used_bytes_;
  }
  used_bytes_ = NULL;
  if (GetArenaNoVirtual() == NULL && inodes_used_ != NULL) {
    delete inodes_used_;
  }
  inodes_used_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool FilesystemUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.FilesystemUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.StorageIdentifier storage_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storage_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.UInt64Value used_bytes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_used_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.UInt64Value inodes_used = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inodes_used()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.FilesystemUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.FilesystemUsage)
  return false;
#undef DO_
}

void FilesystemUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.FilesystemUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .runtime.StorageIdentifier storage_id = 2;
  if (this->has_storage_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->storage_id_, output);
  }

  // .runtime.UInt64Value used_bytes = 3;
  if (this->has_used_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->used_bytes_, output);
  }

  // .runtime.UInt64Value inodes_used = 4;
  if (this->has_inodes_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->inodes_used_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.FilesystemUsage)
}

::google::protobuf::uint8* FilesystemUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.FilesystemUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .runtime.StorageIdentifier storage_id = 2;
  if (this->has_storage_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->storage_id_, deterministic, target);
  }

  // .runtime.UInt64Value used_bytes = 3;
  if (this->has_used_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->used_bytes_, deterministic, target);
  }

  // .runtime.UInt64Value inodes_used = 4;
  if (this->has_inodes_used()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->inodes_used_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.FilesystemUsage)
  return target;
}

size_t FilesystemUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.FilesystemUsage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.StorageIdentifier storage_id = 2;
  if (this->has_storage_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storage_id_);
  }

  // .runtime.UInt64Value used_bytes = 3;
  if (this->has_used_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->used_bytes_);
  }

  // .runtime.UInt64Value inodes_used = 4;
  if (this->has_inodes_used()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->inodes_used_);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilesystemUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.FilesystemUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const FilesystemUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilesystemUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.FilesystemUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.FilesystemUsage)
    MergeFrom(*source);
  }
}

void FilesystemUsage::MergeFrom(const FilesystemUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.FilesystemUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_storage_id()) {
    mutable_storage_id()->::runtime::StorageIdentifier::MergeFrom(from.storage_id());
  }
  if (from.has_used_bytes()) {
    mutable_used_bytes()->::runtime::UInt64Value::MergeFrom(from.used_bytes());
  }
  if (from.has_inodes_used()) {
    mutable_inodes_used()->::runtime::UInt64Value::MergeFrom(from.inodes_used());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void FilesystemUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.FilesystemUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilesystemUsage::CopyFrom(const FilesystemUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.FilesystemUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilesystemUsage::IsInitialized() const {
  return true;
}

void FilesystemUsage::Swap(FilesystemUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilesystemUsage::InternalSwap(FilesystemUsage* other) {
  using std::swap;
  swap(storage_id_, other->storage_id_);
  swap(used_bytes_, other->used_bytes_);
  swap(inodes_used_, other->inodes_used_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilesystemUsage::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageFsInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageFsInfoResponse::kImageFilesystemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageFsInfoResponse::ImageFsInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFsInfoResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ImageFsInfoResponse)
}
ImageFsInfoResponse::ImageFsInfoResponse(const ImageFsInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      image_filesystems_(from.image_filesystems_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ImageFsInfoResponse)
}

void ImageFsInfoResponse::SharedCtor() {
  _cached_size_ = 0;
}

ImageFsInfoResponse::~ImageFsInfoResponse() {
  // @@protoc_insertion_point(destructor:runtime.ImageFsInfoResponse)
  SharedDtor();
}

void ImageFsInfoResponse::SharedDtor() {
}

void ImageFsInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageFsInfoResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageFsInfoResponse& ImageFsInfoResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsImageFsInfoResponse();
  return *internal_default_instance();
}

ImageFsInfoResponse* ImageFsInfoResponse::New(::google::protobuf::Arena* arena) const {
  ImageFsInfoResponse* n = new ImageFsInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageFsInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ImageFsInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_filesystems_.Clear();
  _internal_metadata_.Clear();
}

bool ImageFsInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ImageFsInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.FilesystemUsage image_filesystems = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_image_filesystems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ImageFsInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ImageFsInfoResponse)
  return false;
#undef DO_
}

void ImageFsInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ImageFsInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.FilesystemUsage image_filesystems = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_filesystems_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->image_filesystems(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ImageFsInfoResponse)
}

::google::protobuf::uint8* ImageFsInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ImageFsInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.FilesystemUsage image_filesystems = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_filesystems_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->image_filesystems(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ImageFsInfoResponse)
  return target;
}

size_t ImageFsInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ImageFsInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.FilesystemUsage image_filesystems = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->image_filesystems_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image_filesystems(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageFsInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ImageFsInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageFsInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageFsInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ImageFsInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ImageFsInfoResponse)
    MergeFrom(*source);
  }
}

void ImageFsInfoResponse::MergeFrom(const ImageFsInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ImageFsInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_filesystems_.MergeFrom(from.image_filesystems_);
}

void ImageFsInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ImageFsInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageFsInfoResponse::CopyFrom(const ImageFsInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ImageFsInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageFsInfoResponse::IsInitialized() const {
  return true;
}

void ImageFsInfoResponse::Swap(ImageFsInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageFsInfoResponse::InternalSwap(ImageFsInfoResponse* other) {
  using std::swap;
  image_filesystems_.InternalSwap(&other->image_filesystems_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageFsInfoResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerStatsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatsRequest::kContainerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatsRequest::ContainerStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatsRequest)
}
ContainerStatsRequest::ContainerStatsRequest(const ContainerStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container_id().size() > 0) {
    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatsRequest)
}

void ContainerStatsRequest::SharedCtor() {
  container_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ContainerStatsRequest::~ContainerStatsRequest() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatsRequest)
  SharedDtor();
}

void ContainerStatsRequest::SharedDtor() {
  container_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatsRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatsRequest& ContainerStatsRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsRequest();
  return *internal_default_instance();
}

ContainerStatsRequest* ContainerStatsRequest::New(::google::protobuf::Arena* arena) const {
  ContainerStatsRequest* n = new ContainerStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  container_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ContainerStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string container_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container_id().data(), static_cast<int>(this->container_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatsRequest.container_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatsRequest)
  return false;
#undef DO_
}

void ContainerStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsRequest.container_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->container_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatsRequest)
}

::google::protobuf::uint8* ContainerStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string container_id = 1;
  if (this->container_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container_id().data(), static_cast<int>(this->container_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsRequest.container_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->container_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatsRequest)
  return target;
}

size_t ContainerStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string container_id = 1;
  if (this->container_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatsRequest)
    MergeFrom(*source);
  }
}

void ContainerStatsRequest::MergeFrom(const ContainerStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.container_id().size() > 0) {

    container_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container_id_);
  }
}

void ContainerStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatsRequest::CopyFrom(const ContainerStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatsRequest::IsInitialized() const {
  return true;
}

void ContainerStatsRequest::Swap(ContainerStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatsRequest::InternalSwap(ContainerStatsRequest* other) {
  using std::swap;
  container_id_.Swap(&other->container_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatsRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerStatsResponse::InitAsDefaultInstance() {
  ::runtime::_ContainerStatsResponse_default_instance_._instance.get_mutable()->stats_ = const_cast< ::runtime::ContainerStats*>(
      ::runtime::ContainerStats::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatsResponse::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatsResponse::ContainerStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatsResponse)
}
ContainerStatsResponse::ContainerStatsResponse(const ContainerStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stats()) {
    stats_ = new ::runtime::ContainerStats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatsResponse)
}

void ContainerStatsResponse::SharedCtor() {
  stats_ = NULL;
  _cached_size_ = 0;
}

ContainerStatsResponse::~ContainerStatsResponse() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatsResponse)
  SharedDtor();
}

void ContainerStatsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete stats_;
}

void ContainerStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatsResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatsResponse& ContainerStatsResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsResponse();
  return *internal_default_instance();
}

ContainerStatsResponse* ContainerStatsResponse::New(::google::protobuf::Arena* arena) const {
  ContainerStatsResponse* n = new ContainerStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
  _internal_metadata_.Clear();
}

bool ContainerStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerStats stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatsResponse)
  return false;
#undef DO_
}

void ContainerStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStats stats = 1;
  if (this->has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stats_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatsResponse)
}

::google::protobuf::uint8* ContainerStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStats stats = 1;
  if (this->has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->stats_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatsResponse)
  return target;
}

size_t ContainerStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ContainerStats stats = 1;
  if (this->has_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stats_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatsResponse)
    MergeFrom(*source);
  }
}

void ContainerStatsResponse::MergeFrom(const ContainerStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stats()) {
    mutable_stats()->::runtime::ContainerStats::MergeFrom(from.stats());
  }
}

void ContainerStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatsResponse::CopyFrom(const ContainerStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatsResponse::IsInitialized() const {
  return true;
}

void ContainerStatsResponse::Swap(ContainerStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatsResponse::InternalSwap(ContainerStatsResponse* other) {
  using std::swap;
  swap(stats_, other->stats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatsResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListContainerStatsRequest::InitAsDefaultInstance() {
  ::runtime::_ListContainerStatsRequest_default_instance_._instance.get_mutable()->filter_ = const_cast< ::runtime::ContainerStatsFilter*>(
      ::runtime::ContainerStatsFilter::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListContainerStatsRequest::kFilterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListContainerStatsRequest::ListContainerStatsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainerStatsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListContainerStatsRequest)
}
ListContainerStatsRequest::ListContainerStatsRequest(const ListContainerStatsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_filter()) {
    filter_ = new ::runtime::ContainerStatsFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ListContainerStatsRequest)
}

void ListContainerStatsRequest::SharedCtor() {
  filter_ = NULL;
  _cached_size_ = 0;
}

ListContainerStatsRequest::~ListContainerStatsRequest() {
  // @@protoc_insertion_point(destructor:runtime.ListContainerStatsRequest)
  SharedDtor();
}

void ListContainerStatsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete filter_;
}

void ListContainerStatsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainerStatsRequest::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListContainerStatsRequest& ListContainerStatsRequest::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainerStatsRequest();
  return *internal_default_instance();
}

ListContainerStatsRequest* ListContainerStatsRequest::New(::google::protobuf::Arena* arena) const {
  ListContainerStatsRequest* n = new ListContainerStatsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListContainerStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && filter_ != NULL) {
    delete filter_;
  }
  filter_ = NULL;
  _internal_metadata_.Clear();
}

bool ListContainerStatsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListContainerStatsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerStatsFilter filter = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListContainerStatsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListContainerStatsRequest)
  return false;
#undef DO_
}

void ListContainerStatsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStatsFilter filter = 1;
  if (this->has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListContainerStatsRequest)
}

::google::protobuf::uint8* ListContainerStatsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListContainerStatsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerStatsFilter filter = 1;
  if (this->has_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListContainerStatsRequest)
  return target;
}

size_t ListContainerStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListContainerStatsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ContainerStatsFilter filter = 1;
  if (this->has_filter()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->filter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainerStatsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListContainerStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListContainerStatsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListContainerStatsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListContainerStatsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListContainerStatsRequest)
    MergeFrom(*source);
  }
}

void ListContainerStatsRequest::MergeFrom(const ListContainerStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListContainerStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filter()) {
    mutable_filter()->::runtime::ContainerStatsFilter::MergeFrom(from.filter());
  }
}

void ListContainerStatsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListContainerStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainerStatsRequest::CopyFrom(const ListContainerStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListContainerStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainerStatsRequest::IsInitialized() const {
  return true;
}

void ListContainerStatsRequest::Swap(ListContainerStatsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListContainerStatsRequest::InternalSwap(ListContainerStatsRequest* other) {
  using std::swap;
  swap(filter_, other->filter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListContainerStatsRequest::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerStatsFilter_LabelSelectorEntry_DoNotUse::ContainerStatsFilter_LabelSelectorEntry_DoNotUse() {}
ContainerStatsFilter_LabelSelectorEntry_DoNotUse::ContainerStatsFilter_LabelSelectorEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerStatsFilter_LabelSelectorEntry_DoNotUse::MergeFrom(const ContainerStatsFilter_LabelSelectorEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerStatsFilter_LabelSelectorEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[110];
}
void ContainerStatsFilter_LabelSelectorEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerStatsFilter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStatsFilter::kIdFieldNumber;
const int ContainerStatsFilter::kPodSandboxIdFieldNumber;
const int ContainerStatsFilter::kLabelSelectorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStatsFilter::ContainerStatsFilter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsFilter();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStatsFilter)
}
ContainerStatsFilter::ContainerStatsFilter(const ContainerStatsFilter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_selector_.MergeFrom(from.label_selector_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pod_sandbox_id().size() > 0) {
    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStatsFilter)
}

void ContainerStatsFilter::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ContainerStatsFilter::~ContainerStatsFilter() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStatsFilter)
  SharedDtor();
}

void ContainerStatsFilter::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContainerStatsFilter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStatsFilter::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStatsFilter& ContainerStatsFilter::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStatsFilter();
  return *internal_default_instance();
}

ContainerStatsFilter* ContainerStatsFilter::New(::google::protobuf::Arena* arena) const {
  ContainerStatsFilter* n = new ContainerStatsFilter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStatsFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStatsFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_selector_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pod_sandbox_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ContainerStatsFilter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStatsFilter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatsFilter.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pod_sandbox_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_sandbox_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatsFilter.pod_sandbox_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> label_selector = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ContainerStatsFilter_LabelSelectorEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerStatsFilter_LabelSelectorEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&label_selector_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatsFilter.LabelSelectorEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerStatsFilter.LabelSelectorEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStatsFilter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStatsFilter)
  return false;
#undef DO_
}

void ContainerStatsFilter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStatsFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsFilter.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsFilter.pod_sandbox_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pod_sandbox_id(), output);
  }

  // map<string, string> label_selector = 3;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatsFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatsFilter.LabelSelectorEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatsFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatsFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStatsFilter)
}

::google::protobuf::uint8* ContainerStatsFilter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStatsFilter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsFilter.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pod_sandbox_id().data(), static_cast<int>(this->pod_sandbox_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerStatsFilter.pod_sandbox_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pod_sandbox_id(), target);
  }

  // map<string, string> label_selector = 3;
  if (!this->label_selector().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatsFilter.LabelSelectorEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerStatsFilter.LabelSelectorEntry.value");
      }
    };

    if (deterministic &&
        this->label_selector().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->label_selector().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerStatsFilter_LabelSelectorEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(label_selector_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerStatsFilter_LabelSelectorEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->label_selector().begin();
          it != this->label_selector().end(); ++it) {
        entry.reset(label_selector_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStatsFilter)
  return target;
}

size_t ContainerStatsFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStatsFilter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> label_selector = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->label_selector_size());
  {
    ::google::protobuf::scoped_ptr<ContainerStatsFilter_LabelSelectorEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->label_selector().begin();
        it != this->label_selector().end(); ++it) {
      entry.reset(label_selector_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string pod_sandbox_id = 2;
  if (this->pod_sandbox_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pod_sandbox_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStatsFilter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStatsFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStatsFilter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStatsFilter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStatsFilter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStatsFilter)
    MergeFrom(*source);
  }
}

void ContainerStatsFilter::MergeFrom(const ContainerStatsFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStatsFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_selector_.MergeFrom(from.label_selector_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.pod_sandbox_id().size() > 0) {

    pod_sandbox_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pod_sandbox_id_);
  }
}

void ContainerStatsFilter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStatsFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStatsFilter::CopyFrom(const ContainerStatsFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStatsFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStatsFilter::IsInitialized() const {
  return true;
}

void ContainerStatsFilter::Swap(ContainerStatsFilter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStatsFilter::InternalSwap(ContainerStatsFilter* other) {
  using std::swap;
  label_selector_.Swap(&other->label_selector_);
  id_.Swap(&other->id_);
  pod_sandbox_id_.Swap(&other->pod_sandbox_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStatsFilter::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListContainerStatsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListContainerStatsResponse::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListContainerStatsResponse::ListContainerStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainerStatsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ListContainerStatsResponse)
}
ListContainerStatsResponse::ListContainerStatsResponse(const ListContainerStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stats_(from.stats_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:runtime.ListContainerStatsResponse)
}

void ListContainerStatsResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListContainerStatsResponse::~ListContainerStatsResponse() {
  // @@protoc_insertion_point(destructor:runtime.ListContainerStatsResponse)
  SharedDtor();
}

void ListContainerStatsResponse::SharedDtor() {
}

void ListContainerStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListContainerStatsResponse::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListContainerStatsResponse& ListContainerStatsResponse::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsListContainerStatsResponse();
  return *internal_default_instance();
}

ListContainerStatsResponse* ListContainerStatsResponse::New(::google::protobuf::Arena* arena) const {
  ListContainerStatsResponse* n = new ListContainerStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListContainerStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ListContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stats_.Clear();
  _internal_metadata_.Clear();
}

bool ListContainerStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ListContainerStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .runtime.ContainerStats stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ListContainerStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ListContainerStatsResponse)
  return false;
#undef DO_
}

void ListContainerStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ListContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.ContainerStats stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->stats(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ListContainerStatsResponse)
}

::google::protobuf::uint8* ListContainerStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ListContainerStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .runtime.ContainerStats stats = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stats_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->stats(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ListContainerStatsResponse)
  return target;
}

size_t ListContainerStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ListContainerStatsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .runtime.ContainerStats stats = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->stats_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->stats(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListContainerStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ListContainerStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListContainerStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListContainerStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ListContainerStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ListContainerStatsResponse)
    MergeFrom(*source);
  }
}

void ListContainerStatsResponse::MergeFrom(const ListContainerStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ListContainerStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
}

void ListContainerStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ListContainerStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListContainerStatsResponse::CopyFrom(const ListContainerStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ListContainerStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListContainerStatsResponse::IsInitialized() const {
  return true;
}

void ListContainerStatsResponse::Swap(ListContainerStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListContainerStatsResponse::InternalSwap(ListContainerStatsResponse* other) {
  using std::swap;
  stats_.InternalSwap(&other->stats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListContainerStatsResponse::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ContainerAttributes_LabelsEntry_DoNotUse::ContainerAttributes_LabelsEntry_DoNotUse() {}
ContainerAttributes_LabelsEntry_DoNotUse::ContainerAttributes_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerAttributes_LabelsEntry_DoNotUse::MergeFrom(const ContainerAttributes_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerAttributes_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[113];
}
void ContainerAttributes_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

ContainerAttributes_AnnotationsEntry_DoNotUse::ContainerAttributes_AnnotationsEntry_DoNotUse() {}
ContainerAttributes_AnnotationsEntry_DoNotUse::ContainerAttributes_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ContainerAttributes_AnnotationsEntry_DoNotUse::MergeFrom(const ContainerAttributes_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ContainerAttributes_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[114];
}
void ContainerAttributes_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ContainerAttributes::InitAsDefaultInstance() {
  ::runtime::_ContainerAttributes_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::runtime::ContainerMetadata*>(
      ::runtime::ContainerMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerAttributes::kIdFieldNumber;
const int ContainerAttributes::kMetadataFieldNumber;
const int ContainerAttributes::kLabelsFieldNumber;
const int ContainerAttributes::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerAttributes::ContainerAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerAttributes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerAttributes)
}
ContainerAttributes::ContainerAttributes(const ContainerAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::runtime::ContainerMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerAttributes)
}

void ContainerAttributes::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_ = NULL;
  _cached_size_ = 0;
}

ContainerAttributes::~ContainerAttributes() {
  // @@protoc_insertion_point(destructor:runtime.ContainerAttributes)
  SharedDtor();
}

void ContainerAttributes::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void ContainerAttributes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerAttributes::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerAttributes& ContainerAttributes::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerAttributes();
  return *internal_default_instance();
}

ContainerAttributes* ContainerAttributes::New(::google::protobuf::Arena* arena) const {
  ContainerAttributes* n = new ContainerAttributes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  annotations_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  _internal_metadata_.Clear();
}

bool ContainerAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerAttributes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerAttributes.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.ContainerMetadata metadata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ContainerAttributes_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerAttributes_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerAttributes.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerAttributes.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ContainerAttributes_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ContainerAttributes_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerAttributes.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "runtime.ContainerAttributes.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerAttributes)
  return false;
#undef DO_
}

void ContainerAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerAttributes.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->metadata_, output);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerAttributes_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerAttributes_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 4;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerAttributes_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerAttributes_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerAttributes)
}

::google::protobuf::uint8* ContainerAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "runtime.ContainerAttributes.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->metadata_, deterministic, target);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerAttributes_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerAttributes_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> annotations = 4;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "runtime.ContainerAttributes.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ContainerAttributes_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ContainerAttributes_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerAttributes)
  return target;
}

size_t ContainerAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<ContainerAttributes_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> annotations = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<ContainerAttributes_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .runtime.ContainerMetadata metadata = 2;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->metadata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerAttributes)
    MergeFrom(*source);
  }
}

void ContainerAttributes::MergeFrom(const ContainerAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  annotations_.MergeFrom(from.annotations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::runtime::ContainerMetadata::MergeFrom(from.metadata());
  }
}

void ContainerAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerAttributes::CopyFrom(const ContainerAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerAttributes::IsInitialized() const {
  return true;
}

void ContainerAttributes::Swap(ContainerAttributes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerAttributes::InternalSwap(ContainerAttributes* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  annotations_.Swap(&other->annotations_);
  id_.Swap(&other->id_);
  swap(metadata_, other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerAttributes::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContainerStats::InitAsDefaultInstance() {
  ::runtime::_ContainerStats_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::runtime::ContainerAttributes*>(
      ::runtime::ContainerAttributes::internal_default_instance());
  ::runtime::_ContainerStats_default_instance_._instance.get_mutable()->cpu_ = const_cast< ::runtime::CpuUsage*>(
      ::runtime::CpuUsage::internal_default_instance());
  ::runtime::_ContainerStats_default_instance_._instance.get_mutable()->memory_ = const_cast< ::runtime::MemoryUsage*>(
      ::runtime::MemoryUsage::internal_default_instance());
  ::runtime::_ContainerStats_default_instance_._instance.get_mutable()->writable_layer_ = const_cast< ::runtime::FilesystemUsage*>(
      ::runtime::FilesystemUsage::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContainerStats::kAttributesFieldNumber;
const int ContainerStats::kCpuFieldNumber;
const int ContainerStats::kMemoryFieldNumber;
const int ContainerStats::kWritableLayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContainerStats::ContainerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.ContainerStats)
}
ContainerStats::ContainerStats(const ContainerStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attributes()) {
    attributes_ = new ::runtime::ContainerAttributes(*from.attributes_);
  } else {
    attributes_ = NULL;
  }
  if (from.has_cpu()) {
    cpu_ = new ::runtime::CpuUsage(*from.cpu_);
  } else {
    cpu_ = NULL;
  }
  if (from.has_memory()) {
    memory_ = new ::runtime::MemoryUsage(*from.memory_);
  } else {
    memory_ = NULL;
  }
  if (from.has_writable_layer()) {
    writable_layer_ = new ::runtime::FilesystemUsage(*from.writable_layer_);
  } else {
    writable_layer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:runtime.ContainerStats)
}

void ContainerStats::SharedCtor() {
  ::memset(&attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&writable_layer_) -
      reinterpret_cast<char*>(&attributes_)) + sizeof(writable_layer_));
  _cached_size_ = 0;
}

ContainerStats::~ContainerStats() {
  // @@protoc_insertion_point(destructor:runtime.ContainerStats)
  SharedDtor();
}

void ContainerStats::SharedDtor() {
  if (this != internal_default_instance()) delete attributes_;
  if (this != internal_default_instance()) delete cpu_;
  if (this != internal_default_instance()) delete memory_;
  if (this != internal_default_instance()) delete writable_layer_;
}

void ContainerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContainerStats::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContainerStats& ContainerStats::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsContainerStats();
  return *internal_default_instance();
}

ContainerStats* ContainerStats::New(::google::protobuf::Arena* arena) const {
  ContainerStats* n = new ContainerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContainerStats::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.ContainerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
  if (GetArenaNoVirtual() == NULL && memory_ != NULL) {
    delete memory_;
  }
  memory_ = NULL;
  if (GetArenaNoVirtual() == NULL && writable_layer_ != NULL) {
    delete writable_layer_;
  }
  writable_layer_ = NULL;
  _internal_metadata_.Clear();
}

bool ContainerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.ContainerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .runtime.ContainerAttributes attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.CpuUsage cpu = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.MemoryUsage memory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.FilesystemUsage writable_layer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_writable_layer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.ContainerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.ContainerStats)
  return false;
#undef DO_
}

void ContainerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.ContainerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerAttributes attributes = 1;
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->attributes_, output);
  }

  // .runtime.CpuUsage cpu = 2;
  if (this->has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cpu_, output);
  }

  // .runtime.MemoryUsage memory = 3;
  if (this->has_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->memory_, output);
  }

  // .runtime.FilesystemUsage writable_layer = 4;
  if (this->has_writable_layer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->writable_layer_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.ContainerStats)
}

::google::protobuf::uint8* ContainerStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.ContainerStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .runtime.ContainerAttributes attributes = 1;
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->attributes_, deterministic, target);
  }

  // .runtime.CpuUsage cpu = 2;
  if (this->has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->cpu_, deterministic, target);
  }

  // .runtime.MemoryUsage memory = 3;
  if (this->has_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->memory_, deterministic, target);
  }

  // .runtime.FilesystemUsage writable_layer = 4;
  if (this->has_writable_layer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->writable_layer_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.ContainerStats)
  return target;
}

size_t ContainerStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.ContainerStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.ContainerAttributes attributes = 1;
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->attributes_);
  }

  // .runtime.CpuUsage cpu = 2;
  if (this->has_cpu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cpu_);
  }

  // .runtime.MemoryUsage memory = 3;
  if (this->has_memory()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->memory_);
  }

  // .runtime.FilesystemUsage writable_layer = 4;
  if (this->has_writable_layer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->writable_layer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContainerStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.ContainerStats)
  GOOGLE_DCHECK_NE(&from, this);
  const ContainerStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContainerStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.ContainerStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.ContainerStats)
    MergeFrom(*source);
  }
}

void ContainerStats::MergeFrom(const ContainerStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.ContainerStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attributes()) {
    mutable_attributes()->::runtime::ContainerAttributes::MergeFrom(from.attributes());
  }
  if (from.has_cpu()) {
    mutable_cpu()->::runtime::CpuUsage::MergeFrom(from.cpu());
  }
  if (from.has_memory()) {
    mutable_memory()->::runtime::MemoryUsage::MergeFrom(from.memory());
  }
  if (from.has_writable_layer()) {
    mutable_writable_layer()->::runtime::FilesystemUsage::MergeFrom(from.writable_layer());
  }
}

void ContainerStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.ContainerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContainerStats::CopyFrom(const ContainerStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.ContainerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContainerStats::IsInitialized() const {
  return true;
}

void ContainerStats::Swap(ContainerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContainerStats::InternalSwap(ContainerStats* other) {
  using std::swap;
  swap(attributes_, other->attributes_);
  swap(cpu_, other->cpu_);
  swap(memory_, other->memory_);
  swap(writable_layer_, other->writable_layer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContainerStats::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CpuUsage::InitAsDefaultInstance() {
  ::runtime::_CpuUsage_default_instance_._instance.get_mutable()->usage_core_nano_seconds_ = const_cast< ::runtime::UInt64Value*>(
      ::runtime::UInt64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CpuUsage::kTimestampFieldNumber;
const int CpuUsage::kUsageCoreNanoSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CpuUsage::CpuUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsCpuUsage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.CpuUsage)
}
CpuUsage::CpuUsage(const CpuUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_usage_core_nano_seconds()) {
    usage_core_nano_seconds_ = new ::runtime::UInt64Value(*from.usage_core_nano_seconds_);
  } else {
    usage_core_nano_seconds_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:runtime.CpuUsage)
}

void CpuUsage::SharedCtor() {
  ::memset(&usage_core_nano_seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&usage_core_nano_seconds_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

CpuUsage::~CpuUsage() {
  // @@protoc_insertion_point(destructor:runtime.CpuUsage)
  SharedDtor();
}

void CpuUsage::SharedDtor() {
  if (this != internal_default_instance()) delete usage_core_nano_seconds_;
}

void CpuUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuUsage::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CpuUsage& CpuUsage::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsCpuUsage();
  return *internal_default_instance();
}

CpuUsage* CpuUsage::New(::google::protobuf::Arena* arena) const {
  CpuUsage* n = new CpuUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CpuUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.CpuUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && usage_core_nano_seconds_ != NULL) {
    delete usage_core_nano_seconds_;
  }
  usage_core_nano_seconds_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CpuUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.CpuUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.UInt64Value usage_core_nano_seconds = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_usage_core_nano_seconds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.CpuUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.CpuUsage)
  return false;
#undef DO_
}

void CpuUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.CpuUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .runtime.UInt64Value usage_core_nano_seconds = 2;
  if (this->has_usage_core_nano_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->usage_core_nano_seconds_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.CpuUsage)
}

::google::protobuf::uint8* CpuUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.CpuUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .runtime.UInt64Value usage_core_nano_seconds = 2;
  if (this->has_usage_core_nano_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->usage_core_nano_seconds_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.CpuUsage)
  return target;
}

size_t CpuUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.CpuUsage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.UInt64Value usage_core_nano_seconds = 2;
  if (this->has_usage_core_nano_seconds()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->usage_core_nano_seconds_);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.CpuUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const CpuUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.CpuUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.CpuUsage)
    MergeFrom(*source);
  }
}

void CpuUsage::MergeFrom(const CpuUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.CpuUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_usage_core_nano_seconds()) {
    mutable_usage_core_nano_seconds()->::runtime::UInt64Value::MergeFrom(from.usage_core_nano_seconds());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void CpuUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.CpuUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuUsage::CopyFrom(const CpuUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.CpuUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuUsage::IsInitialized() const {
  return true;
}

void CpuUsage::Swap(CpuUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuUsage::InternalSwap(CpuUsage* other) {
  using std::swap;
  swap(usage_core_nano_seconds_, other->usage_core_nano_seconds_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CpuUsage::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MemoryUsage::InitAsDefaultInstance() {
  ::runtime::_MemoryUsage_default_instance_._instance.get_mutable()->working_set_bytes_ = const_cast< ::runtime::UInt64Value*>(
      ::runtime::UInt64Value::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryUsage::kTimestampFieldNumber;
const int MemoryUsage::kWorkingSetBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryUsage::MemoryUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_cri_2dapi_2eproto::InitDefaultsMemoryUsage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:runtime.MemoryUsage)
}
MemoryUsage::MemoryUsage(const MemoryUsage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_working_set_bytes()) {
    working_set_bytes_ = new ::runtime::UInt64Value(*from.working_set_bytes_);
  } else {
    working_set_bytes_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:runtime.MemoryUsage)
}

void MemoryUsage::SharedCtor() {
  ::memset(&working_set_bytes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&working_set_bytes_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

MemoryUsage::~MemoryUsage() {
  // @@protoc_insertion_point(destructor:runtime.MemoryUsage)
  SharedDtor();
}

void MemoryUsage::SharedDtor() {
  if (this != internal_default_instance()) delete working_set_bytes_;
}

void MemoryUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryUsage::descriptor() {
  ::protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MemoryUsage& MemoryUsage::default_instance() {
  ::protobuf_cri_2dapi_2eproto::InitDefaultsMemoryUsage();
  return *internal_default_instance();
}

MemoryUsage* MemoryUsage::New(::google::protobuf::Arena* arena) const {
  MemoryUsage* n = new MemoryUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryUsage::Clear() {
// @@protoc_insertion_point(message_clear_start:runtime.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && working_set_bytes_ != NULL) {
    delete working_set_bytes_;
  }
  working_set_bytes_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MemoryUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:runtime.MemoryUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .runtime.UInt64Value working_set_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_working_set_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:runtime.MemoryUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:runtime.MemoryUsage)
  return false;
#undef DO_
}

void MemoryUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:runtime.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .runtime.UInt64Value working_set_bytes = 2;
  if (this->has_working_set_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->working_set_bytes_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:runtime.MemoryUsage)
}

::google::protobuf::uint8* MemoryUsage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:runtime.MemoryUsage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .runtime.UInt64Value working_set_bytes = 2;
  if (this->has_working_set_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->working_set_bytes_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:runtime.MemoryUsage)
  return target;
}

size_t MemoryUsage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:runtime.MemoryUsage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .runtime.UInt64Value working_set_bytes = 2;
  if (this->has_working_set_bytes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->working_set_bytes_);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryUsage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:runtime.MemoryUsage)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryUsage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryUsage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:runtime.MemoryUsage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:runtime.MemoryUsage)
    MergeFrom(*source);
  }
}

void MemoryUsage::MergeFrom(const MemoryUsage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:runtime.MemoryUsage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_working_set_bytes()) {
    mutable_working_set_bytes()->::runtime::UInt64Value::MergeFrom(from.working_set_bytes());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void MemoryUsage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:runtime.MemoryUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryUsage::CopyFrom(const MemoryUsage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:runtime.MemoryUsage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryUsage::IsInitialized() const {
  return true;
}

void MemoryUsage::Swap(MemoryUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryUsage::InternalSwap(MemoryUsage* other) {
  using std::swap;
  swap(working_set_bytes_, other->working_set_bytes_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryUsage::GetMetadata() const {
  protobuf_cri_2dapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_cri_2dapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace runtime

// @@protoc_insertion_point(global_scope)
