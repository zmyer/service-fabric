###############################################################################
# Test: RGAppProvision.test
# Owners: apopadic, nipuzovi, yangli
# This test verifies correct behavior of application provisioning logic,
# for various RG resource configurations (through application manifest),
# i.e. verifying that image builder is not accepting invalid configurations
###############################################################################

### CLUSTER CONFIGURATION ###
votes 10 20 30
namingservice 1 1 1
cmservice 1 1
fmservice 1 1
cleantest

set LocalResourceManagerTestMode true

+10 cap=ServiceFabric:/_CPUCores:8,ServiceFabric:/_MemoryInMB:1024
+20 cap=ServiceFabric:/_CPUCores:8,ServiceFabric:/_MemoryInMB:1024
+30 cap=ServiceFabric:/_CPUCores:8,ServiceFabric:/_MemoryInMB:1024
verify

### DECLARATION OF VARIOUS APPLICATION TYPES WITH CPU ###
# Service package doesn't have resources and code package have negative value
app.add errorAppCpu1 AppCpu1 vRT
app.clear errorAppCpu1
app.servicepack errorAppCpu1 ServicePackageA version=vRT
app.servicetypes errorAppCpu1 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppCpu1 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=CpuShares;-100
app.codepack errorAppCpu1 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=CpuShares;100
app.upload errorAppCpu1

# Service package has negative value for CPU resource have valid shares
app.add errorAppCpu2 AppCpu2 vRT
app.clear errorAppCpu2
app.servicepack errorAppCpu2 ServicePackageA version=vRT resources=CPU,-2
app.servicetypes errorAppCpu2 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppCpu2 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=CpuShares;40
app.codepack errorAppCpu2 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=CpuShares;60
app.upload errorAppCpu2

# Service package has 0 resources, and code packages have equal share
app.add okAppCpu3 AppCpu3 vRT
app.clear okAppCpu3
app.servicepack okAppCpu3 ServicePackageA version=vRT resources=CPU,0
app.servicetypes okAppCpu3 ServicePackageA ServiceTypeA stateful persist
app.codepack okAppCpu3 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=CpuShares;100
app.codepack okAppCpu3 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=CpuShares;100
app.upload okAppCpu3 

### DECLARATION OF VARIOUS APPLICATION TYPES WITH MEMORY ###
# Service package doesn't have resources and one code package have negative value
app.add errorAppMem1 AppMem1 vRT
app.clear errorAppMem1
app.servicepack errorAppMem1 ServicePackageA version=vRT
app.servicetypes errorAppMem1 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppMem1 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;-512
app.codepack errorAppMem1 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.upload errorAppMem1

# Service package has negative resource value, and both packages have meaningful values
# Commented due to active bug: RDBug 9169682
app.add errorAppMem2 AppMem2 vRT
app.clear errorAppMem2
app.servicepack errorAppMem2 ServicePackageA version=vRT resources=MemoryInMB,-1024
app.servicetypes errorAppMem2 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppMem2 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.codepack errorAppMem2 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.upload errorAppMem2

# Service package has enough resources, but only one code package has valid value (>0)
app.add errorAppMem3 AppMem3 vRT
app.clear errorAppMem3
app.servicepack errorAppMem3 ServicePackageA version=vRT resources=MemoryInMB,1024
app.servicetypes errorAppMem3 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppMem3 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;0
app.codepack errorAppMem3 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.upload errorAppMem3

# Service package doesn't have resource, but both packages have meaningful values
app.add okAppMem4 AppMem4 vRT
app.clear okAppMem4
app.servicepack okAppMem4 ServicePackageA version=vRT
app.servicetypes okAppMem4 ServicePackageA ServiceTypeA stateful persist
app.codepack okAppMem4 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.codepack okAppMem4 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.upload okAppMem4

# Service package has resource smaller then sum of all packages
app.add okAppMem5 AppMem5 vRT
app.clear okAppMem5
app.servicepack okAppMem5 ServicePackageA version=vRT resources=MemoryInMB,512
app.servicetypes okAppMem5 ServicePackageA ServiceTypeA stateful persist
app.codepack okAppMem5 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.codepack okAppMem5 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;512
app.upload okAppMem5

# Service package has 3MB limit, which is not allowed.
app.add errorAppMem6 AppMem6 vRT
app.clear errorAppMem6
app.servicepack errorAppMem6 ServicePackageA version=vRT resources=MemoryInMB,3
app.servicetypes errorAppMem6 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppMem6 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;4
app.upload errorAppMem6

# Code package has 3MB limit, which is not allowed.
app.add errorAppMem7 AppMem7 vRT
app.clear errorAppMem7
app.servicepack errorAppMem7 ServicePackageA version=vRT resources=MemoryInMB,8
app.servicetypes errorAppMem7 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppMem7 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=MemoryInMB;3
app.upload errorAppMem7

# 2 service packages
app.add okAppCpuAndMemory AppCpuAndMemory8 vRT
app.clear okAppCpuAndMemory
app.servicepack okAppCpuAndMemory ServicePackageA version=vRT resources=CPU,2
app.servicetypes okAppCpuAndMemory ServicePackageA ServiceTypeA stateful persist
app.codepack okAppCpuAndMemory ServicePackageA CodeA1 types=ServiceTypeA version=vRT rgpolicies=CpuShares;40
app.codepack okAppCpuAndMemory ServicePackageA CodeA2 types=ServiceTypeA version=vRT rgpolicies=CpuShares;60
app.servicepack okAppCpuAndMemory ServicePackageB version=vRT resources=CPU,2,MemoryInMB,5000
app.servicetypes okAppCpuAndMemory ServicePackageB ServiceTypeB stateful persist
app.codepack okAppCpuAndMemory ServicePackageB CodeB1 types=ServiceTypeB version=vRT rgpolicies=CpuShares;40;MemoryInMB;2000
app.codepack okAppCpuAndMemory ServicePackageB CodeB2 types=ServiceTypeB version=vRT rgpolicies=CpuShares;60;MemoryInMB;3000
app.upload okAppCpuAndMemory

#Validation for subcores - cpu cannot be less than 10^-4
app.add errorAppCpu9 AppCpu9 vRT
app.clear errorAppCpu9
app.servicepack errorAppCpu9 ServicePackageA9 version=vRT resources=CPU,0.00009
app.servicetypes errorAppCpu9 ServicePackageA9 ServiceTypeA9 stateful persist
app.codepack errorAppCpu9 ServicePackageA9 CodeA9 types=ServiceTypeA9 version=vRT rgpolicies=CpuShares;100
app.codepack errorAppCpu9 ServicePackageA9 CodeB9 types=ServiceTypeA9 version=vRT rgpolicies=CpuShares;100
app.upload errorAppCpu9

# Validation for DiskQuotaInMB, cannot be negative number
app.add errorAppDiskQuota10 AppDiskQuota10 vRT
app.clear errorAppDiskQuota10
app.servicepack errorAppDiskQuota10 ServicePackageA version=vRT resources=DiskQuotaInMB,1024
app.servicetypes errorAppDiskQuota10 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppDiskQuota10 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=DiskQuotaInMB;-1
app.codepack errorAppDiskQuota10 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=DiskQuotaInMB;512
app.upload errorAppDiskQuota10

# Validation for KernelMemoryInMB, cannot be negative number
app.add errorAppKernelMem11 AppKernelMem11 vRT
app.clear errorAppKernelMem11
app.servicepack errorAppKernelMem11 ServicePackageA version=vRT resources=KernelMemoryInMB,512
app.servicetypes errorAppKernelMem11 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppKernelMem11 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=KernelMemoryInMB;-1
app.codepack errorAppKernelMem11 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=KernelMemoryInMB;256
app.upload errorAppKernelMem11

# Validation for ShmSizeInMB, cannot be negative number
app.add errorAppShmMem12 AppShmMem12 vRT
app.clear errorAppShmMem12
app.servicepack errorAppShmMem12 ServicePackageA version=vRT resources=ShmSizeInMB,512
app.servicetypes errorAppShmMem12 ServicePackageA ServiceTypeA stateful persist
app.codepack errorAppShmMem12 ServicePackageA CodeA types=ServiceTypeA version=vRT rgpolicies=ShmSizeInMB;-1
app.codepack errorAppShmMem12 ServicePackageA CodeB types=ServiceTypeA version=vRT rgpolicies=ShmSizeInMB;256
app.upload errorAppShmMem12


### PROVISION APPLICATION TYPES ###
provisionapp errorAppCpu1 ImageBuilderValidationError
provisionapp errorAppCpu2 ImageBuilderValidationError
provisionapp okAppCpu3
provisionapp errorAppMem1 ImageBuilderValidationError
provisionapp errorAppMem2 ImageBuilderValidationError
provisionapp errorAppMem3 ImageBuilderValidationError
provisionapp okAppMem4
provisionapp okAppMem5
provisionapp errorAppMem6 ImageBuilderValidationError
provisionapp errorAppMem7 ImageBuilderValidationError
provisionapp okAppCpuAndMemory
provisionapp errorAppCpu9 ImageBuilderValidationError
provisionapp errorAppDiskQuota10 ImageBuilderValidationError
provisionapp errorAppKernelMem11 ImageBuilderValidationError
provisionapp errorAppShmMem12 ImageBuilderValidationError
verify

### DROP PROVISIONED APPLICATION TYPES ###
unprovisionapp AppCpu3 vRT
unprovisionapp AppMem4 vRT
unprovisionapp AppMem5 vRT
unprovisionapp AppCpuAndMemory8 vRT
verify

!q