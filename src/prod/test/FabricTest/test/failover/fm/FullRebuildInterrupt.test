# This script downs the FM primary while it is doing a rebuild by
# putting FM in quorum loss and letting the FullRebuildWaitDuration expire.  After a new FM is 
# created and performing a rebuild, the test brings primary down.

set DummyPLBEnabled true
votes 40 50 60
cmservice 0 0
namingservice 1 4 1

set FullRebuildWaitDuration 10
set UserReplicaRestartWaitDuration 9999
set NamingOperationRetryTimeout 60
set FMPlacementConstraints fmservice==true

cleantest

# Use placement constraint to make sure 40 is chosen as primary

+40 nodeprops=fmservice:true
+50 
!wait

!waitforstate FM.Replica.Role.FMService.40 Primary

-50
+50 nodeprops=fmservice:true
+60 nodeprops=fmservice:true
!waitforstate FM.Replica.Role.FMService.50 Secondary
!waitforstate FM.Replica.Role.FMService.60 Secondary

# Add more nodes
#
+30 nodeprops=fmservice:true
+20 nodeprops=fmservice:true
+10 nodeprops=fmservice:true
+5 nodeprops=fmservice:true

verify

# Create a stateless service
#
createname fabric:/stateless
createservice fabric:/stateless CalculatorServiceType n 2 4

# Create a volatile stateful service
#
createname fabric:/volatile
createservice fabric:/volatile TestStoreServiceType y 1 3

# Create a persisted stateful service
#
createname fabric:/persisted
createservice fabric:/persisted TestPersistedStoreServiceType y 1 4 persist

verify

!waitforstate FM.Replica.Role.fabric:/volatile.60 Primary
!waitforstate FM.Replica.Role.fabric:/volatile.50 Secondary
!waitforstate FM.Replica.Role.fabric:/volatile.40 Secondary

!waitforstate FM.Replica.Role.fabric:/persisted.60 Primary
!waitforstate FM.Replica.Role.fabric:/persisted.50 Secondary
!waitforstate FM.Replica.Role.fabric:/persisted.40 Secondary
!waitforstate FM.Replica.Role.fabric:/persisted.30 Secondary

clientput fabric:/volatile  10 1DataVolatile
clientput fabric:/persisted 10 1DataPersisted
!wait
verify

# Disable ReplicaDown and NodeDown notifications to FM{M}
addbehavior b1 * * ReplicaUp
addbehavior b2 * * ChangeNotification


# Remove nodes 40, 30, 20, 10. This will result in quorum loss for the FM Service.
-40
-30
-20
-10

removebehavior b1
removebehavior b2

# Block LFUMUpload

addbehavior blu3 60 * LFUMUpload


!pause, 10
!waitforstate FM.Replica.Role.FMService.60 Primary

# Allow some time for the rebuild protocol to start
!pause, 30

# Now kill the new FM and wait for a new one
#
-60
!waitforstate FM.Replica.Role.FMService.50 Primary

+40 nodeprops=fmservice:true


# Re-allow LFUMUpload
#
removebehavior blu3

# Add the nodes back
#
+10 nodeprops=fmservice:true
+20 nodeprops=fmservice:true
+30 nodeprops=fmservice:true
+60 nodeprops=fmservice:true


!waitforstate FM.FT.QuorumLost.fabric:/volatile false
!waitforstate FM.FT.QuorumLost.fabric:/persisted false
verify

# Resolve service locations
#
resolve fabric:/stateless 100
resolve fabric:/volatile 100
resolve fabric:/persisted 100

verify

clientput fabric:/volatile  20 2DataVolatile
!wait

clientget fabric:/volatile  20 2DataVolatile
clientget fabric:/persisted 10 1DataPersisted
!wait 

# Delete services
#
deleteservice fabric:/stateless
deleteservice fabric:/volatile
deleteservice fabric:/persisted

!q
