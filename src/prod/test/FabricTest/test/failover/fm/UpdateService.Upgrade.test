#
# [owner] MMohsin
# [bug] 3556604
#
# This test case covers the scenario where the following sequence of events happen:
#
# 1. A service S1 is created with ServicePackageVersionInstance of i1.
# 2. The service gets upgraded and the new ServicePackageVersionInstance i2.
# 3. A new service S2 belonging to the same application is created. The ServicePackageVersionInstance is still i2 at
#    the FM; however, it is i4 at Naming.
# 4. UpdateService is called for service S2. The request message that comes from Naming to FM has the instance as i4.
# 5. Even with this ServicePackageVersionInstance mismatch, FM should still process the UpdateService message.
#

votes 10 20 30
fmservice 3 2
namingservice 1 3 2
cmservice 3 2
cleantest

set UpgradeStatusPollInterval 5

+10 ud=UD1
+20 ud=UD2
+30 ud=UD3
verify

#
# Application version 1.0
#
app.add version10 TestApp 1.0
app.clear version10
app.servicepack version10 ServicePackageA version=1.0
app.servicetypes version10 ServicePackageA ServiceTypeA stateful
app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA version=1.0
app.upload version10
provisionapp version10

#
# Application version 1.1
#
app.add version11 TestApp 1.1
app.clear version11
app.servicepack version11 ServicePackageA version=1.1
app.servicetypes version11 ServicePackageA ServiceTypeA stateful
app.codepack version11 ServicePackageA CodeA1 types=ServiceTypeA version=1.1
app.upload version11
provisionapp version11

# Create application version 1.0
createapp fabric:/MyApp TestApp 1.0
verify

# Create services
createservice fabric:/MyApp/Volatile1 ServiceTypeA y 1 3 appname=fabric:/MyApp
verify

# Update service before the start of upgrade
updateservice fabric:/MyApp/Volatile1 Stateful MinReplicaSetSize=2
!waitforstate FM.Service.MinReplicaSetSize.fabric:/MyApp/Volatile1 2
verify

#
# Perform application upgrade from version 1.0 to 1.1
#
upgradeapp fabric:/MyApp 1.1 Rolling upgrademode=manual

verifyupgradeapp fabric:/MyApp upgradedomains=UD1

# Update service during upgrade
updateservice fabric:/MyApp/Volatile1 Stateful MinReplicaSetSize=3
!waitforstate FM.Service.MinReplicaSetSize.fabric:/MyApp/Volatile1 3

verifyupgradeapp fabric:/MyApp upgradedomains=UD1
upgradeappmovenext fabric:/MyApp

verifyupgradeapp fabric:/MyApp upgradedomains=UD1,UD2
upgradeappmovenext fabric:/MyApp

verifyupgradeapp fabric:/MyApp upgradedomains=UD1,UD2,UD3

verify

# Update service after upgrade has completed
updateservice fabric:/MyApp/Volatile1 Stateful MinReplicaSetSize=1
!waitforstate FM.Service.MinReplicaSetSize.fabric:/MyApp/Volatile1 1
verify

# Create a new service after upgrade has completed
createservice fabric:/MyApp/Volatile2 ServiceTypeA y 1 3 appname=fabric:/MyApp
verify

# Update the newly created service
updateservice fabric:/MyApp/Volatile2 Stateful MinReplicaSetSize=2
!waitforstate FM.Service.MinReplicaSetSize.fabric:/MyApp/Volatile2 2
verify

-*

!q
