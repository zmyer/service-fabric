#
# [owner:hulyap]
# This test validates various Failover scenarios
#

set DummyPLBEnabled true
set UserReplicaRestartWaitDuration 100
set IsSingletonReplicaMoveAllowedDuringUpgrade false

votes 10 20 30
cmservice 0 0
namingservice 1 3 2
cleantest
+10
+20
+30
verify

+40
+50
+60
verify

#
# Scenario: Change role fails during swap primary on the old primary
# New primary dies
#
createname fabric:/persisted
createservice fabric:/persisted TestPersistedStoreServiceType y 1 3 persist

verify

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted.60 Primary
!waitforstate FM.Replica.Role.fabric:/persisted.50 Secondary
!waitforstate FM.Replica.Role.fabric:/persisted.40 Secondary

injectfailure 60 fabric:/persisted service.endchangerole
# trigger swap primary
swapprimary fabric:/persisted 60 50

# Verify 50 is selected as new Primary
!waitforstate FM.Replica.Role.fabric:/persisted.50 Primary
!waitforstate FM.Replica.Role.fabric:/persisted.60 Secondary

!pause 2

removeruntime 50 y

!pause 2

removefailure 60 fabric:/persisted service.endchangerole
!waitforstate RA.FT.LocalReplicaRole.fabric:/persisted.60 Primary

addruntime 50 y

!waitforstate FM.Replica.State.fabric:/persisted.60 Ready
!waitforstate FM.Replica.State.fabric:/persisted.50 Ready

verify

deleteservice fabric:/persisted
verify

#
# Scenario: Change role fails during swap primary on the new primary
# old primary dies
#

createname fabric:/persisted2
createservice fabric:/persisted2 TestPersistedStoreServiceType y 1 3 persist

verify

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted2.60 Primary
!waitforstate FM.Replica.Role.fabric:/persisted2.50 Secondary
!waitforstate FM.Replica.Role.fabric:/persisted2.40 Secondary

injectfailure 50 fabric:/persisted2 service.endchangerole
# trigger swap primary
swapprimary fabric:/persisted2 60 50

# Verify 50 is selected as new Primary
!waitforstate FM.Replica.Role.fabric:/persisted2.50 Primary
!waitforstate FM.Replica.Role.fabric:/persisted2.60 Secondary

!pause 2

removeruntime 60 y
!waitforstate RA.FT.LocalReplicaRole.fabric:/persisted2.50 Primary

addruntime 60 y

removefailure 50 fabric:/persisted2 service.endchangerole

!waitforstate FM.Replica.State.fabric:/persisted2.60 Ready
!waitforstate FM.Replica.State.fabric:/persisted2.50 Ready

verify

deleteservice fabric:/persisted2
verify

#
# While transitioning to I->S ChangeRole fails
# Primary dies
#

addbehavior b1 * 40 StartCopy
createname fabric:/persisted3
createservice fabric:/persisted3 TestPersistedStoreServiceType y 1 3 persist

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted3.60 Primary

!waitforstate RA.Replica.State.fabric:/persisted3.60.40 IB
!waitforstate FM.Replica.State.fabric:/persisted3.50 Ready
!waitforstate FM.FT.Reconfig.fabric:/persisted3 false

injectfailure 40 fabric:/persisted3 service.endchangerole

removebehavior b1

!waitforstate FM.Replica.State.fabric:/persisted3.40 Ready

removeruntime 60 y
!waitforstate FM.Replica.Role.fabric:/persisted3.50 Primary

!pause 5
addruntime 60 y

removefailure 40 fabric:/persisted3 service.endchangerole

verify

deleteservice fabric:/persisted3
verify

#
# While transitioning to I->S ChangeRole on replicator fails
#
#

addbehavior b1 40 * CreateReplicaReply
createname fabric:/persisted4
createservice fabric:/persisted4 TestPersistedStoreServiceType y 1 3 persist

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted4.60 Primary

!waitforstate RA.Replica.State.fabric:/persisted4.60.40 IC

!pause 5
injectfailure 40 fabric:/persisted4 replicator.endchangerole

removebehavior b1

!waitforstate FM.Replica.State.fabric:/persisted4.50 Ready

!pause 5
addruntime 60 y

removefailure 40 fabric:/persisted4 replicator.endchangerole

verify

deleteservice fabric:/persisted4
verify

#
# While transitioning to I->S ChangeRole on service fails
#
#

addbehavior b1 40 * CreateReplicaReply
createname fabric:/persisted5
createservice fabric:/persisted5 TestPersistedStoreServiceType y 1 3 persist

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted5.60 Primary

!waitforstate RA.Replica.State.fabric:/persisted5.60.40 IC

!pause 5
injectfailure 40 fabric:/persisted5 service.endchangerole

removebehavior b1

!waitforstate FM.Replica.State.fabric:/persisted5.50 Ready

!pause 5
addruntime 60 y

removefailure 40 fabric:/persisted5 service.endchangerole

verify

deleteservice fabric:/persisted5
verify

#
# Close comes while replica is in IC and RAP is executing Catchup
#

createname fabric:/persisted6
createservice fabric:/persisted6 TestPersistedStoreServiceType y 1 3 persist

verify

# Verify current replica set
!waitforstate FM.Replica.Role.fabric:/persisted6.60 Primary
!waitforstate FM.Replica.Role.fabric:/persisted6.50 Secondary
!waitforstate FM.Replica.Role.fabric:/persisted6.40 Secondary

addbehavior b1 * 40 ReplicationOperation

# Put some operations
clientput fabric:/persisted6 10 10Data1
clientput fabric:/persisted6 20 20Data1
!wait

verify
# trigger swap primary
removeruntime 60 y

# Verify 50 is selected as new Primary
!waitforstate FM.Replica.Role.fabric:/persisted6.50 Primary

addbehavior b2 50 * ReplicatorBuildIdleReplica
reportfault 50 fabric:/persisted6 transient
!pause 5

!waitforstate RA.Replica.State.fabric:/persisted6.50.50 IB
!waitforstate RA.FT.ReconfigStage.fabric:/persisted6.50 Phase2_Catchup 

deleteservice fabric:/persisted6
!wait

!pause 15
removebehavior b1
removebehavior b2
addruntime 60 y
verify

!q

