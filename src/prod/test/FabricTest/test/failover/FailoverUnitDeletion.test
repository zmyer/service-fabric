set PeriodicStateCleanupInterval 1
set DeletedFailoverUnitTombstoneDuration 2
set MinimumIntervalBetweenPeriodicStateCleanup 1
set FailoverUnitProxyCleanupInterval 5

set DummyPLBEnabled true
set UserReplicaRestartWaitDuration 100
votes 10 20 30
cmservice 0 0
namingservice 1 3 2
fmservice 3 1
cleantest
+10
+20
+30
verify

#
# Additional Messages - NodeUp.
#
+40
+50
+60
verify

#
# Test RAP cleanup
#
createservice fabric:/testrap TestStoreServiceType y 1 1
verify

deleteservice fabric:/testrap 
verify

!pause 30
checkiflfumpisempty 60

#
# Add a stateless service.  It will be placed on 60,50,40.
#

createservice fabric:/test0 CalculatorServiceType false 1 3 persist=false
verify

!waitforstate RA.FT.Exists.fabric:/test0.60 true
!waitforstate RA.FT.Exists.fabric:/test0.50 true
!waitforstate RA.FT.Exists.fabric:/test0.40 true

deleteservice fabric:/test0

!waitforstate RA.FT.Exists.fabric:/test0.60 false
!waitforstate RA.FT.Exists.fabric:/test0.50 false
!waitforstate RA.FT.Exists.fabric:/test0.40 false


#
# Add a persisted service.  It will be placed on 60,50,40.
# Additional Messages - CreateService, AddPrimary, AddReplica, DoReconfiguration, CreateReplica
#

createname fabric:/test1
createservice fabric:/test1 TestPersistedStoreServiceType y 1 3 persist
verify

!waitforstate RA.FT.Exists.fabric:/test1.60 true
!waitforstate RA.FT.Exists.fabric:/test1.50 true
!waitforstate RA.FT.Exists.fabric:/test1.40 true

deleteservice fabric:/test1

!waitforstate RA.FT.Exists.fabric:/test1.60 false
!waitforstate RA.FT.Exists.fabric:/test1.50 false
!waitforstate RA.FT.Exists.fabric:/test1.40 false

verify

# kill the node and bring it back up again
# the services should not be present in the RAFU

-60
+60

!waitforstate RA.FT.Exists.fabric:/test1.60 false
!waitforstate RA.FT.Exists.fabric:/test1.50 false
!waitforstate RA.FT.Exists.fabric:/test1.40 false

!waitforstate RA.FT.Exists.fabric:/test0.60 false
!waitforstate RA.FT.Exists.fabric:/test0.50 false
!waitforstate RA.FT.Exists.fabric:/test0.40 false

# wait for node to come up:
!wait

!q