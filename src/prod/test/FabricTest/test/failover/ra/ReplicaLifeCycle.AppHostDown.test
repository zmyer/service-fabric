#
# [owner] chuxin
# This script tests the scenarios AppHost keeps on failing during
# replica open or close. Appropriate health events should be reported in these cases.
#

votes 10

cleantest
fmservice 1 1
cmservice 1 1
namingservice 1 1 1

set ReconfigurationMessageRetryInterval 5
set ReplicaOpenFailureWarningReportThreshold 1
set ReplicaOpenFailureMaxRetryThreshold 3000
set ReplicaCloseFailureWarningReportThreshold 1
set ReplicaCloseFailureMaxRetryThreshold 3000
set DummyPLBEnabled true
set PlacementTimeLimit 5
set HealthOperationTimeout 5
set HealthReportSendInterval 3
set HealthReportRetrySendInterval 5
set HealthStoreCleanupInterval 1
set HealthStoreEntityWithoutSystemReportKeptInterval 5
set UseInternalHealthClient true

+10 nodeprops=system:true
verify

+40 nodeprops=system:false
verify

#####################################################
# Scenario 1: Replica Close
# AppHost down during replica close. Health events should
# be generated and cleared properly.
#####################################################
createservice fabric:/test1 TestPersistedStoreServiceType y 1 1 persist constraint=(system!=true)
verify

queryhealth replica replicaid=fabric:/test1#0#0 expectedhealthstate=ok

#Block Replica Close 
#RF Permanent to induce drop and verify that RA has received the intent
addbehavior b0 * * ReplicaUp
addbehavior b1 * * ReplicaClose
reportfault 40 fabric:/test1 permanent

!waitforstate RA.Replica.State.fabric:/test1.40.40 ID

#Remove runtime and induce appHostDown
removeruntime 40 y

#Replica state should be warning
queryhealth replica replicaid=fabric:/test1#0#0 expectedhealthstate=warning

#add back runtime
#remove ReplicaClose
#block replica close reply to first verify that close is processed
addbehavior b2 * * ReplicaCloseReply
removebehavior b1

addruntime 40 y

#verify that the replica is still ID 
!waitforstate RA.Replica.IsUp.fabric:/test1.40.40 true
!waitforstate RA.Replica.State.fabric:/test1.40.40 ID

removebehavior b2

#replica should get closed
!waitforstate RA.FT.State.fabric:/test1.40 Closed

#remove replica dropped block
removebehavior b0
verify

deleteservice fabric:/test1
verify

#####################################################
# Scenario 2: Replica Open Volatile
# AppHost down during replica open. Health events should
# be generated and cleared properly.
#####################################################

addbehavior b1 * * ReplicaOpen

createservice fabric:/test2 TestStoreServiceType y 1 1 constraint=(system!=true)

!waitforstate FM.Replica.State.fabric:/test2.40 InBuild

#Inital health report should be OK
queryhealth replica replicaid=fabric:/test2#0#0 expectedhealthstate=ok

#Remove runtime to induce appHost down
removebehavior b1
removeruntime 40 y

queryhealth replica replicaid=fabric:/test2#0#0 expectedhealthstate=warning

addruntime 40 y

queryhealth replica replicaid=fabric:/test2#0#0 expectedhealthstate=ok

verify

deleteservice fabric:/test2
verify

#####################################################
# Scenario 3: Replica Open SL
# AppHost down during replica open. Health events should
# be generated and cleared properly.
#####################################################

addbehavior b1 * * ReplicaOpen

createservice fabric:/test3 CalculatorServiceType n 1 1 constraint=(system!=true)

!waitforstate FM.Replica.State.fabric:/test3.40 InBuild

#Inital health report should be OK
queryhealth replica replicaid=fabric:/test3#0#0 expectedhealthstate=ok

#Remove runtime to induce appHost down
removebehavior b1
removeruntime 40 n

queryhealth replica replicaid=fabric:/test3#0#0 expectedhealthstate=warning

addruntime 40 n

queryhealth replica replicaid=fabric:/test3#0#0 expectedhealthstate=ok

verify

deleteservice fabric:/test3
verify

#####################################################
# Scenario 4: Replica Open SP
# AppHost down during replica open. Health events should
# be generated and cleared properly.
#####################################################

addbehavior b1 * * ReplicaOpen

createservice fabric:/test4 TestStoreServiceType y 1 1 persisted constraint=(system!=true)

!waitforstate FM.Replica.State.fabric:/test4.40 InBuild

#Inital health report should be OK
queryhealth replica replicaid=fabric:/test4#0#0 expectedhealthstate=ok

#Remove runtime to induce appHost down
removebehavior b1
removeruntime 40 y

queryhealth replica replicaid=fabric:/test4#0#0 expectedhealthstate=warning

addruntime 40 y

queryhealth replica replicaid=fabric:/test4#0#0 expectedhealthstate=ok

verify

deleteservice fabric:/test4
verify

#####################################################
# Scenario 5: App host down during S/N reconfig will cause retry
#####################################################
+20 nodeprops=system:false
+30 nodeprops=system:false
verify

createservice fabric:/test5 TestPersistedStoreServiceType y 1 2 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicaClose
movesecondary fabric:/test5 30 20

!waitforstate RA.Replica.State.fabric:/test5.30.30 ID

removeruntime 30 y

queryhealth replica replicaid=fabric:/test5#0#1 expectedhealthstate=warning

removebehavior b1
addruntime 30 y
verify

deleteservice fabric:/test5
verify

-30
-20
verify

#####################################################
# Scenario 6: App host down during delete.
#####################################################
set ReplicaDeleteFailureWarningReportThreshold 1
set ReplicaDeleteFailureMaxRetryThreshold 3000

createservice fabric:/test6 TestPersistedStoreServiceType y 1 1 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicaClose
deleteservice fabric:/test6 errors=Timeout

!waitforstate RA.FT.LocalReplicaDeleted.fabric:/test6.40 true
removeruntime 40 y

queryhealth replica replicaid=fabric:/test6#0#0 expectedhealthstate=warning

addruntime 40 y
removebehavior b1

deleteservice fabric:/test6 errors=UserServiceNotFound
verify

#####################################################
# Scenario 7: App host down during node deactivate
# will not cause retry, deactivate will complete
#####################################################
+30 nodeprops=system:false
verify 

createservice fabric:/test7 TestPersistedStoreServiceType y 1 2 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicaClose
addbehavior b2 * * ReplicaCloseReply
addbehavior b3 * * StatefulServiceReopenReply

DeactivateNode 30 Restart

!waitforstate RA.FT.LocalReplicaClosePending.fabric:/test7.30 true

removebehavior b1
removebehavior b2
removebehavior b3

removeruntime 30 y

!waitforstate FM.Node.DeactivationStatus.30 DeactivationComplete

addruntime 30 y

deleteservice fabric:/test7
verify

-30
verify

#####################################################
# Scenario 8: Replica Open 
# AppHost down during replica open. Drop threshold hit
# and replica aborted.
#####################################################

set ReplicaOpenFailureWarningReportThreshold 5
set ReplicaOpenFailureMaxRetryThreshold 1

addbehavior b1 * * ReplicaOpen

createservice fabric:/test8 TestStoreServiceType y 1 1 persisted constraint=(system!=true)

!waitforstate FM.Replica.State.fabric:/test8.40 InBuild

#Inital health report should be OK
queryhealth replica replicaid=fabric:/test8#0#0 expectedhealthstate=ok

#Remove runtime to induce appHost down
removeruntime 40 y
removebehavior b1

!waitforstate RA.FT.State.fabric:/test8.40 Closed

addruntime 40 y

deleteservice fabric:/test8
verify

#####################################################
# Scenario 9: Replica Close 
# AppHost down during replica Close. Drop threshold hit
# and replica aborted.
#####################################################
set ReplicaCloseFailureWarningReportThreshold 5
set ReplicaCloseFailureMaxRetryThreshold 1

createservice fabric:/test9 TestPersistedStoreServiceType y 1 1 persist constraint=(system!=true)
verify

queryhealth replica replicaid=fabric:/test9#0#0 expectedhealthstate=ok

#Block Replica Close 
#RF Permanent to induce drop and verify that RA has received the intent
addbehavior b0 * * ReplicaUp
addbehavior b1 * * ReplicaClose
reportfault 40 fabric:/test9 permanent

!waitforstate RA.Replica.State.fabric:/test9.40.40 ID

#Remove runtime and induce appHostDown
removeruntime 40 y

#replica should get closed
!waitforstate RA.FT.State.fabric:/test9.40 Closed

removebehavior b0
removebehavior b1

addruntime 40 y

verify

deleteservice fabric:/test9
verify

#####################################################
# Scenario 10: Replica Close 
# AppHost down during app upgrade will not cause retry.
#####################################################

# Application version 1.0
app.add version10 TestApp 1.0
app.clear version10
app.servicepack version10 ServicePackageA version=1.0
app.servicetypes version10 ServicePackageA ServiceTypeA1 stateful persist
app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.reqservices version10 ServiceA1 ServiceTypeA1 stateful partition=1 replica=1
app.upload version10

# Application version 1.1. Upgraded vode package
app.add version11 TestApp 1.1 version10

app.servicepack version11 ServicePackageA version=1.1
app.servicetypes version11 ServicePackageA ServiceTypeA1 stateful persist
app.codepack version11 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.1
app.reqservices version11 ServiceA1 ServiceTypeA1 stateful partition=1 replica=1
app.upload version11

# Provision application version 1.0
provisionapp version10

# Provision application version 1.1
provisionapp version11

# Create app v1
addbehavior b1 * * ReplicaOpen

createapp fabric:/app1 TestApp 1.0
!waitforstate RA.Replica.State.fabric:/app1/ServiceA1.40.40 IC
!waitforstate RA.FT.HasServiceTypeRegistration.fabric:/app1/ServiceA1.40 true

removebehavior b1

# block add primary so that we can verify that after the upgrade the replica was closed on the RA
addbehavior b2 * * StatefulServiceReopen

# block ReplicaClose
addbehavior b3 * * ReplicaClose

# Upgrade app v1->v2
upgradeapp fabric:/app1 1.1 Rolling

# Secondary replica will be built, before primary is swapped out
!waitforstate RA.Replica.State.fabric:/app1/ServiceA1.10.10 RD

# Apphost down. Close continue without retry
removeruntime 40 y
removebehavior b3

# the replica should have been closed on the node
!waitforstate RA.FT.State.fabric:/app1/ServiceA1.40 Closed

addruntime 40 y

#unblock messages so that the final verify can succeed
removebehavior b2

verify

#####################################################
# Scenario 11: Replica Open 
# AppHost down during replica open. No health report
# generated if failure count under warning threshold
#####################################################
set ReplicaOpenFailureWarningReportThreshold 10
set ReplicaOpenFailureMaxRetryThreshold 3000

addbehavior b1 * * ReplicaOpen

createservice fabric:/test11 TestStoreServiceType y 1 1 persisted constraint=(system!=true)

!waitforstate FM.Replica.State.fabric:/test11.40 InBuild

#Inital health report should be OK
queryhealth replica replicaid=fabric:/test11#0#0 expectedhealthstate=ok

#Remove runtime to induce appHost down
removeruntime 40 y
removebehavior b1

#verify no health report generated since current failure count under warning threshold
queryhealth replica replicaid=fabric:/test11#0#0 expectedhealthstate=ok

addruntime 40 y

queryhealth replica replicaid=fabric:/test11#0#0 expectedhealthstate=ok

verify

deleteservice fabric:/test11
verify

#####################################################
# Scenario 12: Replica Close 
# AppHost down during replica Close. No health report
# generated if failure count under warning threshold
#####################################################
set ReplicaCloseFailureWarningReportThreshold 10
set ReplicaCloseFailureMaxRetryThreshold 3000

createservice fabric:/test12 TestPersistedStoreServiceType y 1 1 persist constraint=(system!=true)
verify

queryhealth replica replicaid=fabric:/test12#0#0 expectedhealthstate=ok

#Block Replica Close 
#RF Permanent to induce drop and verify that RA has received the intent
addbehavior b0 * * ReplicaUp
addbehavior b1 * * ReplicaClose
reportfault 40 fabric:/test12 permanent

!waitforstate RA.Replica.State.fabric:/test12.40.40 ID

#Remove runtime and induce appHostDown
removeruntime 40 y

#Replica state should be ok since current failure count is under warning threshold
queryhealth replica replicaid=fabric:/test12#0#0 expectedhealthstate=ok

#add back runtime
#remove ReplicaClose
#block replica close reply to first verify that close is processed
addbehavior b2 * * ReplicaCloseReply
removebehavior b1

addruntime 40 y

#verify that the replica is still ID 
!waitforstate RA.Replica.IsUp.fabric:/test12.40.40 true
!waitforstate RA.Replica.State.fabric:/test12.40.40 ID

removebehavior b2

#replica should get closed
!waitforstate RA.FT.State.fabric:/test12.40 Closed

#remove replica dropped block
removebehavior b0
verify

deleteservice fabric:/test12
verify

#####################################################
# Scenario 13: Replica Reopen 
# AppHost down during replica reopen should go through
#####################################################
set ReplicaOpenFailureWarningReportThreshold 10
set ReplicaOpenFailureMaxRetryThreshold 3000

createservice fabric:/test13 TestPersistedStoreServiceType y 1 1 persist constraint=(system!=true)
verify

addbehavior b1 * * StatefulServiceReopenReply
reportfault 40 fabric:/test13 transient
!waitforstate RA.Replica.State.fabric:/test13.40.40 SB
!waitforstate RA.FT.LocalReplicaOpen.fabric:/test13.40 false

removebehavior b1
removeruntime 40 y

!waitforstate RA.FT.LocalReplicaOpen.fabric:/test13.40 false

addruntime 40 y

!waitforstate RA.FT.LocalReplicaOpen.fabric:/test13.40 true

!waitforstate RA.Replica.State.fabric:/test13.40.40 RD
!waitforstate FM.Replica.State.fabric:/test13.40 Ready
verify

deleteservice fabric:/test13
verify

#####################################################
# Scenario 14: App host down during close with ForceDelete
# Correct threshhold should be selected
#####################################################
set ReplicaDeleteFailureWarningReportThreshold 1
set ReplicaDeleteFailureMaxRetryThreshold 3000
set ReplicaCloseFailureWarningReportThreshold 3000
set ReplicaCloseFailureMaxRetryThreshold 5000

+20 nodeprops=system:false
verify 

createservice fabric:/test14 TestPersistedStoreServiceType y 1 2 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicaClose
deleteservice fabric:/test14 errors=Timeout

#Take down node 20 and bring it back – replica close mode will be ForceDelete
-20

+20 nodeprops=system:false

!waitforstate RA.Replica.State.fabric:/test14.20.20 ID
!waitforstate RA.Replica.IsUp.fabric:/test14.20.20 true

!waitforstate RA.FT.HasServiceTypeRegistration.fabric:/test14.20 true

!pause 10

removeruntime 20 y

queryhealth replica replicaid=fabric:/test14#0#1 expectedhealthstate=warning

removebehavior b1

addruntime 20 y

deleteservice fabric:/test14 errors=UserServiceNotFound
verify

-20
verify

#####################################################
# Scenario 15: App host down during close with Delete
# Node is deactivated after Delete happens
# Correct threshhold should be selected
#####################################################
set ReplicaDeleteFailureWarningReportThreshold 1
set ReplicaDeleteFailureMaxRetryThreshold 3000
set ReplicaCloseFailureWarningReportThreshold 3000
set ReplicaCloseFailureMaxRetryThreshold 5000

+20 nodeprops=system:false
verify 

createservice fabric:/test15 TestPersistedStoreServiceType y 1 2 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicaClose
deleteservice fabric:/test15 errors=Timeout

Deactivatenode 20 Restart
!waitforstate FM.Node.DeactivationIntent.20 Restart

Activatenode 20
!waitforstate FM.Node.DeactivationIntent.20 None
!waitforstate FM.Node.DeactivationStatus.20 None

!waitforstate RA.Replica.State.fabric:/test15.20.20 ID
!waitforstate RA.Replica.IsUp.fabric:/test15.20.20 true

!waitforstate RA.FT.HasServiceTypeRegistration.fabric:/test15.20 true

removeruntime 20 y

queryhealth replica replicaid=fabric:/test15#0#1 expectedhealthstate=warning

addruntime 20 y

removebehavior b1

deleteservice fabric:/test15 errors=UserServiceNotFound
verify

-20
verify

!q