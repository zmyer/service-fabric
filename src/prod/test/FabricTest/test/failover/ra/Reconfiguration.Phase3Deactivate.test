#
# [owner] aprameyr
# Test scenarios around Phase3_Deactivate
set DummyPLBEnabled true
set MinActionRetryIntervalPerReplica 0.5
set NodeUpRetryInterval 0.5
set ReconfigurationMessageRetryInterval 0.5
set FMPlacementConstraints system==true

votes 10 
cmservice 0 0
fmservice 1 1
namingservice 1 1 1
cleantest

+10 nodeprops=system:true
verify

+20 nodeprops=system:false
+30 nodeprops=system:false
+40 nodeprops=system:false
+50 nodeprops=system:false
+60 nodeprops=system:false
verify

#####################################################
# Scenario 2: Reconfiguration should not grant write status after read quorum of PC is deactivated 
# if there is no write quorum
######################################################
createservice fabric:/test2 TestPersistedStoreServiceType y 1 5 persist constraint=(system!=true)
verify

addbehavior b1 * * UpdateConfigurationReply
-30

!waitforstate RA.FT.ReconfigStage.fabric:/test2.60 Phase2_Catchup
!waitforstate RA.Replica.IsUp.fabric:/test2.60.30 false

#allow reconfig to proceed to deactivate but do nothing

addbehavior bx * * Deactivate
removebehavior b1
!waitforstate RA.FT.ReconfigStage.fabric:/test2.60 Phase3_Deactivate

-40
-50

!waitforstate RA.Replica.IsUp.fabric:/test2.60.50 false
!waitforstate RA.Replica.IsUp.fabric:/test2.60.40 false
removebehavior bx

#ra should be stuck in phase 3 deactivate because a read quorum of PC is down

!waitforstate RA.FT.ReconfigStage.fabric:/test2.60 Phase3_Deactivate

addbehavior b30 30 * CreateReplicaReply
addbehavior b40 40 * CreateReplicaReply
addbehavior b50 50 * CreateReplicaReply
addbehavior bdrr * * DoReconfigurationReply

#bring back one node (30)
#this will be read quorum of PC and RA should start sending UC message to RAP for EndReconfiguration
#the test must make sure that the write status is still No Write Quorum because CC does not have write quorum

+30 nodeprops=system:false
!waitforstate RA.FT.ReconfigStage.fabric:/test2.60 None

verifyreadwritestatus 60 fabric:/test2 Granted NoWriteQuorum
removebehavior bdrr

+40 nodeprops=system:false
+50 nodeprops=system:false

removebehavior b30
removebehavior b40
removebehavior b50
removebehavior bx
verify

deleteservice fabric:/test2
verify
#####################################################
# Scenario 4: Deactivate should wait for build if read quorum
# cannot be deactivated and replicas are IB
#####################################################

createservice fabric:/test4 TestPersistedStoreServiceType y 1 4 persist constraint=(system!=true)
verify

addbehavior b1 * * ReplicatorBuildIdleReplicaReply
addbehavior b2 * * Deactivate

-60

# bring to Phase2_Catchup with which will complete on 50 and 40
# then deactivate is stuck with a ready replica
# since build is blocked, restart 40 and have both 40 and 60 IB
# now wait to make sure deactivate is stuck
!waitforstate RA.FT.ReconfigStage.fabric:/test4.50 Phase3_Deactivate

reportfault 40 fabric:/test4 transient
reportfault 30 fabric:/test4 transient
!waitforstate RA.Replica.State.fabric:/test4.50.40 IB
!waitforstate RA.Replica.State.fabric:/test4.50.30 IB

!pause 10
!waitforstate RA.FT.ReconfigStage.fabric:/test4.50 Phase3_Deactivate

#restart both 40 and 30 again to test that restarting does not cause 
#message stage to get cleared
reportfault 40 fabric:/test4 transient
reportfault 30 fabric:/test4 transient

#verify still stuck in deactivate
!pause 10
!waitforstate RA.FT.ReconfigStage.fabric:/test4.50 Phase3_Deactivate

#after build idle block is removed the replicas will transition to ready
#after 40 gets deactivated. 50 will transition to activate
addbehavior b4 * 30 Deactivate
addbehavior b5 * * Activate
removebehavior b1
removebehavior b2

!waitforstate RA.FT.ReconfigStage.fabric:/test4.50 Phase4_Activate
removebehavior b5
removebehavior b4
verify

+60 nodeprops=system:false
verify

deleteservice fabric:/test4
verify

#####################################################
# Scenario 3: Deactivate should wait for create/build if read quorum
# cannot be deactivated and replicas are IB
# Deactivate will not wait for all IC/IB replicas
#####################################################

createservice fabric:/test3 TestPersistedStoreServiceType y 1 5 persist constraint=(system!=true)
verify

addbehavior b0 * * CreateReplica
addbehavior b1 * * ReplicatorBuildIdleReplicaReply
addbehavior b2 * * Deactivate
-60

!waitforstate RA.FT.ReconfigStage.fabric:/test3.50 Phase3_Deactivate
reportfault 40 fabric:/test3 transient
reportfault 30 fabric:/test3 transient
reportfault 20 fabric:/test3 transient

!waitforstate RA.Replica.State.fabric:/test3.50.40 IC
!waitforstate RA.Replica.State.fabric:/test3.50.30 IC
!waitforstate RA.Replica.State.fabric:/test3.50.20 IC

removebehavior b2

!pause 10
!waitforstate RA.FT.ReconfigStage.fabric:/test3.50 Phase3_Deactivate

#Keep 30, 20 in IC and transition 40 to IB 
#Deactivate should stay stuck
addbehavior b2 50 30 CreateReplica
addbehavior b3 50 20 CreateReplica
removebehavior b0

!waitforstate RA.Replica.State.fabric:/test3.50.40 IB
!waitforstate RA.Replica.State.fabric:/test3.50.30 IC
!waitforstate RA.Replica.State.fabric:/test3.50.20 IC

!pause 10
!waitforstate RA.FT.ReconfigStage.fabric:/test3.50 Phase3_Deactivate

#Remove the block for build idle and for 30 so that transition to phase4 happens 
removebehavior b1
removebehavior b2

!waitforstate RA.FT.ReconfigStage.fabric:/test3.50 Phase4_Activate
!pause 10

verifyreadwritestatus 50 fabric:/test3 Granted Granted

removebehavior b3
verify

+60 nodeprops=system:false
verify

deleteservice fabric:/test3
verify

#####################################################
# Scenario 3a: Deactivate should not wait for IB replica
#####################################################

createservice fabric:/test3a TestPersistedStoreServiceType y 1 5 persist  constraint=(system!=true)
verify

addbehavior b1 * * ReplicatorBuildIdleReplicaReply
addbehavior b2 * * UpdateConfigurationReply
-60

!waitforstate RA.FT.ReconfigStage.fabric:/test3a.50 Phase2_Catchup
reportfault 40 fabric:/test3a transient
reportfault 30 fabric:/test3a transient
reportfault 20 fabric:/test3a transient

!waitforstate RA.Replica.State.fabric:/test3a.50.40 IB
!waitforstate RA.Replica.State.fabric:/test3a.50.30 IB
!waitforstate RA.Replica.State.fabric:/test3a.50.20 IB

removebehavior b2
!waitforstate RA.FT.ReconfigStage.fabric:/test3a.50 Phase3_Deactivate

#after build idle block is removed the replicas will transition to ready
#after 40 gets deactivated. 50 will 
addbehavior b4 * 40 Deactivate
addbehavior b5 * * Activate
removebehavior b1

!waitforstate RA.FT.ReconfigStage.fabric:/test3a.50 Phase4_Activate

addbehavior b6 * * DoReconfigurationReply
removebehavior b5

!waitforstate RA.FT.ReconfigStage.fabric:/test3a.50 None
removebehavior b4
removebehavior b6
verify

+60 nodeprops=system:false
verify

deleteservice fabric:/test3a
verify

#####################################################
# Scenario 5: Deactivate should not wait for replicas pending remove from replicator
#####################################################

createservice fabric:/test5 TestPersistedStoreServiceType y 1 5 persist constraint=(system!=true)
verify

addbehavior b0 * * ReplicatorBuildIdleReplicaReply
addbehavior b1 * * Deactivate

-60

!waitforstate RA.FT.ReconfigStage.fabric:/test5.50 Phase3_Deactivate
reportfault 40 fabric:/test5 transient
reportfault 30 fabric:/test5 transient

!waitforstate RA.Replica.State.fabric:/test5.50.40 IB
!waitforstate RA.Replica.State.fabric:/test5.50.30 IB

!pause 10
!waitforstate RA.Replica.State.fabric:/test5.50.40 IB
!waitforstate RA.Replica.State.fabric:/test5.50.30 IB

addbehavior b2 * * ReplicatorRemoveIdleReplica

-40
removebehavior b0
removebehavior b1

!waitforstate RA.FT.ReconfigStage.fabric:/test5.50 Phase4_Activate
!pause 5
!waitforstate RA.FT.ReconfigStage.fabric:/test5.50 Phase4_Activate

removebehavior b2
verify

+40 nodeprops=system:false
+60 nodeprops=system:false
verify

deleteservice fabric:/test5
verify

#####################################################
# Scenario 7: Replica sees another deactivate if it 
# Restarts in phase3 deactivate and goes through build
#####################################################

createservice fabric:/test7 TestPersistedStoreServiceType y 1 5 persist constraint=(system!=true)
verify

addbehavior b1 * * UpdateConfigurationReply
-60

!waitforstate RA.FT.ReconfigStage.fabric:/test7.50 Phase2_Catchup

#restart 40 as well to get all the replicas to go to IB
addbehavior b2 * * ReplicatorBuildIdleReplicaReply
reportfault 40 fabric:/test7 transient
reportfault 30 fabric:/test7 transient
reportfault 20 fabric:/test7 transient

!waitforstate RA.Replica.State.fabric:/test7.50.40 IB
!waitforstate RA.Replica.State.fabric:/test7.50.30 IB
!waitforstate RA.Replica.State.fabric:/test7.50.20 IB

removebehavior b2
!waitforstate RA.Replica.State.fabric:/test7.50.40 RD
!waitforstate RA.Replica.State.fabric:/test7.50.30 RD
!waitforstate RA.Replica.State.fabric:/test7.50.20 RD

#move to phase3 deactivate and block deactivate reply from 40
addbehavior b3 40 * DeactivateReply
addbehavior bx * * ReplicaUp
removebehavior b1

!waitforstate RA.FT.ReconfigStage.fabric:/test7.50 Phase3_Deactivate
!waitforstate RA.Replica.MessageStage.fabric:/test7.50.40 RA
!waitforstate RA.Replica.MessageStage.fabric:/test7.50.30 N
!waitforstate RA.Replica.MessageStage.fabric:/test7.50.20 N

#now restart the two replicas again and force deactivate again

addbehavior b4 * * ReplicatorBuildIdleReplicaReply
reportfault 40 fabric:/test7 transient
reportfault 30 fabric:/test7 transient
reportfault 20 fabric:/test7 transient

!waitforstate RA.Replica.State.fabric:/test7.40.40 SB
!waitforstate RA.Replica.State.fabric:/test7.30.30 SB
!waitforstate RA.Replica.State.fabric:/test7.20.20 SB
removebehavior bx

!waitforstate RA.Replica.State.fabric:/test7.50.40 IB
!waitforstate RA.Replica.State.fabric:/test7.50.30 IB
!waitforstate RA.Replica.State.fabric:/test7.50.20 IB

#allow the builds to finish and 60 should have seen deactivate twice
#RA should complete the reconfiguration because 50,30,20 will form the read quorum which is deactivated
#and then 40 will be activated

removebehavior b4
!waitforstate RA.FT.ReconfigStage.fabric:/test7.50 None

removebehavior b3
removebehavior b4
verify

+60 nodeprops=system:false
verify

deleteservice fabric:/test7
verify

#####################################################
# Tests for slow replica
# RemoteReplicaProgressQueryWaitDuration is reduced
#####################################################

set RemoteReplicaProgressQueryWaitDuration 5

#####################################################
# Scenario 6: ToBeRestarted replicas are not considered for deactivate
#####################################################
createservice fabric:/test6 TestPersistedStoreServiceType y 1 5 persist  constraint=(system!=true)
verify

#block getlsn to 30 and restart 60
#with this the catchup quorum size should be 3 to replicator
addbehavior b0 * 30 GetLSN
addbehavior b1 * 30 Deactivate

reportfault 60 fabric:/test6 transient
!waitforstate RA.FT.ReconfigStage.fabric:/test6.50 Phase4_Activate

removebehavior b0
removebehavior b1
verify 

deleteservice fabric:/test6
verify


!q
