set RunAsPolicyEnabled true
set HealthReportSendInterval 0
set HealthReportRetrySendInterval 5
set LoadBalancingEnabled false
!setcfg Management.CleanupApplicationPackageOnProvisionSuccess=false

votes 10
namingservice 5 1 1
cleantest
+10 nodeprops=Prop1:1
+20 nodeprops=Prop1:2
+30 nodeprops=Prop1:3
+40 nodeprops=Prop1:4
+50 nodeprops=Prop1:5
verify

# verify that query requiring aggregated health doesnt fail when HM is not available
query getservicepartitionreplicalist PartitionId=00000000-0000-0000-0000-000000000001
query getservicepartitionreplicalist PartitionId=00000000-0000-0000-0000-000000001000

# verify that GetNodeList works when CM is not available.
query getnodelist

# bring down the cluster and then bring it up the cluster with CM and Infrastructure service
-10
-20
-30
-40
-50
cleantest
cmservice 3 1
infraservice 2 1

+10 nodeprops=Prop1:1
+20 nodeprops=Prop1:2
+30 nodeprops=Prop1:3
+40 nodeprops=Prop1:4
+50 nodeprops=Prop1:5

verify

# ----------------------------------------------------------------------
# Validate error codes on wrong input
# ----------------------------------------------------------------------

query GetApplicationTypePagedList MaxResults=-1 error=InvalidArgument
query GetApplicationTypePagedList MaxResults=-519 error=InvalidArgument
# number is greater than max of int64
query GetApplicationTypePagedList MaxResults=-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=wrong_token error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=wrong_token+1+3 error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=+ error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=+a error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=++ error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken=+++ error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={} error=InvalidArgument
# the format is correct but the values cannot be empty
query GetApplicationTypePagedList ContinuationToken={"Name":"TestApp","Version":""} error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={"Name":"","Version":"1.0"} error=InvalidArgument
# missing the "Version" field in the json object
query GetApplicationTypePagedList ContinuationToken={"Name":"TestApp"} error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={"Name":"Te+stApp"} error=InvalidArgument
# json object within json object
query GetApplicationTypePagedList ContinuationToken={{"Name":"TestApp","Version":"1.0"}} error=InvalidArgument
# extra field in json object test below returns success, because the json deserializer will ignore the extra field
# query GetApplicationTypePagedList ContinuationToken={"Name":"TestApp","Version":"1.0","extra":"extra"} error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={"Name":"TestApp","WrongField":"1.0"} error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={"blah"} error=InvalidArgument
query GetApplicationTypePagedList ContinuationToken={blah} error=InvalidArgument
query GetApplicationTypePagedList ExcludeApplicationParameters=not_a_bool error=InvalidArgument
query GetApplicationTypePagedList ExcludeApplicationParameters=booleaniamnot error=InvalidArgument
# Application type version can only be provided if an application type name is also provided
query GetApplicationTypePagedList ApplicationTypeVersion=TestApp error=InvalidArgument
query GetApplicationTypePagedList ApplicationTypeVersion=TestApp MaxResults=10 error=InvalidArgument

# nodeID doesn't exist
query getapplicationpagedlistdeployedonnode NodeName=nodeid:11 error=InvalidAddress
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=-1 error=InvalidArgument
# number is greater than max of int64
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 error=InvalidArgument
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 error=InvalidArgument
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=not_a_bool error=InvalidArgument
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=booleaniamnot error=InvalidArgument
# missing nodeId
query getapplicationpagedlistdeployedonnode error=InvalidArgument

# ----------------------------------------------------------------------
# Check empty queries
# ----------------------------------------------------------------------

# verify that GetApplicationList query does not fail when there are no applications
query GetApplicationList

# verify that GetApplicationTypeList query does not fail when there are no applicationTypes
query GetApplicationTypeList
query GetApplicationTypePagedList

# make sure that the correct results are returned when the cluster is empty
query GetApplicationTypePagedList expectempty=true
query getapplicationlistdeployedonnode NodeName=nodeid:10 expectempty=true
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 expectempty=true

# ----------------------------------------------------------------------
# Add
# ----------------------------------------------------------------------

#
# Application version 1.0
#
app.add version10 TestApp 1.0
app.clear version10

app.servicepack version10 ServicePackageA version=1.0
app.servicepack version10 ServicePackageB version=1.0
app.servicepack version10 ServicePackageC version=1.0

# ServiceTypeA1's metrics are such that it will not actually come up, since the metric M1 is not defined on any node
app.servicetypes version10 ServicePackageA ServiceTypeA1 stateful persist constraint=(Prop1==1) metrics=M1,zero,1,0
app.servicetypes version10 ServicePackageB ServiceTypeB1 stateful
app.servicetypes version10 ServicePackageC ServiceTypeC1 stateless

app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version10 ServicePackageB CodeB1 types=ServiceTypeB1 version=1.0
app.codepack version10 ServicePackageC CodeC1 types=ServiceTypeC1 version=1.0

app.reqservices version10 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version10 ServiceB1 ServiceTypeB1 stateful partition=1 replica=3
app.reqservices version10 ServiceC1 ServiceTypeC1 stateless partition=1 replica=3
app.parameters version10 PartitionCount:3
app.servicetemplate version10 ServiceTypeC1 stateless partition=[PartitionCount] instance=3

app.upload version10

#

#
# Provision application version 1.0
#
provisionapp version10

createapp fabric:/app1/query_test TestApp 1.0 appparam=PartitionCount:2
verify

#
# Add a ad-hoc stateful service
#

#With 4 partitions and 7 Replicas there is not enough space to place these on 5 nodes
createname fabric:/test1
createservice fabric:/test1 TestStoreServiceType y 4 7
verify

#
# Add a ad-hoc stateless service
#
createname fabric:/stateless
createservice fabric:/stateless CalculatorServiceType n 1 -1
verify

# ----------------------------------------------------------------------
# Temporary create and delete
# ----------------------------------------------------------------------

# create a service
# This is added here to test that get deployed application list works right after a service has been deleted
createapp fabric:/app1/query_test_deployed_service TestApp 1.0 appparam=PartitionCount:2
createservice fabric:/app1/query_test_deployed_service/s1 ServiceTypeA1 y 1 5 appname=fabric:/app1/query_test_deployed_service servicePackageActivationMode=SharedProcess persist=true
createservice fabric:/app1/query_test_deployed_service/s2 ServiceTypeB1 y 1 5 appname=fabric:/app1/query_test_deployed_service servicePackageActivationMode=SharedProcess
createservice fabric:/app1/query_test_deployed_service/s3 ServiceTypeC1 n 1 -1 appname=fabric:/app1/query_test_deployed_service servicePackageActivationMode=SharedProcess

!pause 40

deleteservice fabric:/app1/query_test_deployed_service/s1
deleteservice fabric:/app1/query_test_deployed_service/s2
deleteservice fabric:/app1/query_test_deployed_service/s3
deleteapp fabric:/app1/query_test_deployed_service

# ----------------------------------------------------------------------
# Test
# ----------------------------------------------------------------------

# All applications should be deployed to nodeid:10
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify \
    ApplicationName=fabric:/app1/query_test,\
    ApplicationTypeName=TestApp,\
    DeploymentStatus=Active,\
    HealthState=ok

# One line for manual testing purposes
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test IncludeHealthState=true verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test IncludeHealthState=true verify \
    ApplicationName=fabric:/app1/query_test,\
    ApplicationTypeName=TestApp,\
    DeploymentStatus=Active,\
    HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/doesnt_exist expectempty=true

# One line for manual testing purposes
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=unknown

# One line for manual testing purposes
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok

# old query doesn't have parallel query stuff - healthState should be unknown
query getapplicationlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=unknown

# Query health to make sure reports for app & services are received by HM -- Warning on ServiceA1 by the PLB since it's not placed
queryhealth application appname=fabric:/app1/query_test expectedhealthstate=warning expectedstates=services-3
queryhealth service servicename=fabric:/app1/query_test/ServiceA1 expectedhealthstate=warning
queryhealth service servicename=fabric:/app1/query_test/ServiceC1 expectedhealthstate=ok
queryhealth service servicename=fabric:/app1/query_test/ServiceB1 expectedhealthstate=ok
#With 4 partitions and 7 Replicas there is not enough space to place fabric:/test1 on 5 nodes, so the service will have a warning
queryhealth service servicename=fabric:/test1 expectedhealthstate=warning
queryhealth service servicename=fabric:/stateless expectedhealthstate=ok

query getqueries
query getnodelist
query getapplicationtypelist
query getapplicationtypepagedlist
query getapplicationlist
query getapplicationlist

query getapplicationservicelist ApplicationName=fabric:/app1/query_test
query getsystemserviceslist ApplicationName=fabric:/System
query getapplicationservicelist
query getservicetypelist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0

# Query a stateful service partition
query getservicepartitionlist ServiceName=fabric:/System/NamingService
query getservicepartitionlist ServiceName=fabric:/System/FailoverManagerService
query getservicepartitionlist ServiceName=fabric:/app1/query_test/ServiceA1

# Query a stateful service partition by ID
# FM is configured with 7 replicas, not all can be placed, so it's in warning state
query getservicepartitionlist PartitionId=00000000-0000-0000-0000-000000000001 verify PartitionId=00000000-0000-0000-0000-000000000001,PartitionKind=FABRIC_SERVICE_PARTITION_KIND_SINGLETON,PartitionStatus=Ready,HealthState=warning
query getservicepartitionlist PartitionId=00000000-0000-0000-0000-000000002000 verify PartitionId=00000000-0000-0000-0000-000000002000,PartitionKind=FABRIC_SERVICE_PARTITION_KIND_SINGLETON,PartitionStatus=Ready,HealthState=ok
# get partitionlist where the service name does not correspond to the given partition id.
query getservicepartitionlist ServiceName=fabric:/System/NamingService PartitionId=00000000-0000-0000-0000-000000002000 expectempty=true
# get partitionlist where the service name is not a well formed URI
query getservicepartitionlist ServiceName=System/FailoverManagerService error=ServiceNotFound

# Query a stateful service partition replica
query getservicepartitionreplicalist PartitionId=00000000-0000-0000-0000-000000002000
query getservicepartitionreplicalist PartitionId=00000000-0000-0000-0000-000000000001
query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0>

# Query a stateless service partition
query getservicepartitionlist ServiceName=fabric:/stateless

# Query a stateless service partition instance
query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/stateless#0>

# Verify from FM
# The default services for query_test app have not been created yet. So the services query

query getsystemserviceslist ApplicationName=fabric:/System verifyfromfm

query getapplicationservicelist verifyfromfm

query getnodelist verifyfromfm

query getservicepartitionlist ServiceName=fabric:/app1/query_test/ServiceA1 verifyfromfm

query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0> verifyfromfm

query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/stateless#0> verifyfromfm

# Verify from input
query getapplicationlist verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;,HealthState=warning

query getapplicationtypelist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;

query getapplicationtypelist verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;

query getservicetypelist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0 verify \
ServiceTypeName=ServiceTypeA1,ServiceManifestVersion=1.0,HasPersistedState=true \
ServiceTypeName=ServiceTypeB1,ServiceManifestVersion=1.0,HasPersistedState=false \
ServiceTypeName=ServiceTypeC1,ServiceManifestVersion=1.0,UseImplicitHost=false

# Query Application Type Paged List

# get by app name
query getapplicationtypepagedlist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null

# get by app name and version
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0 verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1 expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=2.0 expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0.0 expectempty=true

# get by an app name that doesn't exist
query getapplicationtypepagedlist ApplicationTypeName=TestAppDoesntExist expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestAppDoesntExist ApplicationTypeVersion=1 expectempty=true

# get all results
query getapplicationtypepagedlist verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null

# Query deployed on node
query getapplicationlistdeployedonnode NodeName=nodeid:10 verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active
query getservicemanifestlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test verify ServiceManifestName=ServicePackageA,ServiceManifestVersion=1.0,DeploymentStatus=Active
query getservicetypelistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test ServiceManifestName=ServicePackageA verify ServiceTypeName=ServiceTypeA1,CodePackageName=CodeA1,ServiceManifestName=ServicePackageA
query getcodepackagelistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test ServiceManifestName=ServicePackageA verify CodePackageName=CodeA1,CodePackageVersion=1.0,ServiceManifestName=ServicePackageA,DeploymentStatus=Active,RunFrequencyInterval=0,EntryPointStatus=Started
query getservicereplicalistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test ServiceManifestName=ServicePackageA
query getservicereplicalistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app1/query_test ServiceManifestName=ServicePackageA verify PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0>

# Query adhoc services on node
query getservicetypelistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric: ServiceTypeName=CalculatorServiceType verify ServiceTypeName=CalculatorServiceType
query getservicereplicalistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric: PartitionId=<FM.FT.PartitionId.fabric:/stateless> verify PartitionId=<FM.FT.PartitionId.fabric:/stateless>

# Query with filter
query getapplicationlist ApplicationName=fabric:/app1/query_test verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;,HealthState=warning

query getservicetypelist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0 ServiceTypeName=ServiceTypeA1 verify \
ServiceTypeName=ServiceTypeA1,ServiceManifestVersion=1.0,HasPersistedState=true

query getapplicationservicelist ApplicationName=fabric:/app1/query_test ServiceName=fabric:/app1/query_test/ServiceA1 verify \
ServiceName=fabric:/app1/query_test/ServiceA1,Type=Stateful,ServiceTypeName=ServiceTypeA1,ServiceManifestVersion=1.0,HasPersistedState=true,HealthState=warning

query getapplicationservicelist ApplicationName=fabric:/app1/query_test ServiceTypeName=ServiceTypeA1 verify \
ServiceName=fabric:/app1/query_test/ServiceA1,Type=Stateful,ServiceTypeName=ServiceTypeA1,ServiceManifestVersion=1.0,HasPersistedState=true,HealthState=warning

query getapplicationservicelist ApplicationName=fabric:/app1/query_test ServiceName=fabric:/app1/query_test/ServiceC1 verify \
ServiceName=fabric:/app1/query_test/ServiceC1,Type=Stateless,ServiceTypeName=ServiceTypeC1,ServiceManifestVersion=1.0,HealthState=ok

query getapplicationservicelist ServiceName=fabric:/stateless verify \
ServiceName=fabric:/stateless,Type=Stateless,ServiceTypeName=CalculatorServiceType,ServiceManifestVersion=1.0:1.0

query getapplicationservicelist ServiceTypeName=CalculatorServiceType verify \
ServiceName=fabric:/stateless,Type=Stateless,ServiceTypeName=CalculatorServiceType,ServiceManifestVersion=1.0:1.0

query getnodelist NodeName=<FM.Node.NodeName.50> verify \
NodeName=<FM.Node.NodeName.50>,CodeVersion=<FM.Node.CodeVersion.50>,ConfigVersion=<FM.Node.ConfigVersion.50>,NodeStatus=<FM.Node.Status.50>,UpgradeDomain=<FM.Node.UpgradeDomain.50>,NodeType=<FM.Node.NodeType.50>,IpAddressOrFQDN=<FM.Node.IpAddressOrFQDN.50>,IsSeedNode=<FM.Node.IsSeedNode.50>,HealthState=ok

# Verify that MaxResults works for getnodelist
query getnodelist MaxResults=1 verify NodeName=<FM.Node.NodeName.10> ContinuationToken=10
query getnodelist MaxResults=2 verify NodeName=<FM.Node.NodeName.10> NodeName=<FM.Node.NodeName.20> ContinuationToken=20
query getnodelist MaxResults=1 ContinuationToken=10 verify NodeName=<FM.Node.NodeName.20> ContinuationToken=20
query getnodelist MaxResults=2 ContinuationToken=10 verify NodeName=<FM.Node.NodeName.20> NodeName=<FM.Node.NodeName.30> ContinuationToken=30
query getnodelist MaxResults=100 ContinuationToken=30 verify NodeName=<FM.Node.NodeName.40> NodeName=<FM.Node.NodeName.50>

query getnodelist MaxResults=100 verify \
NodeName=<FM.Node.NodeName.10> \
NodeName=<FM.Node.NodeName.20> \
NodeName=<FM.Node.NodeName.30> \
NodeName=<FM.Node.NodeName.40> \
NodeName=<FM.Node.NodeName.50>

#Update: As of RDBug 8673389:Test update for reporting unplaced replica health against partitions instead of services we now report this as a warning against the partition
query getservicepartitionlist ServiceName=fabric:/app1/query_test/ServiceA1 PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0> verify \
    PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0>,PartitionKind=<FM.FT.PartitionKind.fabric:/app1/query_test/ServiceA1#0>,PartitionLowKey=<FM.FT.PartitionLowKey.fabric:/app1/query_test/ServiceA1#0>,PartitionHighKey=<FM.FT.PartitionHighKey.fabric:/app1/query_test/ServiceA1#0>,TargetReplicaSetSize=<FM.FT.TargetReplicaSetSize.fabric:/app1/query_test/ServiceA1#0>,MinReplicaSetSize=<FM.FT.MinReplicaSetSize.fabric:/app1/query_test/ServiceA1#0>,PartitionStatus=<FM.FT.Status.fabric:/app1/query_test/ServiceA1#0>,HealthState=warning

query getservicepartitionlist PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0> verify \
    PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0>,PartitionKind=<FM.FT.PartitionKind.fabric:/app1/query_test/ServiceA1#0>,PartitionLowKey=<FM.FT.PartitionLowKey.fabric:/app1/query_test/ServiceA1#0>,PartitionHighKey=<FM.FT.PartitionHighKey.fabric:/app1/query_test/ServiceA1#0>,TargetReplicaSetSize=<FM.FT.TargetReplicaSetSize.fabric:/app1/query_test/ServiceA1#0>,MinReplicaSetSize=<FM.FT.MinReplicaSetSize.fabric:/app1/query_test/ServiceA1#0>,PartitionStatus=<FM.FT.Status.fabric:/app1/query_test/ServiceA1#0>,HealthState=warning

query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/stateless#0> InstanceId=<FM.Replica.InstanceId.fabric:/stateless#0#0> verify \
InstanceId=<FM.Replica.InstanceId.fabric:/stateless#0#0>,InstanceStatus=<FM.Replica.Status.fabric:/stateless#0#0>,ReplicaAddress=<FM.Replica.Address.fabric:/stateless#0#0>,NodeName=<FM.Replica.NodeName.fabric:/stateless#0#0>,HealthState=ok

query getsystemserviceslist ApplicationName=fabric:/System ServiceName=fabric:/System/ClusterManagerService verify \
ServiceName=fabric:/System/ClusterManagerService,Type=Stateful,ServiceTypeName=ClusterManagerServiceType,HasPersistedState=true,HealthState=ok

query getnodelist NodeName=nodeid:60
query getservicepartitionlist ServiceName=fabric:/app1/query_test/ServiceA1 PartitionId=<FM.FT.PartitionId.fabric:/app1/query_test/ServiceA1#0>
query getservicepartitionreplicalist PartitionId=<FM.FT.PartitionId.fabric:/stateless#0> InstanceId=0

query getsystemserviceslist ApplicationName=fabric:/System ServiceName=fabric:/CMService

# ----------------------------------------------------------------------
# Add
# ----------------------------------------------------------------------

#
# Create multiple applications and verify health
#
createapp fabric:/app2/query_test TestApp 1.0 appparam=PartitionCount:1
createapp fabric:/app3/query_test TestApp 1.0 appparam=PartitionCount:1
createapp fabric:/app4/query_test TestApp 1.0 appparam=PartitionCount:2
verify

#
# Application version 2.0 type TestApp2
#
app.add version20 TestApp2 2.0
app.clear version20

app.servicepack version20 ServicePackageA version=2.0
app.servicepack version20 ServicePackageB version=2.0
app.servicepack version20 ServicePackageC version=2.0

# ServiceTypeA1's metrics are such that it will not actually come up, since the metric M1 is not defined on any node
app.servicetypes version20 ServicePackageA ServiceTypeA1 stateful persist constraint=(Prop1==1) metrics=M1,zero,1,0
app.servicetypes version20 ServicePackageB ServiceTypeB1 stateful
app.servicetypes version20 ServicePackageC ServiceTypeC1 stateless

app.codepack version20 ServicePackageA CodeA1 types=ServiceTypeA1 version=2.0
app.codepack version20 ServicePackageB CodeB1 types=ServiceTypeB1 version=2.0
app.codepack version20 ServicePackageC CodeC1 types=ServiceTypeC1 version=2.0

app.reqservices version20 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version20 ServiceB1 ServiceTypeB1 stateful partition=1 replica=3
app.reqservices version20 ServiceC1 ServiceTypeC1 stateless partition=1 replica=3

app.parameters version20 PartitionCount:3
app.servicetemplate version20 ServiceTypeC1 stateless partition=[PartitionCount] instance=3

app.upload version20

#

#
# Provision application version 2.0
#
provisionapp version20

createapp fabric:/testapp2/query_test TestApp2 2.0 appparam=PartitionCount:2
verify

# ----------------------------------------------------------------------
# Test
# ----------------------------------------------------------------------

# Set a higher retry delay because the application deletion above may have not finished completely yet.
set QueryOperationRetryDelay 15
verify

# Verify MaxResults function of getapplicationlist
query GetApplicationList MaxResults=1 verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,HealthState=warning \
ContinuationToken=fabric:/app1/query_test

query GetApplicationList MaxResults=1 ContinuationToken=fabric:/testapp2/query_test expectempty=true

query GetApplicationList MaxResults=2 verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,HealthState=warning \
ContinuationToken=fabric:/app2/query_test

query GetApplicationList MaxResults=2 ContinuationToken=fabric:/testapp2/query_test expectempty=true

# verify health of deployed apps
# queryhealth deployedapplication nodeid=10 appname=fabric:/app1/query_test expectedhealthstate=ok

# Test applications deployed on node
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,DeploymentStatus=Active,HealthState=ok

# Set it back to the default
set QueryOperationRetryDelay 5

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app3/query_test IncludeHealthState=true verify \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app3/query_test verify \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=unknown

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/noSuchApp expectempty=true

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=1 IncludeHealthState=true verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ContinuationToken=fabric:/app1/query_test

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=1 ContinuationToken=fabric:/app1/query_test IncludeHealthState=true verify \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ContinuationToken=fabric:/app2/query_test

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=2 ContinuationToken=fabric:/app2/query_test IncludeHealthState=true verify \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ContinuationToken=fabric:/app4/query_test

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=2 ContinuationToken=fabric:/app4/query_test IncludeHealthState=true verify \
ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 MaxResults=20 IncludeHealthState=true IncludeHealthState=true verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ContinuationToken=fabric:/app1/query_test IncludeHealthState=true verify \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,DeploymentStatus=Active,HealthState=ok

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 verify ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=unknown

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/app4/query_test verify ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,HealthState=unknown

query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/IDontExist expectempty=true

queryhealthlist deployedapplications appname=fabric:/app1/query_test

# Test applications deployed on node with different health states
reporthealth deployedapplication nodeid=10 sequencenumber=1 healthstate=warning immediate=true appname=fabric:/app1/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=1 healthstate=warning immediate=true appname=fabric:/app2/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=1 healthstate=warning immediate=true appname=fabric:/app3/query_test
reporthealth deployedapplication nodeid=20 sequencenumber=1 healthstate=ok immediate=true appname=fabric:/app4/query_test
!pause 10
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=warning
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=warning
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=warning
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok

reporthealth deployedapplication nodeid=10 sequencenumber=2 healthstate=error immediate=true appname=fabric:/app1/query_test
reporthealth deployedapplication nodeid=20 sequencenumber=2 healthstate=error immediate=true appname=fabric:/app2/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=2 healthstate=warning immediate=true appname=fabric:/app3/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=2 healthstate=error immediate=true appname=fabric:/app4/query_test
!pause 10
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=error
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=warning
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=warning
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=error

# set verything back to ok
reporthealth deployedapplication nodeid=10 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app1/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app2/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app3/query_test
reporthealth deployedapplication nodeid=10 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app4/query_test
reporthealth deployedapplication nodeid=20 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app2/query_test
reporthealth deployedapplication nodeid=20 sequencenumber=3 healthstate=ok immediate=true appname=fabric:/app4/query_test
!pause 10
query getapplicationpagedlistdeployedonnode NodeName=nodeid:10 IncludeHealthState=true verify \
ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok \
ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,DeploymentStatus=Active,HealthState=ok

#queryhealth application appname=fabric:/app1/query_test expectedhealthstate=ok expectedstates=services-3
#queryhealth application appname=fabric:/app2/query_test expectedhealthstate=ok expectedstates=services-3
#queryhealth application appname=fabric:/app3/query_test expectedhealthstate=ok expectedstates=services-3
#queryhealth application appname=fabric:/app4/query_test expectedhealthstate=ok expectedstates=services-3

queryhealth application appname=fabric:/app1/query_test expectedhealthstate=warning expectedstates=services-3
queryhealth service servicename=fabric:/app1/query_test/ServiceA1 expectedhealthstate=warning
queryhealth service servicename=fabric:/app1/query_test/ServiceC1 expectedhealthstate=ok
queryhealth service servicename=fabric:/app1/query_test/ServiceB1 expectedhealthstate=ok

queryhealth application appname=fabric:/app2/query_test expectedhealthstate=warning expectedstates=services-3
queryhealth service servicename=fabric:/app2/query_test/ServiceA1 expectedhealthstate=warning
queryhealth service servicename=fabric:/app2/query_test/ServiceC1 expectedhealthstate=ok
queryhealth service servicename=fabric:/app2/query_test/ServiceB1 expectedhealthstate=ok

queryhealth application appname=fabric:/app3/query_test expectedhealthstate=warning expectedstates=services-3
queryhealth service servicename=fabric:/app3/query_test/ServiceA1 expectedhealthstate=warning
queryhealth service servicename=fabric:/app3/query_test/ServiceC1 expectedhealthstate=ok
queryhealth service servicename=fabric:/app3/query_test/ServiceB1 expectedhealthstate=ok

queryhealth application appname=fabric:/app4/query_test expectedhealthstate=warning expectedstates=services-3
queryhealth service servicename=fabric:/app4/query_test/ServiceA1 expectedhealthstate=warning
queryhealth service servicename=fabric:/app4/query_test/ServiceC1 expectedhealthstate=ok
queryhealth service servicename=fabric:/app4/query_test/ServiceB1 expectedhealthstate=ok

query getapplicationlist verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;,HealthState=warning
query getapplicationlist verify ApplicationName=fabric:/app2/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:1;,HealthState=warning
query getapplicationlist verify ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:1;,HealthState=warning
query getapplicationlist verify ApplicationName=fabric:/app4/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;,HealthState=warning

query getapplicationlist ApplicationTypeName=TestApp2 verify ApplicationName=fabric:/testapp2/query_test,ApplicationTypeName=TestApp2,ApplicationTypeVersion=2.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;
query getapplicationlist ApplicationTypeName=TestAp expectempty=true

# Query Application Type Paged List

# get by app name
query getapplicationtypepagedlist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null

query getapplicationtypepagedlist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,Status=Available,StatusDetails=null

# get by app name and version
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0 verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1 expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestApp ApplicationTypeVersion=1.0.0 expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestApp2 ApplicationTypeVersion=2.0 verify \
ApplicationTypeName=TestApp2,ApplicationTypeVersion=2.0,Status=Available,StatusDetails=null

# get by an app name that doesn't exist
query getapplicationtypepagedlist ApplicationTypeName=TestAppDoesntExist expectempty=true

# get all results
query getapplicationtypepagedlist verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available,StatusDetails=null

query getapplicationtypepagedlist ApplicationTypeName=TestApp2 verify \
ApplicationTypeName=TestApp2,ApplicationTypeVersion=2.0,Status=Available,StatusDetails=null

# Delete apps, verify the others are ok
deleteapp fabric:/app2/query_test
deleteapp fabric:/app4/query_test
verify

# Query Application Type Paged List

# get by app name
query getapplicationtypepagedlist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=PartitionCount:3;,Status=Available

# test query parameters
query getapplicationtypepagedlist ExcludeApplicationParameters=true verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,DefaultParameters=null,Status=Available

queryhealth application appname=fabric:/app2/query_test expectempty=false
query getapplicationlist verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:2;,HealthState=warning
query getapplicationlist verify ApplicationName=fabric:/app3/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:1;,HealthState=warning

# Set the replica tombstone to a high value so that the FT stays in ToBeDeleted state after deleting the service

set DroppedReplicaKeepDuration 500
set DeletedReplicaKeepDuration 500
set PeriodicStateCleanupScanInterval 500
deleteservice fabric:/stateless
verify

# Recreate the service
# format of createservice: <service name> <service type> <is stateful> <partition count> <instance count>
createservice fabric:/stateless CalculatorServiceType n 1 3
verify

# Query and validate the stateless service partition
query getservicepartitionlist ServiceName=fabric:/stateless verify \
PartitionId=<FM.FT.PartitionId.fabric:/stateless#0>,PartitionKind=<FM.FT.PartitionKind.fabric:/stateless#0>,InstanceCount=<FM.FT.TargetReplicaSetSize.fabric:/stateless#0>

# Reset the cleanup timeouts
set DroppedReplicaKeepDuration 5
set DeletedReplicaKeepDuration 5
set PeriodicStateCleanupScanInterval 15

# ----------------------------------------------------------------------
# Add
# ----------------------------------------------------------------------

#Test the application after upgrade
app.add version11 TestApp 1.1
app.clear version11

app.servicepack version11 ServicePackageA version=1.1
app.servicepack version11 ServicePackageB version=1.1
app.servicepack version11 ServicePackageC version=1.1

app.servicetypes version11 ServicePackageA ServiceTypeA1 stateful persist constraint=(Prop1==1) metrics=M1,zero,1,0
app.servicetypes version11 ServicePackageB ServiceTypeB1 stateful
app.servicetypes version11 ServicePackageC ServiceTypeC1 stateless

app.codepack version11 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.1
app.codepack version11 ServicePackageB CodeB1 types=ServiceTypeB1 version=1.1
app.codepack version11 ServicePackageC CodeC1 types=ServiceTypeC1 version=1.1

app.reqservices version11 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version11 ServiceB1 ServiceTypeB1 stateful partition=1 replica=3
app.reqservices version11 ServiceC1 ServiceTypeC1 stateless partition=1 replica=3

app.parameters version11 PartitionCount:3
app.servicetemplate version11 ServiceTypeC1 stateless partition=[PartitionCount] instance=3

app.upload version11

#
# Provision application version 1.1
#
provisionapp version11

# ----------------------------------------------------------------------
# Test
# ----------------------------------------------------------------------

#Turning Placement Warnings off and wait for them to expire so that the app can be upgraded
toggleverboseserviceplacementhealthreporting false
!pause 17

# Verify that the status is Upgrading immidiately after upgrade is called

upgradeapp fabric:/app1/query_test 1.1 Rolling replicacheck=5 appparam=PartitionCount:5
queryhealth application appname=fabric:/app1/query_test expectedhealthstate=ok
query getapplicationlist verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.0,ApplicationStatus=Upgrading,ApplicationParameters=PartitionCount:2;,HealthState=ok
verifyupgradeapp fabric:/app1/query_test

#Turning Placement Warnings one and wait for them to be filed
toggleverboseserviceplacementhealthreporting true
!pause 17

# Verify that the version and parameters change after upgrade
queryhealth application appname=fabric:/app1/query_test expectedhealthstate=warning
query getapplicationlist verify ApplicationName=fabric:/app1/query_test,ApplicationTypeName=TestApp,ApplicationTypeVersion=1.1,ApplicationStatus=Ready,ApplicationParameters=PartitionCount:5;,HealthState=warning

# Verify tombstone service does not show as ad-hoc service after app is deleted
deleteapp fabric:/app1/query_test
query getapplicationservicelist verify \
ServiceName=fabric:/stateless,Type=Stateless,ServiceTypeName=CalculatorServiceType,ServiceManifestVersion=1.0:1.0 \
ServiceName=fabric:/test1,Type=Stateful,ServiceTypeName=TestStoreServiceType,ServiceManifestVersion=1.0:1.0,HasPersistedState=false

#
# Test to make sure Internal cluster manager error code doesnt get propagated as query error.
#
set MinOperationTimeout 10
addbehavior b1 * * CreateService
set NamingOperationTimeout 10
createapp fabric:/app1/query_test TestApp 1.0 appparam=PartitionCount:2 error=Timeout
verify

#
# The default services for query_test app have not been created yet. So the services query
# should return Timeout instead of internal CM errors.
#
query getapplicationservicelist ApplicationName=fabric:/app1/query_test verify

removebehavior b1

# Query Application Type Paged List

# get by app name
query getapplicationtypepagedlist ApplicationTypeName=TestApp verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.1,DefaultParameters=PartitionCount:3;,Status=Available

# get by an app name that doesn't exist
query getapplicationtypepagedlist ApplicationTypeName=TestAppDoesntExist expectempty=true
query getapplicationtypepagedlist ApplicationTypeName=TestAppDoesntExist ApplicationTypeVersion=1.0 expectempty=true

# get all results
query getapplicationtypepagedlist verify \
ApplicationTypeName=TestApp,ApplicationTypeVersion=1.1,DefaultParameters=PartitionCount:3;,Status=Available

# ----------------------------------------------------------------------
# Delete and Add
# ----------------------------------------------------------------------

set NamingOperationTimeout 30

deleteapp fabric:/app1/query_test
verify

#
# Application version V1 - Test deleting applications are filtered correctly
#
app.add versionV1 TestApp V1
app.clear versionV1

app.servicepack versionV1 ServicePackageA version=V1
app.servicepack versionV1 ServicePackageB version=V1
app.servicepack versionV1 ServicePackageC version=V1

app.servicetypes versionV1 ServicePackageA ServiceTypeA1 stateful persist constraint=(Prop1==1) metrics=M1,zero,1,0
app.servicetypes versionV1 ServicePackageB ServiceTypeB1 stateful
app.servicetypes versionV1 ServicePackageC ServiceTypeC1 stateless

app.codepack versionV1 ServicePackageA CodeA1 types=ServiceTypeA1 version=V1
app.codepack versionV1 ServicePackageB CodeB1 types=ServiceTypeB1 version=V1
app.codepack versionV1 ServicePackageC CodeC1 types=ServiceTypeC1 version=V1

app.reqservices versionV1 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3

app.upload versionV1

provisionapp versionV1

createapp fabric:/apps/a TestApp V1
createapp fabric:/apps/b TestApp V1
createapp fabric:/apps/c TestApp V1
createapp fabric:/apps/d TestApp V1
verify

# ----------------------------------------------------------------------
# Test
# ----------------------------------------------------------------------

!pause 17

queryhealth application appname=fabric:/apps/a expectedhealthstate=warning
queryhealth application appname=fabric:/apps/b expectedhealthstate=warning
queryhealth application appname=fabric:/apps/c expectedhealthstate=warning
queryhealth application appname=fabric:/apps/d expectedhealthstate=warning

query GetApplicationList verify \
ApplicationName=fabric:/apps/a,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/b,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/c,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/d,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning

set NamingOperationTimeout 15

addbehavior b1 * * DeleteServiceRequest

deleteapp fabric:/apps/b error=Timeout

query GetApplicationList verify \
ApplicationName=fabric:/apps/a,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/c,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/d,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning

removebehavior b1

deleteapp fabric:/apps/b error=ApplicationNotFound

query GetApplicationList verify \
ApplicationName=fabric:/apps/a,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/c,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning \
ApplicationName=fabric:/apps/d,ApplicationTypeName=TestApp,ApplicationTypeVersion=V1,ApplicationStatus=Ready,HealthState=warning


#
# Application for SRPP testing
#
app.add version30 SRPPTestApp 1.0
app.clear version30

app.servicepack version30 ServicePackageA version=1.0
app.servicetypes version30 ServicePackageA ServiceTypeA1 stateful persist constraint=(Prop1==1) metrics=M1,zero,1,0
app.codepack version30 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0

app.reqservices version30 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version30 ServiceExcludeProcess2 ServiceTypeA1 stateful partition=1 replica=5 servicePackageActivationMode=ExclusiveProcess
app.reqservices version30 ServiceSharedProcess2 ServiceTypeA1 stateful partition=1 replica=5 servicePackageActivationMode=SharedProcess

app.upload version30
provisionapp version30

createapp fabric:/srpp_test SRPPTestApp 1.0

# wait for new app to be placed.
!pause 20

# The "+" at the end of ServiceTypeName is a special character used to distinguish the otherwise indistinguishable return results.
# The returned results have the same everything other than activation ID, which we cannot properly test here, since we don't know what the ID will be
# Instead, the "+" just marks the presence of a deployed service type with a non null/empty activation ID
# Because of just the "+" symbol, for testing purposes we only allow up to one instance of the "duplicated" result
query getservicetypelistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/srpp_test ServiceManifestName=ServicePackageA verify ServiceTypeName=ServiceTypeA1 ServiceTypeName=ServiceTypeA1+

query getservicetypelistdeployedonnode NodeName=nodeid:10 ApplicationName=fabric:/srpp_test ServiceManifestName=ServicePackageA verify ServiceTypeName=ServiceTypeA1,CodePackageName=CodeA1,ServiceManifestName=ServicePackageA ServiceTypeName=ServiceTypeA1+,CodePackageName=CodeA1,ServiceManifestName=ServicePackageA 

!q
