#
# Checks health caching logic for cluster health query/
#

votes 10
cmservice 3 1
namingservice 3 1 1
fmservice 3 1

set DummyPLBEnabled true
set HealthOperationTimeout 5
set HealthReportSendInterval 0
set HealthReportRetrySendInterval 1
set QueryOperationRetryDelay 1
set HealthStoreCleanupInterval 5
set HealthStoreCleanupGraceInterval 5

# Disable slow commits reports so when test runs under load health isn't impacted
set SlowCommitCountThreshold 100000

cleantest
+10
+20
+30
+40
+50
verify

# Wait for system reports to arrive at HM
queryhealth cluster expectedhealthstate=ok expectedstates=nodes-ok:5;apps-ok:1 includeSystemAppStats=false \
    stats=nodes-ok:5;apps-0;services-0;partitions-0;replicas-0;deployedapps-0;deployedservicepackages-0

app.add version10 TestApp 1.0
app.clear version10
app.servicepack version10 ServicePackageA version=1.0
app.servicepack version10 ServicePackageB version=1.0
app.servicetypes version10 ServicePackageA ServiceTypeA1 stateful
app.servicetypes version10 ServicePackageB ServiceTypeB1 stateless
app.codepack version10 ServicePackageA CodeA1 types=ServiceTypeA1 version=1.0
app.codepack version10 ServicePackageB CodeB1 types=ServiceTypeB1 version=1.0
app.reqservices version10 ServiceA1 ServiceTypeA1 stateful partition=1 replica=3
app.reqservices version10 ServiceB1 ServiceTypeB1 stateless partition=1 instance=3
app.upload version10
provisionapp version10

createapp fabric:/app1 TestApp 1.0 
verify

queryhealth cluster expectedhealthstate=ok \
    stats=apps-ok:1;services-ok:2;partitions-ok:2;replicas-ok:6;deployedapps-ok:3;deployedservicepackages-ok:6;nodes-ok:5

createapp fabric:/app2 TestApp 1.0 
verify

queryhealth cluster expectedhealthstate=ok \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

###########################################
# Caching algorithm:
# If a query has no health policy specified and takes longer than configured time,
# partial cache health is cached (without events and children states) and a timer is started to compute query in background.
# If query takes x, we cache if x + StatisticsDurationOffset > MaxStatisticsDurationBeforeCaching.
# The timer is set to fire at 2 * (x + StatisticsDurationOffset).
# A query can use the cached result if it doesn't specify the policies and doesn't need the children.
# If a query can't use the cached results, a new evaluation is done. Results for this evaluation are again cached if there is no policy specified.
# Every time the timer fires, health is re-evaluated. If duration takes less, timer is cancelled.
############################################

# Introduce artificial delay for health evaluation
set StatisticsDurationOffset 60

############################################
# Testcase: cache cluster health when query takes long time
############################################

# No health policy specified, so results are cached.
# Timer will fire at > StatisticsDurationOffset * 2
queryhealth cluster expectedhealthstate=ok \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

# Report health on a child
reporthealth service servicename=fabric:/app1/ServiceA1 sequencenumber=1 healthstate=error immediate=true
queryhealth service servicename=fabric:/app1/ServiceA1 expectedhealthstate=error stats=partitions-ok:1;replicas-ok:3

queryhealth application appname=fabric:/app1 expectedhealthstate=error \
    stats=services-ok:1,error:1;partitions-ok:2;replicas-ok:6;deployedapps-ok:3;deployedservicepackages-ok:6

# Call cluster health without requesting nodes and apps - cached value is used.
# Cluster health doesn't expose the updated children states, just returns the cached value.
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=ok \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

# Report health on cluster
reporthealth cluster sequencenumber=1 healthstate=warning

# Call cluster health without requesting nodes and apps - cached value is used,
# but the cluster events are exposed
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=warning expectedreason=event,FabricTest_Source,FabricTest_Property \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

############################################
# Testcase: Cluster health with health policies can't be cached
############################################
!string jsoapppolicies1 {"ApplicationHealthPolicyMap":[{\
    "Key":"fabric:/app1",\
    "Value":{"DefaultServiceTypeHealthPolicy":{"MaxPercentUnhealthyServices":75}}\
    }]}

queryhealth cluster apphealthpolicies=<string.jsoapppolicies1> expectedhealthstate=warning \
    stats=apps-ok:1,warning:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

# Call cluster health without requesting nodes and apps - cached value is used, because previous calls didn't invalidate cache
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=warning expectedreason=event,FabricTest_Source,FabricTest_Property \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

############################################
# Testcase: Cluster health with no health policies 
# but with nodes and apps can't use cached value, but will update it.
############################################
queryhealth cluster expectedhealthstate=error \
    stats=apps-ok:1,error:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

reporthealth service servicename=fabric:/app1/ServiceA1 sequencenumber=2 healthstate=ok immediate=true
queryhealth service servicename=fabric:/app1/ServiceA1 expectedhealthstate=ok stats=partitions-ok:1;replicas-ok:3

queryhealth application appname=fabric:/app1 expectedhealthstate=ok \
    stats=services-ok:2;partitions-ok:2;replicas-ok:6;deployedapps-ok:3;deployedservicepackages-ok:6
    
# Query health with no nodes and apps uses cached value
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=error \
    stats=apps-ok:1,error:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

!string jsonclusterpolicy {\
    "ConsiderWarningAsError":false,\
    "MaxPercentUnhealthyNodes":0,\
    "MaxPercentUnhealthyApplications":0\
}\

# Query health with cluster policy can't use or update the cached value
queryhealth cluster jsonpolicy=<string.jsonclusterpolicy> expectedhealthstate=warning expectedreason=event,FabricTest_Source,FabricTest_Property \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

# Query health with no nodes and apps uses cached value
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=error \
    stats=apps-ok:1,error:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

############################################
# Testcase: Cache timer updates the health.
############################################

# Set offset to smaller value so timer can fire
set StatisticsDurationOffset 3

# Query health with nodes and apps can't use cached value, re-evaluate and cache value.
# Timer is set to fire in ~ 2 * offset
queryhealth cluster expectedhealthstate=warning \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

# Query health with no nodes and apps uses cached value
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=warning expectedreason=event,FabricTest_Source,FabricTest_Property \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

reporthealth service servicename=fabric:/app1/ServiceA1 sequencenumber=3 healthstate=error immediate=true
queryhealth service servicename=fabric:/app1/ServiceA1 expectedhealthstate=error stats=partitions-ok:1;replicas-ok:3

queryhealth application appname=fabric:/app1 expectedhealthstate=error \
    stats=services-ok:1,error:1;partitions-ok:2;replicas-ok:6;deployedapps-ok:3;deployedservicepackages-ok:6

# The timer fires and the health is eventually updated.
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=error \
    stats=apps-ok:1,error:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

reporthealth service servicename=fabric:/app1/ServiceA1 sequencenumber=4 healthstate=ok immediate=true
queryhealth service servicename=fabric:/app1/ServiceA1 expectedhealthstate=ok stats=partitions-ok:1;replicas-ok:3

# The timer fires and the health is eventually updated.
queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=warning \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

############################################
# Testcase: Cache timer updates the health.
############################################

# Disable delay. The evaluation is fast, so timer will be disabled on first evaluation.
set StatisticsDurationOffset 0.2

# Cluster health without policies and with nodes triggers re-evaluation, since it's quick, timer is disabled
queryhealth cluster applicationsfilter=none expectedhealthstate=warning \
    stats=apps-ok:2;services-ok:4;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5

reporthealth service servicename=fabric:/app1/ServiceA1 sequencenumber=5 healthstate=error immediate=true
queryhealth service servicename=fabric:/app1/ServiceA1 expectedhealthstate=error

queryhealth cluster nodesfilter=none applicationsfilter=none expectedhealthstate=error \
    stats=apps-ok:1,error:1;services-ok:3,error:1;partitions-ok:4;replicas-ok:12;deployedapps-ok:6;deployedservicepackages-ok:12;nodes-ok:5


!q
